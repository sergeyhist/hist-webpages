/*! For license information please see filter.e22177315498752d8182.js.LICENSE.txt */
(()=>{var t={545:function(t){t.exports=function(){"use strict";var t={d:function(e,i){for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}},e={};t.d(e,{default:function(){return W}});var i={days:"days",months:"months",years:"years",day:"day",month:"month",year:"year",eventChangeViewDate:"changeViewDate",eventChangeCurrentView:"changeCurrentView",eventChangeFocusDate:"changeFocusDate",eventChangeSelectedDate:"changeSelectedDate",eventChangeTime:"changeTime",eventChangeLastSelectedDate:"changeLastSelectedDate",actionSelectDate:"selectDate",actionUnselectDate:"unselectDate",cssClassWeekend:"-weekend-"},s={classes:"",inline:!1,locale:{days:["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"],daysShort:["Вос","Пон","Вто","Сре","Чет","Пят","Суб"],daysMin:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],months:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],monthsShort:["Янв","Фев","Мар","Апр","Май","Июн","Июл","Авг","Сен","Окт","Ноя","Дек"],today:"Сегодня",clear:"Очистить",dateFormat:"dd.MM.yyyy",timeFormat:"HH:mm",firstDay:1},startDate:new Date,firstDay:"",weekends:[6,0],dateFormat:"",altField:"",altFieldDateFormat:"T",toggleSelected:!0,keyboardNav:!0,selectedDates:!1,container:"",isMobile:!1,visible:!1,position:"bottom left",offset:12,view:i.days,minView:i.days,showOtherMonths:!0,selectOtherMonths:!0,moveToOtherMonthsOnSelect:!0,showOtherYears:!0,selectOtherYears:!0,moveToOtherYearsOnSelect:!0,minDate:"",maxDate:"",disableNavWhenOutOfRange:!0,multipleDates:!1,multipleDatesSeparator:", ",range:!1,dynamicRange:!0,buttons:!1,monthsField:"monthsShort",showEvent:"focus",autoClose:!1,prevHtml:'<svg><path d="M 17,12 l -5,5 l 5,5"></path></svg>',nextHtml:'<svg><path d="M 14,12 l 5,5 l -5,5"></path></svg>',navTitles:{days:"MMMM, <i>yyyy</i>",months:"yyyy",years:"yyyy1 - yyyy2"},timepicker:!1,onlyTimepicker:!1,dateTimeSeparator:" ",timeFormat:"",minHours:0,maxHours:24,minMinutes:0,maxMinutes:59,hoursStep:1,minutesStep:1,onSelect:!1,onChangeViewDate:!1,onChangeView:!1,onRenderCell:!1,onShow:!1,onHide:!1,onClickDayName:!1};function n(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return"string"==typeof t?e.querySelector(t):t}function o(){let{tagName:t="div",className:e="",innerHtml:i="",id:s="",attrs:n={}}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=document.createElement(t);if(e&&o.classList.add(...e.split(" ")),s&&(o.id=s),i&&(o.innerHTML=i),n)for(let t in n)o.setAttribute(t,n[t]);return o}function a(t,e){for(let[i,s]of Object.entries(e))t.setAttribute(i,s);return t}function r(t){return new Date(t.getFullYear(),t.getMonth()+1,0).getDate()}function l(t){let e=t.getHours(),i=e%12==0?12:e%12;return{year:t.getFullYear(),month:t.getMonth(),fullMonth:t.getMonth()+1<10?"0"+(t.getMonth()+1):t.getMonth()+1,date:t.getDate(),fullDate:t.getDate()<10?"0"+t.getDate():t.getDate(),day:t.getDay(),hours:e,fullHours:h(e),hours12:i,fullHours12:h(i),minutes:t.getMinutes(),fullMinutes:t.getMinutes()<10?"0"+t.getMinutes():t.getMinutes()}}function h(t){return t<10?"0"+t:t}function u(t){let e=10*Math.floor(t.getFullYear()/10);return[e,e+9]}function c(){let t=[];for(var e=arguments.length,i=new Array(e),s=0;s<e;s++)i[s]=arguments[s];return i.forEach((e=>{if("object"==typeof e)for(let i in e)e[i]&&t.push(i);else e&&t.push(e)})),t.join(" ")}function d(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.days;if(!t||!e)return!1;let n=l(t),o=l(e);return{[i.days]:n.date===o.date&&n.month===o.month&&n.year===o.year,[i.months]:n.month===o.month&&n.year===o.year,[i.years]:n.year===o.year}[s]}function p(t,e,i){let s=g(t,!1).getTime(),n=g(e,!1).getTime();return i?s>=n:s>n}function f(t,e){return!p(t,e,!0)}function g(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=new Date(t.getTime());return"boolean"!=typeof e||e||m(i),i}function m(t){return t.setHours(0,0,0,0),t}function v(t,e,i){t.length?t.forEach((t=>{t.addEventListener(e,i)})):t.addEventListener(e,i)}function _(t,e){return!(!t||t===document||t instanceof DocumentFragment)&&(t.matches(e)?t:_(t.parentNode,e))}function y(t,e,i){return t>i?i:t<e?e:t}function b(t){for(var e=arguments.length,i=new Array(e>1?e-1:0),s=1;s<e;s++)i[s-1]=arguments[s];return i.filter((t=>t)).forEach((e=>{for(let[i,s]of Object.entries(e))if(void 0!==s&&"[object Object]"===s.toString()){let e=void 0!==t[i]?t[i].toString():void 0,n=s.toString(),o=Array.isArray(s)?[]:{};t[i]=t[i]?e!==n?o:t[i]:o,b(t[i],s)}else t[i]=s})),t}function k(t){let e=t;return t instanceof Date||(e=new Date(t)),isNaN(e.getTime())&&(console.log('Unable to convert value "'.concat(t,'" to Date object')),e=!1),e}function w(t){let e="\\s|\\.|-|/|\\\\|,|\\$|\\!|\\?|:|;";return new RegExp("(^|>|"+e+")("+t+")($|<|"+e+")","g")}function x(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class C{constructor(){let{type:t,date:e,dp:i,opts:s,body:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};x(this,"focus",(()=>{this.$cell.classList.add("-focus-"),this.focused=!0})),x(this,"removeFocus",(()=>{this.$cell.classList.remove("-focus-"),this.focused=!1})),x(this,"select",(()=>{this.$cell.classList.add("-selected-"),this.selected=!0})),x(this,"removeSelect",(()=>{this.$cell.classList.remove("-selected-","-range-from-","-range-to-"),this.selected=!1})),x(this,"onChangeSelectedDate",(()=>{this.isDisabled||(this._handleSelectedStatus(),this.opts.range&&this._handleRangeStatus())})),x(this,"onChangeFocusDate",(t=>{if(!t)return void(this.focused&&this.removeFocus());let e=d(t,this.date,this.type);e?this.focus():!e&&this.focused&&this.removeFocus(),this.opts.range&&this._handleRangeStatus()})),x(this,"render",(()=>(this.$cell.innerHTML=this._getHtml(),this.$cell.adpCell=this,this.$cell))),this.type=t,this.singleType=this.type.slice(0,-1),this.date=e,this.dp=i,this.opts=s,this.body=n,this.customData=!1,this.init()}init(){let{range:t,onRenderCell:e}=this.opts;e&&(this.customData=e({date:this.date,cellType:this.singleType,datepicker:this.dp})),this._createElement(),this._bindDatepickerEvents(),this._handleInitialFocusStatus(),this.dp.hasSelectedDates&&(this._handleSelectedStatus(),t&&this._handleRangeStatus())}_bindDatepickerEvents(){this.dp.on(i.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.on(i.eventChangeFocusDate,this.onChangeFocusDate)}unbindDatepickerEvents(){this.dp.off(i.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.off(i.eventChangeFocusDate,this.onChangeFocusDate)}_createElement(){let{year:t,month:e,date:i}=l(this.date);this.$cell=o({className:this._getClassName(),attrs:{"data-year":t,"data-month":e,"data-date":i}})}_getClassName(){var t,e;let s=new Date,{selectOtherMonths:n,selectOtherYears:o}=this.opts,{minDate:a,maxDate:r}=this.dp,{day:h}=l(this.date),u=this._isOutOfMinMaxRange(),p=null===(t=this.customData)||void 0===t?void 0:t.disabled,f=c("air-datepicker-cell","-".concat(this.singleType,"-"),{"-current-":d(s,this.date,this.type),"-min-date-":a&&d(a,this.date,this.type),"-max-date-":r&&d(r,this.date,this.type)}),g="";switch(this.type){case i.days:g=c({"-weekend-":this.dp.isWeekend(h),"-other-month-":this.isOtherMonth,"-disabled-":this.isOtherMonth&&!n||u||p});break;case i.months:g=c({"-disabled-":u||p});break;case i.years:g=c({"-other-decade-":this.isOtherDecade,"-disabled-":u||this.isOtherDecade&&!o||p})}return c(f,g,null===(e=this.customData)||void 0===e?void 0:e.classes)}_getHtml(){var t;let{year:e,month:s,date:n}=l(this.date),{showOtherMonths:o,showOtherYears:a}=this.opts;if(null!==(t=this.customData)&&void 0!==t&&t.html)return this.customData.html;switch(this.type){case i.days:return!o&&this.isOtherMonth?"":n;case i.months:return this.dp.locale[this.opts.monthsField][s];case i.years:return!a&&this.isOtherDecade?"":e}}_isOutOfMinMaxRange(){let{minDate:t,maxDate:e}=this.dp,{type:s,date:n}=this,{month:o,year:a,date:r}=l(n),h=s===i.days,u=s===i.years,c=!!t&&new Date(a,u?t.getMonth():o,h?r:t.getDate()),d=!!e&&new Date(a,u?e.getMonth():o,h?r:e.getDate());return t&&e?f(c,t)||p(d,e):t?f(c,t):e?p(d,e):void 0}destroy(){this.unbindDatepickerEvents()}_handleRangeStatus(){let{rangeDateFrom:t,rangeDateTo:e}=this.dp,i=c({"-in-range-":t&&e&&(s=this.date,n=t,o=e,p(s,n)&&f(s,o)),"-range-from-":t&&d(this.date,t,this.type),"-range-to-":e&&d(this.date,e,this.type)});var s,n,o;this.$cell.classList.remove("-range-from-","-range-to-","-in-range-"),i&&this.$cell.classList.add(...i.split(" "))}_handleSelectedStatus(){let t=this.dp._checkIfDateIsSelected(this.date,this.type);t?this.select():!t&&this.selected&&this.removeSelect()}_handleInitialFocusStatus(){d(this.dp.focusDate,this.date,this.type)&&this.focus()}get isDisabled(){return this.$cell.matches(".-disabled-")}get isOtherMonth(){return this.dp.isOtherMonth(this.date)}get isOtherDecade(){return this.dp.isOtherDecade(this.date)}}function D(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}let S={[i.days]:'<div class="air-datepicker-body--day-names"></div>'+'<div class="air-datepicker-body--cells -'.concat(i.days,'-"></div>'),[i.months]:'<div class="air-datepicker-body--cells -'.concat(i.months,'-"></div>'),[i.years]:'<div class="air-datepicker-body--cells -'.concat(i.years,'-"></div>')};class T{constructor(t){let{dp:e,type:s,opts:n}=t;D(this,"handleClick",(t=>{let e=t.target.adpCell;if(e.isDisabled)return;if(!this.dp.isMinViewReached)return void this.dp.down();let i=this.dp._checkIfDateIsSelected(e.date,e.type);i?this.dp._handleAlreadySelectedDates(i,e.date):this.dp.selectDate(e.date)})),D(this,"handleDayNameClick",(t=>{let e=t.target.getAttribute("data-day-index");this.opts.onClickDayName({dayIndex:Number(e),datepicker:this.dp})})),D(this,"onChangeCurrentView",(t=>{t!==this.type?this.hide():(this.show(),this.render())})),D(this,"onMouseOverCell",(t=>{let e=_(t.target,".air-datepicker-cell");this.dp.setFocusDate(!!e&&e.adpCell.date)})),D(this,"onMouseOutCell",(()=>{this.dp.setFocusDate(!1)})),D(this,"onClickBody",(t=>{let{onClickDayName:e}=this.opts,i=t.target;i.closest(".air-datepicker-cell")&&this.handleClick(t),e&&i.closest(".air-datepicker-body--day-name")&&this.handleDayNameClick(t)})),D(this,"onMouseDown",(t=>{this.pressed=!0;let e=_(t.target,".air-datepicker-cell"),i=e&&e.adpCell;d(i.date,this.dp.rangeDateFrom)&&(this.rangeFromFocused=!0),d(i.date,this.dp.rangeDateTo)&&(this.rangeToFocused=!0)})),D(this,"onMouseMove",(t=>{if(!this.pressed||!this.dp.isMinViewReached)return;t.preventDefault();let e=_(t.target,".air-datepicker-cell"),i=e&&e.adpCell,{selectedDates:s,rangeDateTo:n,rangeDateFrom:o}=this.dp;if(!i||i.isDisabled)return;let{date:a}=i;if(2===s.length){if(this.rangeFromFocused&&!p(a,n)){let{hours:t,minutes:e}=l(o);a.setHours(t),a.setMinutes(e),this.dp.rangeDateFrom=a,this.dp.replaceDate(o,a)}if(this.rangeToFocused&&!f(a,o)){let{hours:t,minutes:e}=l(n);a.setHours(t),a.setMinutes(e),this.dp.rangeDateTo=a,this.dp.replaceDate(n,a)}}})),D(this,"onMouseUp",(()=>{this.pressed=!1,this.rangeFromFocused=!1,this.rangeToFocused=!1})),D(this,"onChangeViewDate",((t,e)=>{if(!this.isVisible)return;let s=u(t),n=u(e);switch(this.dp.currentView){case i.days:if(d(t,e,i.months))return;break;case i.months:if(d(t,e,i.years))return;break;case i.years:if(s[0]===n[0]&&s[1]===n[1])return}this.render()})),D(this,"render",(()=>{this.destroyCells(),this._generateCells(),this.cells.forEach((t=>{this.$cells.appendChild(t.render())}))})),this.dp=e,this.type=s,this.opts=n,this.cells=[],this.$el="",this.pressed=!1,this.isVisible=!0,this.init()}init(){this._buildBaseHtml(),this.type===i.days&&this.renderDayNames(),this.render(),this._bindEvents(),this._bindDatepickerEvents()}_bindEvents(){let{range:t,dynamicRange:e}=this.opts;v(this.$el,"mouseover",this.onMouseOverCell),v(this.$el,"mouseout",this.onMouseOutCell),v(this.$el,"click",this.onClickBody),t&&e&&(v(this.$el,"mousedown",this.onMouseDown),v(this.$el,"mousemove",this.onMouseMove),v(window.document,"mouseup",this.onMouseUp))}_bindDatepickerEvents(){this.dp.on(i.eventChangeViewDate,this.onChangeViewDate),this.dp.on(i.eventChangeCurrentView,this.onChangeCurrentView)}_buildBaseHtml(){this.$el=o({className:"air-datepicker-body -".concat(this.type,"-"),innerHtml:S[this.type]}),this.$names=n(".air-datepicker-body--day-names",this.$el),this.$cells=n(".air-datepicker-body--cells",this.$el)}_getDayNamesHtml(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.dp.locale.firstDay,e="",s=this.dp.isWeekend,{onClickDayName:n}=this.opts,o=t,a=0;for(;a<7;){let t=o%7,r=c("air-datepicker-body--day-name",{[i.cssClassWeekend]:s(t),"-clickable-":!!n}),l=this.dp.locale.daysMin[t];e+='<div class="'.concat(r,"\" data-day-index='").concat(t,"'>").concat(l,"</div>"),a++,o++}return e}_getDaysCells(){let{viewDate:t,locale:{firstDay:e}}=this.dp,i=r(t),{year:s,month:n}=l(t),o=new Date(s,n,1),a=new Date(s,n,i),h=o.getDay()-e,u=6-a.getDay()+e;h=h<0?h+7:h,u=u>6?u-7:u;let c=function(t,e){let{year:i,month:s,date:n}=l(t);return new Date(i,s,n-e)}(o,h),d=i+h+u,p=c.getDate(),{year:f,month:g}=l(c),m=0;for(;m<d;){let t=new Date(f,g,p+m);this._generateCell(t),m++}}_generateCell(t){let{type:e,dp:i,opts:s}=this,n=new C({type:e,dp:i,opts:s,date:t,body:this});return this.cells.push(n),n}_generateDayCells(){this._getDaysCells()}_generateMonthCells(){let{year:t}=this.dp.parsedViewDate,e=0;for(;e<12;)this.cells.push(this._generateCell(new Date(t,e))),e++}_generateYearCells(){let t=u(this.dp.viewDate),e=t[0]-1,i=t[1]+1,s=e;for(;s<=i;)this.cells.push(this._generateCell(new Date(s,0))),s++}renderDayNames(){this.$names.innerHTML=this._getDayNamesHtml()}_generateCells(){switch(this.type){case i.days:this._generateDayCells();break;case i.months:this._generateMonthCells();break;case i.years:this._generateYearCells()}}show(){this.isVisible=!0,this.$el.classList.remove("-hidden-")}hide(){this.isVisible=!1,this.$el.classList.add("-hidden-")}destroyCells(){this.cells.forEach((t=>t.destroy())),this.cells=[],this.$cells.innerHTML=""}destroy(){this.destroyCells(),this.dp.off(i.eventChangeViewDate,this.onChangeViewDate),this.dp.off(i.eventChangeCurrentView,this.onChangeCurrentView)}}function A(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class E{constructor(t){let{dp:e,opts:i}=t;A(this,"onClickNav",(t=>{let e=_(t.target,".air-datepicker-nav--action");if(!e)return;let i=e.dataset.action;this.dp[i]()})),A(this,"onChangeViewDate",(()=>{this.render(),this._resetNavStatus(),this.handleNavStatus()})),A(this,"onChangeCurrentView",(()=>{this.render(),this._resetNavStatus(),this.handleNavStatus()})),A(this,"onClickNavTitle",(()=>{this.dp.isFinalView||this.dp.up()})),A(this,"update",(()=>{let{prevHtml:t,nextHtml:e}=this.opts;this.$prev.innerHTML=t,this.$next.innerHTML=e,this._resetNavStatus(),this.render(),this.handleNavStatus()})),A(this,"renderDelay",(()=>{setTimeout(this.render)})),A(this,"render",(()=>{this.$title.innerHTML=this._getTitle(),function(t,e){for(let i in e)e[i]?t.classList.add(i):t.classList.remove(i)}(this.$title,{"-disabled-":this.dp.isFinalView})})),this.dp=e,this.opts=i,this.init()}init(){this._createElement(),this._buildBaseHtml(),this._defineDOM(),this.render(),this.handleNavStatus(),this._bindEvents(),this._bindDatepickerEvents()}_defineDOM(){this.$title=n(".air-datepicker-nav--title",this.$el),this.$prev=n('[data-action="prev"]',this.$el),this.$next=n('[data-action="next"]',this.$el)}_bindEvents(){this.$el.addEventListener("click",this.onClickNav),this.$title.addEventListener("click",this.onClickNavTitle)}_bindDatepickerEvents(){this.dp.on(i.eventChangeViewDate,this.onChangeViewDate),this.dp.on(i.eventChangeCurrentView,this.onChangeCurrentView),this.isNavIsFunction&&(this.dp.on(i.eventChangeSelectedDate,this.renderDelay),this.dp.opts.timepicker&&this.dp.on(i.eventChangeTime,this.render))}destroy(){this.dp.off(i.eventChangeViewDate,this.onChangeViewDate),this.dp.off(i.eventChangeCurrentView,this.onChangeCurrentView),this.isNavIsFunction&&(this.dp.off(i.eventChangeSelectedDate,this.renderDelay),this.dp.opts.timepicker&&this.dp.off(i.eventChangeTime,this.render))}_createElement(){this.$el=o({tagName:"nav",className:"air-datepicker-nav"})}_getTitle(){let{dp:t,opts:e}=this,i=e.navTitles[t.currentView];return"function"==typeof i?i(t):t.formatDate(t.viewDate,i)}handleNavStatus(){let{disableNavWhenOutOfRange:t}=this.opts,{minDate:e,maxDate:s}=this.dp;if(!e&&!s||!t)return;let{year:n,month:o}=this.dp.parsedViewDate,a=!!e&&l(e),r=!!s&&l(s);switch(this.dp.currentView){case i.days:e&&a.month>=o&&a.year>=n&&this._disableNav("prev"),s&&r.month<=o&&r.year<=n&&this._disableNav("next");break;case i.months:e&&a.year>=n&&this._disableNav("prev"),s&&r.year<=n&&this._disableNav("next");break;case i.years:{let t=u(this.dp.viewDate);e&&a.year>=t[0]&&this._disableNav("prev"),s&&r.year<=t[1]&&this._disableNav("next");break}}}_disableNav(t){n('[data-action="'+t+'"]',this.$el).classList.add("-disabled-")}_resetNavStatus(){!function(t){for(var e=arguments.length,i=new Array(e>1?e-1:0),s=1;s<e;s++)i[s-1]=arguments[s];t.length?t.forEach((t=>{t.classList.remove(...i)})):t.classList.remove(...i)}(this.$el.querySelectorAll(".air-datepicker-nav--action"),"-disabled-")}_buildBaseHtml(){let{prevHtml:t,nextHtml:e}=this.opts;this.$el.innerHTML='<div class="air-datepicker-nav--action" data-action="prev">'.concat(t,"</div>")+'<div class="air-datepicker-nav--title"></div>'+'<div class="air-datepicker-nav--action" data-action="next">'.concat(e,"</div>")}get isNavIsFunction(){let{navTitles:t}=this.opts;return Object.keys(t).find((e=>"function"==typeof t[e]))}}var M={today:{content:t=>t.locale.today,onClick:t=>t.setViewDate(new Date)},clear:{content:t=>t.locale.clear,onClick:t=>t.clear()}};class I{constructor(t){let{dp:e,opts:i}=t;this.dp=e,this.opts=i,this.init()}init(){this.createElement(),this.render()}createElement(){this.$el=o({className:"air-datepicker-buttons"})}destroy(){this.$el.parentNode.removeChild(this.$el)}clearHtml(){return this.$el.innerHTML="",this}generateButtons(){let{buttons:t}=this.opts;Array.isArray(t)||(t=[t]),t.forEach((t=>{let e=t;"string"==typeof t&&M[t]&&(e=M[t]);let i=this.createButton(e);e.onClick&&this.attachEventToButton(i,e.onClick),this.$el.appendChild(i)}))}attachEventToButton(t,e){t.addEventListener("click",(()=>{e(this.dp)}))}createButton(t){let{content:e,className:i,tagName:s="button",attrs:n={}}=t,a="function"==typeof e?e(this.dp):e;return o({tagName:s,innerHtml:"<span tabindex='-1'>".concat(a,"</span>"),className:c("air-datepicker-button",i),attrs:n})}render(){this.generateButtons()}}function P(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class F{constructor(){let{opts:t,dp:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};P(this,"toggleTimepickerIsActive",(t=>{this.dp.timepickerIsActive=t})),P(this,"onChangeSelectedDate",(t=>{let{date:e,updateTime:i=!1}=t;e&&(this.setMinMaxTime(e),this.setCurrentTime(!!i&&e),this.addTimeToDate(e))})),P(this,"onChangeLastSelectedDate",(t=>{t&&(this.setTime(t),this.render())})),P(this,"onChangeInputRange",(t=>{let e=t.target;this[e.getAttribute("name")]=e.value,this.updateText(),this.dp.trigger(i.eventChangeTime,{hours:this.hours,minutes:this.minutes})})),P(this,"onMouseEnterLeave",(t=>{let e=t.target.getAttribute("name"),i=this.$minutesText;"hours"===e&&(i=this.$hoursText),i.classList.toggle("-focus-")})),P(this,"onFocus",(()=>{this.toggleTimepickerIsActive(!0)})),P(this,"onBlur",(()=>{this.toggleTimepickerIsActive(!1)})),this.opts=t,this.dp=e;let{timeFormat:s}=this.dp.locale;s&&(s.match(w("h"))||s.match(w("hh")))&&(this.ampm=!0),this.init()}init(){this.setTime(this.dp.lastSelectedDate||this.dp.viewDate),this.createElement(),this.buildHtml(),this.defineDOM(),this.render(),this.bindDatepickerEvents(),this.bindDOMEvents()}bindDatepickerEvents(){this.dp.on(i.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.on(i.eventChangeLastSelectedDate,this.onChangeLastSelectedDate)}bindDOMEvents(){let t="input";navigator.userAgent.match(/trident/gi)&&(t="change"),v(this.$ranges,t,this.onChangeInputRange),v(this.$ranges,"mouseenter",this.onMouseEnterLeave),v(this.$ranges,"mouseleave",this.onMouseEnterLeave),v(this.$ranges,"focus",this.onFocus),v(this.$ranges,"mousedown",this.onFocus),v(this.$ranges,"blur",this.onBlur)}createElement(){this.$el=o({className:c("air-datepicker-time",{"-am-pm-":this.dp.ampm})})}destroy(){this.dp.off(i.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.off(i.eventChangeLastSelectedDate,this.onChangeLastSelectedDate),this.$el.parentNode.removeChild(this.$el)}buildHtml(){let{ampm:t,hours:e,displayHours:i,minutes:s,minHours:n,minMinutes:o,maxHours:a,maxMinutes:r,dayPeriod:l,opts:{hoursStep:u,minutesStep:c}}=this;this.$el.innerHTML='<div class="air-datepicker-time--current">'+'   <span class="air-datepicker-time--current-hours">'.concat(h(i),"</span>")+'   <span class="air-datepicker-time--current-colon">:</span>'+'   <span class="air-datepicker-time--current-minutes">'.concat(h(s),"</span>")+"   ".concat(t?"<span class='air-datepicker-time--current-ampm'>".concat(l,"</span>"):"")+'</div><div class="air-datepicker-time--sliders">   <div class="air-datepicker-time--row">'+'      <input type="range" name="hours" value="'.concat(e,'" min="').concat(n,'" max="').concat(a,'" step="').concat(u,'"/>')+'   </div>   <div class="air-datepicker-time--row">'+'      <input type="range" name="minutes" value="'.concat(s,'" min="').concat(o,'" max="').concat(r,'" step="').concat(c,'"/>')+"   </div></div>"}defineDOM(){let t=t=>n(t,this.$el);this.$ranges=this.$el.querySelectorAll('[type="range"]'),this.$hours=t('[name="hours"]'),this.$minutes=t('[name="minutes"]'),this.$hoursText=t(".air-datepicker-time--current-hours"),this.$minutesText=t(".air-datepicker-time--current-minutes"),this.$ampm=t(".air-datepicker-time--current-ampm")}setTime(t){this.setMinMaxTime(t),this.setCurrentTime(t)}addTimeToDate(t){t&&(t.setHours(this.hours),t.setMinutes(this.minutes))}setMinMaxTime(t){if(this.setMinMaxTimeFromOptions(),t){let{minDate:e,maxDate:i}=this.dp;e&&d(t,e)&&this.setMinTimeFromMinDate(e),i&&d(t,i)&&this.setMaxTimeFromMaxDate(i)}}setCurrentTime(t){let{hours:e,minutes:i}=t?l(t):this;this.hours=y(e,this.minHours,this.maxHours),this.minutes=y(i,this.minMinutes,this.maxMinutes)}setMinMaxTimeFromOptions(){let{minHours:t,minMinutes:e,maxHours:i,maxMinutes:s}=this.opts;this.minHours=y(t,0,23),this.minMinutes=y(e,0,59),this.maxHours=y(i,0,23),this.maxMinutes=y(s,0,59)}setMinTimeFromMinDate(t){let{lastSelectedDate:e}=this.dp;this.minHours=t.getHours(),e&&e.getHours()>t.getHours()?this.minMinutes=this.opts.minMinutes:this.minMinutes=t.getMinutes()}setMaxTimeFromMaxDate(t){let{lastSelectedDate:e}=this.dp;this.maxHours=t.getHours(),e&&e.getHours()<t.getHours()?this.maxMinutes=this.opts.maxMinutes:this.maxMinutes=t.getMinutes()}getDayPeriod(t,e){let i=t,s=Number(t);t instanceof Date&&(i=l(t),s=Number(i.hours));let n="am";if(e||this.ampm){switch(!0){case 12===s:case s>11:n="pm"}s=s%12==0?12:s%12}return{hours:s,dayPeriod:n}}updateSliders(){a(this.$hours,{min:this.minHours,max:this.maxHours}).value=this.hours,a(this.$minutes,{min:this.minMinutes,max:this.maxMinutes}).value=this.minutes}updateText(){this.$hoursText.innerHTML=h(this.displayHours),this.$minutesText.innerHTML=h(this.minutes),this.ampm&&(this.$ampm.innerHTML=this.dayPeriod)}set hours(t){this._hours=t;let{hours:e,dayPeriod:i}=this.getDayPeriod(t);this.displayHours=e,this.dayPeriod=i}get hours(){return this._hours}render(){this.updateSliders(),this.updateText()}}function O(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class H{constructor(t){let{dp:e,opts:i}=t;O(this,"pressedKeys",new Set),O(this,"hotKeys",new Map([[[["Control","ArrowRight"],["Control","ArrowUp"]],t=>t.month++],[[["Control","ArrowLeft"],["Control","ArrowDown"]],t=>t.month--],[[["Shift","ArrowRight"],["Shift","ArrowUp"]],t=>t.year++],[[["Shift","ArrowLeft"],["Shift","ArrowDown"]],t=>t.year--],[[["Alt","ArrowRight"],["Alt","ArrowUp"]],t=>t.year+=10],[[["Alt","ArrowLeft"],["Alt","ArrowDown"]],t=>t.year-=10],[["Control","Shift","ArrowUp"],(t,e)=>e.up()]])),O(this,"handleHotKey",(t=>{let e=this.hotKeys.get(t),i=l(this.getInitialFocusDate());e(i,this.dp);let{year:s,month:n,date:o}=i,a=r(new Date(s,n));a<o&&(o=a);let h=this.dp.getClampedDate(new Date(s,n,o));this.dp.setFocusDate(h,{viewDateTransition:!0})})),O(this,"isHotKeyPressed",(()=>{let t=!1,e=this.pressedKeys.size,i=t=>this.pressedKeys.has(t);for(let[s]of this.hotKeys){if(t)break;if(Array.isArray(s[0]))s.forEach((n=>{t||e!==n.length||(t=n.every(i)&&s)}));else{if(e!==s.length)continue;t=s.every(i)&&s}}return t})),O(this,"isArrow",(t=>t>=37&&t<=40)),O(this,"onKeyDown",(t=>{let{key:e,which:i}=t,{dp:s,dp:{focusDate:n},opts:o}=this;this.registerKey(e);let a=this.isHotKeyPressed();if(a)return t.preventDefault(),void this.handleHotKey(a);if(this.isArrow(i))return t.preventDefault(),void this.focusNextCell(e);if("Enter"===e){if(s.currentView!==o.minView)return void s.down();if(n){let t=s._checkIfDateIsSelected(n);return void(t?s._handleAlreadySelectedDates(t,n):s.selectDate(n))}}"Escape"===e&&this.dp.hide()})),O(this,"onKeyUp",(t=>{this.removeKey(t.key)})),this.dp=e,this.opts=i,this.init()}init(){this.bindKeyboardEvents()}bindKeyboardEvents(){let{$el:t}=this.dp;t.addEventListener("keydown",this.onKeyDown),t.addEventListener("keyup",this.onKeyUp)}destroy(){let{$el:t}=this.dp;t.removeEventListener("keydown",this.onKeyDown),t.removeEventListener("keyup",this.onKeyUp),this.hotKeys=null,this.pressedKeys=null}getInitialFocusDate(){let{focusDate:t,currentView:e,selectedDates:s,parsedViewDate:{year:n,month:o}}=this.dp,a=t||s[s.length-1];if(!a)switch(e){case i.days:a=new Date(n,o,(new Date).getDate());break;case i.months:a=new Date(n,o,1);break;case i.years:a=new Date(n,0,1)}return a}focusNextCell(t){let e=this.getInitialFocusDate(),{currentView:s}=this.dp,{days:n,months:o,years:a}=i,r=l(e),h=r.year,u=r.month,c=r.date;switch(t){case"ArrowLeft":s===n&&(c-=1),s===o&&(u-=1),s===a&&(h-=1);break;case"ArrowUp":s===n&&(c-=7),s===o&&(u-=3),s===a&&(h-=4);break;case"ArrowRight":s===n&&(c+=1),s===o&&(u+=1),s===a&&(h+=1);break;case"ArrowDown":s===n&&(c+=7),s===o&&(u+=3),s===a&&(h+=4)}let d=this.dp.getClampedDate(new Date(h,u,c));this.dp.setFocusDate(d,{viewDateTransition:!0})}registerKey(t){this.pressedKeys.add(t)}removeKey(t){this.pressedKeys.delete(t)}}let N={on(t,e){this.__events||(this.__events={}),this.__events[t]?this.__events[t].push(e):this.__events[t]=[e]},off(t,e){this.__events&&this.__events[t]&&(this.__events[t]=this.__events[t].filter((t=>t!==e)))},removeAllEvents(){this.__events={}},trigger(t){for(var e=arguments.length,i=new Array(e>1?e-1:0),s=1;s<e;s++)i[s-1]=arguments[s];this.__events&&this.__events[t]&&this.__events[t].forEach((t=>{t(...i)}))}};function L(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}let B="",R="",z="",j=!1;class W{constructor(t,e){var a=this;if(L(this,"viewIndexes",[i.days,i.months,i.years]),L(this,"next",(()=>{let{year:t,month:e}=this.parsedViewDate;switch(this.currentView){case i.days:this.setViewDate(new Date(t,e+1,1));break;case i.months:this.setViewDate(new Date(t+1,e,1));break;case i.years:this.setViewDate(new Date(t+10,0,1))}})),L(this,"prev",(()=>{let{year:t,month:e}=this.parsedViewDate;switch(this.currentView){case i.days:this.setViewDate(new Date(t,e-1,1));break;case i.months:this.setViewDate(new Date(t-1,e,1));break;case i.years:this.setViewDate(new Date(t-10,0,1))}})),L(this,"_finishHide",(()=>{this.hideAnimation=!1,this._destroyComponents(),this.$container.removeChild(this.$datepicker)})),L(this,"setPosition",(function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("function"==typeof(t=t||a.opts.position))return void(a.customHide=t({$datepicker:a.$datepicker,$target:a.$el,$pointer:a.$pointer,isViewChange:e,done:a._finishHide}));let i,s,{isMobile:n}=a.opts,o=a.$el.getBoundingClientRect(),r=a.$el.getBoundingClientRect(),l=a.$datepicker.offsetParent,h=a.$el.offsetParent,u=a.$datepicker.getBoundingClientRect(),c=t.split(" "),d=window.scrollY,p=window.scrollX,f=a.opts.offset,g=c[0],m=c[1];if(n)a.$datepicker.style.cssText="left: 50%; top: 50%";else{if(l===h&&l!==document.body&&(r={top:a.$el.offsetTop,left:a.$el.offsetLeft,width:o.width,height:a.$el.offsetHeight},d=0,p=0),l!==h&&l!==document.body){let t=l.getBoundingClientRect();r={top:o.top-t.top,left:o.left-t.left,width:o.width,height:o.height},d=0,p=0}switch(g){case"top":i=r.top-u.height-f;break;case"right":s=r.left+r.width+f;break;case"bottom":i=r.top+r.height+f;break;case"left":s=r.left-u.width-f}switch(m){case"top":i=r.top;break;case"right":s=r.left+r.width-u.width;break;case"bottom":i=r.top+r.height-u.height;break;case"left":s=r.left;break;case"center":/left|right/.test(g)?i=r.top+r.height/2-u.height/2:s=r.left+r.width/2-u.width/2}a.$datepicker.style.cssText="left: ".concat(s+p,"px; top: ").concat(i+d,"px")}})),L(this,"_setInputValue",(()=>{let{opts:t,$altField:e,locale:{dateFormat:i}}=this,{altFieldDateFormat:s,altField:n}=t;n&&e&&(e.value=this._getInputValue(s)),this.$el.value=this._getInputValue(i)})),L(this,"_getInputValue",(t=>{let{selectedDates:e,opts:i}=this,{multipleDates:s,multipleDatesSeparator:n}=i;if(!e.length)return"";let o="function"==typeof t,a=o?t(s?e:e[0]):e.map((e=>this.formatDate(e,t)));return a=o?a:a.join(n),a})),L(this,"_checkIfDateIsSelected",(function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.days,s=!1;return a.selectedDates.some((i=>{let n=d(t,i,e);return s=n&&i,n})),s})),L(this,"_scheduleCallAfterTransition",(t=>{this._cancelScheduledCall(),t&&t(!1),this._onTransitionEnd=()=>{t&&t(!0)},this.$datepicker.addEventListener("transitionend",this._onTransitionEnd,{once:!0})})),L(this,"_cancelScheduledCall",(()=>{this.$datepicker.removeEventListener("transitionend",this._onTransitionEnd)})),L(this,"setViewDate",(t=>{if(!((t=k(t))instanceof Date))return;if(d(t,this.viewDate))return;let e=this.viewDate;this.viewDate=t;let{onChangeViewDate:s}=this.opts;if(s){let{month:t,year:e}=this.parsedViewDate;s({month:t,year:e,decade:this.curDecade})}this.trigger(i.eventChangeViewDate,t,e)})),L(this,"setFocusDate",(function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(!t||(t=k(t))instanceof Date)&&(a.focusDate=t,a.opts.range&&t&&a._handleRangeOnFocus(),a.trigger(i.eventChangeFocusDate,t,e))})),L(this,"setCurrentView",(t=>{if(this.viewIndexes.includes(t)){if(this.currentView=t,this.elIsInput&&this.visible&&this.setPosition(void 0,!0),this.trigger(i.eventChangeCurrentView,t),!this.views[t]){let e=this.views[t]=new T({dp:this,opts:this.opts,type:t});this.shouldUpdateDOM&&this.$content.appendChild(e.$el)}this.opts.onChangeView&&this.opts.onChangeView(t)}})),L(this,"_updateLastSelectedDate",(t=>{this.lastSelectedDate=t,this.trigger(i.eventChangeLastSelectedDate,t)})),L(this,"destroy",(()=>{let{showEvent:t,isMobile:e}=this.opts,i=this.$datepicker.parentNode;i&&i.removeChild(this.$datepicker),this.$el.removeEventListener(t,this._onFocus),this.$el.removeEventListener("blur",this._onBlur),window.removeEventListener("resize",this._onResize),e&&this._removeMobileAttributes(),this.keyboardNav&&this.keyboardNav.destroy(),this.views=null,this.nav=null,this.$datepicker=null,this.opts=null,this.$customContainer=null,this.viewDate=null,this.focusDate=null,this.selectedDates=null,this.rangeDateFrom=null,this.rangeDateTo=null})),L(this,"update",(t=>{let e=b({},this.opts);b(this.opts,t);let{timepicker:s,buttons:n,range:o,selectedDates:a,isMobile:r}=this.opts,l=this.visible||this.treatAsInline;this._createMinMaxDates(),this._limitViewDateByMaxMinDates(),this._handleLocale(),!e.selectedDates&&a&&this.selectDate(a),t.view&&this.setCurrentView(t.view),this._setInputValue(),e.range&&!o?(this.rangeDateTo=!1,this.rangeDateFrom=!1):!e.range&&o&&this.selectedDates.length&&(this.rangeDateFrom=this.selectedDates[0],this.rangeDateTo=this.selectedDates[1]),e.timepicker&&!s?(l&&this.timepicker.destroy(),this.timepicker=!1,this.$timepicker.parentNode.removeChild(this.$timepicker)):!e.timepicker&&s&&this._addTimepicker(),!e.buttons&&n?this._addButtons():e.buttons&&!n?(this.buttons.destroy(),this.$buttons.parentNode.removeChild(this.$buttons)):l&&e.buttons&&n&&this.buttons.clearHtml().render(),!e.isMobile&&r?(this.treatAsInline||z||this._createMobileOverlay(),this._addMobileAttributes(),this.visible&&this._showMobileOverlay()):e.isMobile&&!r&&(this._removeMobileAttributes(),this.visible&&(z.classList.remove("-active-"),"function"!=typeof this.opts.position&&this.setPosition())),l&&(this.nav.update(),this.views[this.currentView].render(),this.currentView===i.days&&this.views[this.currentView].renderDayNames())})),L(this,"isOtherMonth",(t=>{let{month:e}=l(t);return e!==this.parsedViewDate.month})),L(this,"isOtherYear",(t=>{let{year:e}=l(t);return e!==this.parsedViewDate.year})),L(this,"isOtherDecade",(t=>{let{year:e}=l(t),[i,s]=u(this.viewDate);return e<i||e>s})),L(this,"_onChangeSelectedDate",(t=>{let{silent:e}=t;setTimeout((()=>{this._setInputValue(),this.opts.onSelect&&!e&&this._triggerOnSelect()}))})),L(this,"_onChangeFocusedDate",(function(t){let{viewDateTransition:e}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!t)return;let i=!1;e&&(i=a.isOtherMonth(t)||a.isOtherYear(t)||a.isOtherDecade(t)),i&&a.setViewDate(t)})),L(this,"_onChangeTime",(t=>{let{hours:e,minutes:i}=t,s=new Date,{lastSelectedDate:n,opts:{onSelect:o}}=this,a=n;n||(a=s);let r=this.getCell(a,this.currentViewSingular),l=r&&r.adpCell;l&&l.isDisabled||(a.setHours(e),a.setMinutes(i),n?(this._setInputValue(),o&&this._triggerOnSelect()):this.selectDate(a))})),L(this,"_onFocus",(t=>{this.visible||this.show()})),L(this,"_onBlur",(t=>{this.inFocus||!this.visible||this.opts.isMobile||this.hide()})),L(this,"_onMouseDown",(t=>{this.inFocus=!0})),L(this,"_onMouseUp",(t=>{this.inFocus=!1,this.$el.focus()})),L(this,"_onResize",(()=>{this.visible&&"function"!=typeof this.opts.position&&this.setPosition()})),L(this,"_onClickOverlay",(()=>{this.visible&&this.hide()})),L(this,"isWeekend",(t=>this.opts.weekends.includes(t))),L(this,"getClampedDate",(t=>{let{minDate:e,maxDate:i}=this,s=t;return i&&p(t,i)?s=i:e&&f(t,e)&&(s=e),s})),this.$el=n(t),!this.$el)return;this.$datepicker=o({className:"air-datepicker"}),this.opts=b({},s,e),this.$customContainer=!!this.opts.container&&n(this.opts.container),this.$altField=n(this.opts.altField||!1),B||(B=n("body"));let{view:r,startDate:h}=this.opts;h||(this.opts.startDate=new Date),"INPUT"===this.$el.nodeName&&(this.elIsInput=!0),this.inited=!1,this.visible=!1,this.viewDate=k(this.opts.startDate),this.focusDate=!1,this.initialReadonly=this.$el.getAttribute("readonly"),this.customHide=!1,this.currentView=r,this.selectedDates=[],this.views={},this.keys=[],this.rangeDateFrom="",this.rangeDateTo="",this.timepickerIsActive=!1,this.treatAsInline=this.opts.inline||!this.elIsInput,this.init()}init(){let{opts:t,treatAsInline:e,opts:{inline:i,isMobile:s,selectedDates:n,keyboardNav:a,onlyTimepicker:r}}=this;var l;j||i||!this.elIsInput||(j=!0,R=o({className:l=W.defaultContainerId,id:l}),B.appendChild(R)),!s||z||e||this._createMobileOverlay(),this._handleLocale(),this._bindSubEvents(),this._createMinMaxDates(),this._limitViewDateByMaxMinDates(),this.elIsInput&&(i||this._bindEvents(),a&&!r&&(this.keyboardNav=new H({dp:this,opts:t}))),n&&this.selectDate(n,{silent:!0}),this.opts.visible&&!e&&this.show(),s&&!e&&this.$el.setAttribute("readonly",!0),e&&this._createComponents()}_createMobileOverlay(){z=o({className:"air-datepicker-overlay"}),R.appendChild(z)}_createComponents(){let{opts:t,treatAsInline:e,opts:{inline:i,buttons:s,timepicker:n,position:o,classes:a,onlyTimepicker:r,isMobile:l}}=this;this._buildBaseHtml(),this.elIsInput&&(i||this._setPositionClasses(o)),!i&&this.elIsInput||this.$datepicker.classList.add("-inline-"),a&&this.$datepicker.classList.add(...a.split(" ")),r&&this.$datepicker.classList.add("-only-timepicker-"),l&&!e&&this._addMobileAttributes(),this.views[this.currentView]=new T({dp:this,type:this.currentView,opts:t}),this.nav=new E({dp:this,opts:t}),n&&this._addTimepicker(),s&&this._addButtons(),this.$content.appendChild(this.views[this.currentView].$el),this.$nav.appendChild(this.nav.$el)}_destroyComponents(){for(let t in this.views)this.views[t].destroy();this.views={},this.nav.destroy(),this.timepicker&&this.timepicker.destroy()}_addMobileAttributes(){z.addEventListener("click",this._onClickOverlay),this.$datepicker.classList.add("-is-mobile-"),this.$el.setAttribute("readonly",!0)}_removeMobileAttributes(){z.removeEventListener("click",this._onClickOverlay),this.$datepicker.classList.remove("-is-mobile-"),this.initialReadonly||""===this.initialReadonly||this.$el.removeAttribute("readonly")}_createMinMaxDates(){let{minDate:t,maxDate:e}=this.opts;this.minDate=!!t&&k(t),this.maxDate=!!e&&k(e)}_addTimepicker(){this.$timepicker=o({className:"air-datepicker--time"}),this.$datepicker.appendChild(this.$timepicker),this.timepicker=new F({dp:this,opts:this.opts}),this.$timepicker.appendChild(this.timepicker.$el)}_addButtons(){this.$buttons=o({className:"air-datepicker--buttons"}),this.$datepicker.appendChild(this.$buttons),this.buttons=new I({dp:this,opts:this.opts}),this.$buttons.appendChild(this.buttons.$el)}_bindSubEvents(){this.on(i.eventChangeSelectedDate,this._onChangeSelectedDate),this.on(i.eventChangeFocusDate,this._onChangeFocusedDate),this.on(i.eventChangeTime,this._onChangeTime)}_buildBaseHtml(){let{inline:t}=this.opts;var e,i;this.elIsInput?t?(e=this.$datepicker,(i=this.$el).parentNode.insertBefore(e,i.nextSibling)):this.$container.appendChild(this.$datepicker):this.$el.appendChild(this.$datepicker),this.$datepicker.innerHTML='<i class="air-datepicker--pointer"></i><div class="air-datepicker--navigation"></div><div class="air-datepicker--content"></div>',this.$content=n(".air-datepicker--content",this.$datepicker),this.$pointer=n(".air-datepicker--pointer",this.$datepicker),this.$nav=n(".air-datepicker--navigation",this.$datepicker)}_handleLocale(){let{locale:t,dateFormat:e,firstDay:i,timepicker:s,onlyTimepicker:n,timeFormat:o,dateTimeSeparator:a}=this.opts;var r;this.locale=(r=t,JSON.parse(JSON.stringify(r))),e&&(this.locale.dateFormat=e),void 0!==o&&""!==o&&(this.locale.timeFormat=o);let{timeFormat:l}=this.locale;if(""!==i&&(this.locale.firstDay=i),s&&"function"!=typeof e){let t=l?a:"";this.locale.dateFormat=[this.locale.dateFormat,l||""].join(t)}n&&(this.locale.dateFormat=this.locale.timeFormat)}_setPositionClasses(t){if("function"==typeof t)return void this.$datepicker.classList.add("-custom-position-");let e=(t=t.split(" "))[0],i=t[1],s="air-datepicker -".concat(e,"-").concat(i,"- -from-").concat(e,"-");this.$datepicker.classList.add(...s.split(" "))}_bindEvents(){this.$el.addEventListener(this.opts.showEvent,this._onFocus),this.$el.addEventListener("blur",this._onBlur),this.$datepicker.addEventListener("mousedown",this._onMouseDown),this.$datepicker.addEventListener("mouseup",this._onMouseUp),window.addEventListener("resize",this._onResize)}_limitViewDateByMaxMinDates(){let{viewDate:t,minDate:e,maxDate:i}=this;i&&p(t,i)&&this.setViewDate(i),e&&f(t,e)&&this.setViewDate(e)}formatDate(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.viewDate,e=arguments.length>1?arguments[1]:void 0;if(t=k(t),!(t instanceof Date))return;let i=e,s=this.locale,n=l(t),o=u(t),a=W.replacer,r="am";this.opts.timepicker&&this.timepicker&&(r=this.timepicker.getDayPeriod(t).dayPeriod);let h={T:t.getTime(),m:n.minutes,mm:n.fullMinutes,h:n.hours12,hh:n.fullHours12,H:n.hours,HH:n.fullHours,aa:r,AA:r.toUpperCase(),E:s.daysShort[n.day],EEEE:s.days[n.day],d:n.date,dd:n.fullDate,M:n.month+1,MM:n.fullMonth,MMM:s.monthsShort[n.month],MMMM:s.months[n.month],yy:n.year.toString().slice(-2),yyyy:n.year,yyyy1:o[0],yyyy2:o[1]};for(let[t,e]of Object.entries(h))i=a(i,w(t),e);return i}down(t){this._handleUpDownActions(t,"down")}up(t){this._handleUpDownActions(t,"up")}selectDate(t){let e,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{currentView:n,parsedViewDate:o,selectedDates:a}=this,{updateTime:r}=s,{moveToOtherMonthsOnSelect:l,moveToOtherYearsOnSelect:h,multipleDates:u,range:c,autoClose:d}=this.opts,f=a.length;if(Array.isArray(t))return t.forEach((t=>{this.selectDate(t,s)})),new Promise((t=>{setTimeout(t)}));if((t=k(t))instanceof Date){if(n===i.days&&t.getMonth()!==o.month&&l&&(e=new Date(t.getFullYear(),t.getMonth(),1)),n===i.years&&t.getFullYear()!==o.year&&h&&(e=new Date(t.getFullYear(),0,1)),e&&this.setViewDate(e),u&&!c){if(f===u)return;this._checkIfDateIsSelected(t)||a.push(t)}else if(c)switch(f){case 1:a.push(t),this.rangeDateTo||(this.rangeDateTo=t),p(this.rangeDateFrom,this.rangeDateTo)&&(this.rangeDateTo=this.rangeDateFrom,this.rangeDateFrom=t),this.selectedDates=[this.rangeDateFrom,this.rangeDateTo];break;case 2:this.selectedDates=[t],this.rangeDateFrom=t,this.rangeDateTo="";break;default:this.selectedDates=[t],this.rangeDateFrom=t}else this.selectedDates=[t];return this.trigger(i.eventChangeSelectedDate,{action:i.actionSelectDate,silent:null==s?void 0:s.silent,date:t,updateTime:r}),this._updateLastSelectedDate(t),d&&!this.timepickerIsActive&&this.visible&&(u||c?c&&1===f&&this.hide():this.hide()),new Promise((t=>{setTimeout(t)}))}}unselectDate(t){let e=this.selectedDates,s=this;if((t=k(t))instanceof Date)return e.some(((n,o)=>{if(d(n,t))return e.splice(o,1),s.selectedDates.length?s._updateLastSelectedDate(s.selectedDates[s.selectedDates.length-1]):(s.rangeDateFrom="",s.rangeDateTo="",s._updateLastSelectedDate(!1)),this.trigger(i.eventChangeSelectedDate,{action:i.actionUnselectDate,date:t}),!0}))}replaceDate(t,e){let s=this.selectedDates.find((e=>d(e,t,this.currentView))),n=this.selectedDates.indexOf(s);n<0||d(this.selectedDates[n],e,this.currentView)||(this.selectedDates[n]=e,this.trigger(i.eventChangeSelectedDate,{action:i.actionSelectDate,date:e,updateTime:!0}),this._updateLastSelectedDate(e))}clear(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.selectedDates=[],this.rangeDateFrom=!1,this.rangeDateTo=!1,this.trigger(i.eventChangeSelectedDate,{action:i.actionUnselectDate,silent:t.silent}),new Promise((t=>{setTimeout(t)}))}show(){let{onShow:t,isMobile:e}=this.opts;this._cancelScheduledCall(),this.visible||this.hideAnimation||this._createComponents(),this.setPosition(this.opts.position),this.$datepicker.classList.add("-active-"),this.visible=!0,t&&this._scheduleCallAfterTransition(t),e&&this._showMobileOverlay()}hide(){let{onHide:t,isMobile:e}=this.opts,i=this._hasTransition();this.visible=!1,this.hideAnimation=!0,this.$datepicker.classList.remove("-active-"),this.customHide&&this.customHide(),this.elIsInput&&this.$el.blur(),this._scheduleCallAfterTransition((e=>{!this.customHide&&(e&&i||!e&&!i)&&this._finishHide(),t&&t(e)})),e&&z.classList.remove("-active-")}_triggerOnSelect(){let t=[],e=[],{selectedDates:i,locale:s,opts:{onSelect:n,multipleDates:o,range:a}}=this,r=o||a,l="function"==typeof s.dateFormat;i.length&&(t=i.map(g),e=l?o?s.dateFormat(t):t.map((t=>s.dateFormat(t))):t.map((t=>this.formatDate(t,s.dateFormat)))),n({date:r?t:t[0],formattedDate:r?e:e[0],datepicker:this})}_handleAlreadySelectedDates(t,e){let{range:i,toggleSelected:s}=this.opts;i?s?this.unselectDate(e):2!==this.selectedDates.length&&this.selectDate(e):s&&this.unselectDate(e),s||this._updateLastSelectedDate(t)}_handleUpDownActions(t,e){if(!((t=k(t||this.focusDate||this.viewDate))instanceof Date))return;let i="up"===e?this.viewIndex+1:this.viewIndex-1;i>2&&(i=2),i<0&&(i=0),this.setViewDate(new Date(t.getFullYear(),t.getMonth(),1)),this.setCurrentView(this.viewIndexes[i])}_handleRangeOnFocus(){1===this.selectedDates.length&&(p(this.selectedDates[0],this.focusDate)?(this.rangeDateTo=this.selectedDates[0],this.rangeDateFrom=this.focusDate):(this.rangeDateTo=this.focusDate,this.rangeDateFrom=this.selectedDates[0]))}getCell(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.day;if(!((t=k(t))instanceof Date))return;let{year:s,month:n,date:o}=l(t),a='[data-year="'.concat(s,'"]'),r='[data-month="'.concat(n,'"]'),h='[data-date="'.concat(o,'"]'),u={[i.day]:"".concat(a).concat(r).concat(h),[i.month]:"".concat(a).concat(r),[i.year]:"".concat(a)};return this.views[this.currentView].$el.querySelector(u[e])}_showMobileOverlay(){z.classList.add("-active-")}_hasTransition(){return window.getComputedStyle(this.$datepicker).getPropertyValue("transition-duration").split(", ").reduce(((t,e)=>parseFloat(e)+t),0)>0}get shouldUpdateDOM(){return this.visible||this.treatAsInline}get parsedViewDate(){return l(this.viewDate)}get currentViewSingular(){return this.currentView.slice(0,-1)}get curDecade(){return u(this.viewDate)}get viewIndex(){return this.viewIndexes.indexOf(this.currentView)}get isFinalView(){return this.currentView===i.years}get hasSelectedDates(){return this.selectedDates.length>0}get isMinViewReached(){return this.currentView===this.opts.minView||this.currentView===i.days}get $container(){return this.$customContainer||R}static replacer(t,e,i){return t.replace(e,(function(t,e,s,n){return e+i+n}))}}var q;return L(W,"defaults",s),L(W,"version","3.2.0"),L(W,"defaultContainerId","air-datepicker-global-container"),q=W.prototype,Object.assign(q,N),e.default}()},755:function(t,e){var i;!function(e,i){"use strict";"object"==typeof t.exports?t.exports=e.document?i(e,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return i(t)}:i(e)}("undefined"!=typeof window?window:this,(function(s,n){"use strict";var o=[],a=Object.getPrototypeOf,r=o.slice,l=o.flat?function(t){return o.flat.call(t)}:function(t){return o.concat.apply([],t)},h=o.push,u=o.indexOf,c={},d=c.toString,p=c.hasOwnProperty,f=p.toString,g=f.call(Object),m={},v=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType&&"function"!=typeof t.item},_=function(t){return null!=t&&t===t.window},y=s.document,b={type:!0,src:!0,nonce:!0,noModule:!0};function k(t,e,i){var s,n,o=(i=i||y).createElement("script");if(o.text=t,e)for(s in b)(n=e[s]||e.getAttribute&&e.getAttribute(s))&&o.setAttribute(s,n);i.head.appendChild(o).parentNode.removeChild(o)}function w(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?c[d.call(t)]||"object":typeof t}var x="3.6.0",C=function(t,e){return new C.fn.init(t,e)};function D(t){var e=!!t&&"length"in t&&t.length,i=w(t);return!v(t)&&!_(t)&&("array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t)}C.fn=C.prototype={jquery:x,constructor:C,length:0,toArray:function(){return r.call(this)},get:function(t){return null==t?r.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=C.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return C.each(this,t)},map:function(t){return this.pushStack(C.map(this,(function(e,i){return t.call(e,i,e)})))},slice:function(){return this.pushStack(r.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(C.grep(this,(function(t,e){return(e+1)%2})))},odd:function(){return this.pushStack(C.grep(this,(function(t,e){return e%2})))},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(i>=0&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:o.sort,splice:o.splice},C.extend=C.fn.extend=function(){var t,e,i,s,n,o,a=arguments[0]||{},r=1,l=arguments.length,h=!1;for("boolean"==typeof a&&(h=a,a=arguments[r]||{},r++),"object"==typeof a||v(a)||(a={}),r===l&&(a=this,r--);r<l;r++)if(null!=(t=arguments[r]))for(e in t)s=t[e],"__proto__"!==e&&a!==s&&(h&&s&&(C.isPlainObject(s)||(n=Array.isArray(s)))?(i=a[e],o=n&&!Array.isArray(i)?[]:n||C.isPlainObject(i)?i:{},n=!1,a[e]=C.extend(h,o,s)):void 0!==s&&(a[e]=s));return a},C.extend({expando:"jQuery"+(x+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==d.call(t)||(e=a(t))&&("function"!=typeof(i=p.call(e,"constructor")&&e.constructor)||f.call(i)!==g))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e,i){k(t,{nonce:e&&e.nonce},i)},each:function(t,e){var i,s=0;if(D(t))for(i=t.length;s<i&&!1!==e.call(t[s],s,t[s]);s++);else for(s in t)if(!1===e.call(t[s],s,t[s]))break;return t},makeArray:function(t,e){var i=e||[];return null!=t&&(D(Object(t))?C.merge(i,"string"==typeof t?[t]:t):h.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:u.call(e,t,i)},merge:function(t,e){for(var i=+e.length,s=0,n=t.length;s<i;s++)t[n++]=e[s];return t.length=n,t},grep:function(t,e,i){for(var s=[],n=0,o=t.length,a=!i;n<o;n++)!e(t[n],n)!==a&&s.push(t[n]);return s},map:function(t,e,i){var s,n,o=0,a=[];if(D(t))for(s=t.length;o<s;o++)null!=(n=e(t[o],o,i))&&a.push(n);else for(o in t)null!=(n=e(t[o],o,i))&&a.push(n);return l(a)},guid:1,support:m}),"function"==typeof Symbol&&(C.fn[Symbol.iterator]=o[Symbol.iterator]),C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){c["[object "+e+"]"]=e.toLowerCase()}));var S=function(t){var e,i,s,n,o,a,r,l,h,u,c,d,p,f,g,m,v,_,y,b="sizzle"+1*new Date,k=t.document,w=0,x=0,C=lt(),D=lt(),S=lt(),T=lt(),A=function(t,e){return t===e&&(c=!0),0},E={}.hasOwnProperty,M=[],I=M.pop,P=M.push,F=M.push,O=M.slice,H=function(t,e){for(var i=0,s=t.length;i<s;i++)if(t[i]===e)return i;return-1},N="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",B="(?:\\\\[\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",R="\\[[\\x20\\t\\r\\n\\f]*("+B+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+B+"))|)"+L+"*\\]",z=":("+B+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",j=new RegExp(L+"+","g"),W=new RegExp("^[\\x20\\t\\r\\n\\f]+|((?:^|[^\\\\])(?:\\\\.)*)[\\x20\\t\\r\\n\\f]+$","g"),q=new RegExp("^[\\x20\\t\\r\\n\\f]*,[\\x20\\t\\r\\n\\f]*"),V=new RegExp("^[\\x20\\t\\r\\n\\f]*([>+~]|[\\x20\\t\\r\\n\\f])[\\x20\\t\\r\\n\\f]*"),$=new RegExp(L+"|>"),Y=new RegExp(z),U=new RegExp("^"+B+"$"),K={ID:new RegExp("^#("+B+")"),CLASS:new RegExp("^\\.("+B+")"),TAG:new RegExp("^("+B+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+z),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\([\\x20\\t\\r\\n\\f]*(even|odd|(([+-]|)(\\d*)n|)[\\x20\\t\\r\\n\\f]*(?:([+-]|)[\\x20\\t\\r\\n\\f]*(\\d+)|))[\\x20\\t\\r\\n\\f]*\\)|)","i"),bool:new RegExp("^(?:"+N+")$","i"),needsContext:new RegExp("^[\\x20\\t\\r\\n\\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\([\\x20\\t\\r\\n\\f]*((?:-\\d)?\\d*)[\\x20\\t\\r\\n\\f]*\\)|)(?=[^-]|$)","i")},X=/HTML$/i,G=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,Q=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\[\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|\\\\([^\\r\\n\\f])","g"),it=function(t,e){var i="0x"+t.slice(1)-65536;return e||(i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320))},st=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,nt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},ot=function(){d()},at=bt((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{F.apply(M=O.call(k.childNodes),k.childNodes),M[k.childNodes.length].nodeType}catch(t){F={apply:M.length?function(t,e){P.apply(t,O.call(e))}:function(t,e){for(var i=t.length,s=0;t[i++]=e[s++];);t.length=i-1}}}function rt(t,e,s,n){var o,r,h,u,c,f,v,_=e&&e.ownerDocument,k=e?e.nodeType:9;if(s=s||[],"string"!=typeof t||!t||1!==k&&9!==k&&11!==k)return s;if(!n&&(d(e),e=e||p,g)){if(11!==k&&(c=Z.exec(t)))if(o=c[1]){if(9===k){if(!(h=e.getElementById(o)))return s;if(h.id===o)return s.push(h),s}else if(_&&(h=_.getElementById(o))&&y(e,h)&&h.id===o)return s.push(h),s}else{if(c[2])return F.apply(s,e.getElementsByTagName(t)),s;if((o=c[3])&&i.getElementsByClassName&&e.getElementsByClassName)return F.apply(s,e.getElementsByClassName(o)),s}if(i.qsa&&!T[t+" "]&&(!m||!m.test(t))&&(1!==k||"object"!==e.nodeName.toLowerCase())){if(v=t,_=e,1===k&&($.test(t)||V.test(t))){for((_=tt.test(t)&&vt(e.parentNode)||e)===e&&i.scope||((u=e.getAttribute("id"))?u=u.replace(st,nt):e.setAttribute("id",u=b)),r=(f=a(t)).length;r--;)f[r]=(u?"#"+u:":scope")+" "+yt(f[r]);v=f.join(",")}try{return F.apply(s,_.querySelectorAll(v)),s}catch(e){T(t,!0)}finally{u===b&&e.removeAttribute("id")}}}return l(t.replace(W,"$1"),e,s,n)}function lt(){var t=[];return function e(i,n){return t.push(i+" ")>s.cacheLength&&delete e[t.shift()],e[i+" "]=n}}function ht(t){return t[b]=!0,t}function ut(t){var e=p.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ct(t,e){for(var i=t.split("|"),n=i.length;n--;)s.attrHandle[i[n]]=e}function dt(t,e){var i=e&&t,s=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(s)return s;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function pt(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ft(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&at(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ht((function(e){return e=+e,ht((function(i,s){for(var n,o=t([],i.length,e),a=o.length;a--;)i[n=o[a]]&&(i[n]=!(s[n]=i[n]))}))}))}function vt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in i=rt.support={},o=rt.isXML=function(t){var e=t&&t.namespaceURI,i=t&&(t.ownerDocument||t).documentElement;return!X.test(e||i&&i.nodeName||"HTML")},d=rt.setDocument=function(t){var e,n,a=t?t.ownerDocument||t:k;return a!=p&&9===a.nodeType&&a.documentElement?(f=(p=a).documentElement,g=!o(p),k!=p&&(n=p.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",ot,!1):n.attachEvent&&n.attachEvent("onunload",ot)),i.scope=ut((function(t){return f.appendChild(t).appendChild(p.createElement("div")),void 0!==t.querySelectorAll&&!t.querySelectorAll(":scope fieldset div").length})),i.attributes=ut((function(t){return t.className="i",!t.getAttribute("className")})),i.getElementsByTagName=ut((function(t){return t.appendChild(p.createComment("")),!t.getElementsByTagName("*").length})),i.getElementsByClassName=Q.test(p.getElementsByClassName),i.getById=ut((function(t){return f.appendChild(t).id=b,!p.getElementsByName||!p.getElementsByName(b).length})),i.getById?(s.filter.ID=function(t){var e=t.replace(et,it);return function(t){return t.getAttribute("id")===e}},s.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i=e.getElementById(t);return i?[i]:[]}}):(s.filter.ID=function(t){var e=t.replace(et,it);return function(t){var i=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}},s.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i,s,n,o=e.getElementById(t);if(o){if((i=o.getAttributeNode("id"))&&i.value===t)return[o];for(n=e.getElementsByName(t),s=0;o=n[s++];)if((i=o.getAttributeNode("id"))&&i.value===t)return[o]}return[]}}),s.find.TAG=i.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):i.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,s=[],n=0,o=e.getElementsByTagName(t);if("*"===t){for(;i=o[n++];)1===i.nodeType&&s.push(i);return s}return o},s.find.CLASS=i.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},v=[],m=[],(i.qsa=Q.test(p.querySelectorAll))&&(ut((function(t){var e;f.appendChild(t).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|"+N+")"),t.querySelectorAll("[id~="+b+"-]").length||m.push("~="),(e=p.createElement("input")).setAttribute("name",""),t.appendChild(e),t.querySelectorAll("[name='']").length||m.push("\\[[\\x20\\t\\r\\n\\f]*name[\\x20\\t\\r\\n\\f]*=[\\x20\\t\\r\\n\\f]*(?:''|\"\")"),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+b+"+*").length||m.push(".#.+[+~]"),t.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")})),ut((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=p.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),f.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(i.matchesSelector=Q.test(_=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&ut((function(t){i.disconnectedMatch=_.call(t,"*"),_.call(t,"[s!='']:x"),v.push("!=",z)})),m=m.length&&new RegExp(m.join("|")),v=v.length&&new RegExp(v.join("|")),e=Q.test(f.compareDocumentPosition),y=e||Q.test(f.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,s=e&&e.parentNode;return t===s||!(!s||1!==s.nodeType||!(i.contains?i.contains(s):t.compareDocumentPosition&&16&t.compareDocumentPosition(s)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},A=e?function(t,e){if(t===e)return c=!0,0;var s=!t.compareDocumentPosition-!e.compareDocumentPosition;return s||(1&(s=(t.ownerDocument||t)==(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!i.sortDetached&&e.compareDocumentPosition(t)===s?t==p||t.ownerDocument==k&&y(k,t)?-1:e==p||e.ownerDocument==k&&y(k,e)?1:u?H(u,t)-H(u,e):0:4&s?-1:1)}:function(t,e){if(t===e)return c=!0,0;var i,s=0,n=t.parentNode,o=e.parentNode,a=[t],r=[e];if(!n||!o)return t==p?-1:e==p?1:n?-1:o?1:u?H(u,t)-H(u,e):0;if(n===o)return dt(t,e);for(i=t;i=i.parentNode;)a.unshift(i);for(i=e;i=i.parentNode;)r.unshift(i);for(;a[s]===r[s];)s++;return s?dt(a[s],r[s]):a[s]==k?-1:r[s]==k?1:0},p):p},rt.matches=function(t,e){return rt(t,null,null,e)},rt.matchesSelector=function(t,e){if(d(t),i.matchesSelector&&g&&!T[e+" "]&&(!v||!v.test(e))&&(!m||!m.test(e)))try{var s=_.call(t,e);if(s||i.disconnectedMatch||t.document&&11!==t.document.nodeType)return s}catch(t){T(e,!0)}return rt(e,p,null,[t]).length>0},rt.contains=function(t,e){return(t.ownerDocument||t)!=p&&d(t),y(t,e)},rt.attr=function(t,e){(t.ownerDocument||t)!=p&&d(t);var n=s.attrHandle[e.toLowerCase()],o=n&&E.call(s.attrHandle,e.toLowerCase())?n(t,e,!g):void 0;return void 0!==o?o:i.attributes||!g?t.getAttribute(e):(o=t.getAttributeNode(e))&&o.specified?o.value:null},rt.escape=function(t){return(t+"").replace(st,nt)},rt.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},rt.uniqueSort=function(t){var e,s=[],n=0,o=0;if(c=!i.detectDuplicates,u=!i.sortStable&&t.slice(0),t.sort(A),c){for(;e=t[o++];)e===t[o]&&(n=s.push(o));for(;n--;)t.splice(s[n],1)}return u=null,t},n=rt.getText=function(t){var e,i="",s=0,o=t.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=n(t)}else if(3===o||4===o)return t.nodeValue}else for(;e=t[s++];)i+=n(e);return i},s=rt.selectors={cacheLength:50,createPseudo:ht,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,it),t[3]=(t[3]||t[4]||t[5]||"").replace(et,it),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||rt.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&rt.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return K.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&Y.test(i)&&(e=a(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,it).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=C[t+" "];return e||(e=new RegExp("(^|[\\x20\\t\\r\\n\\f])"+t+"("+L+"|$)"))&&C(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,i){return function(s){var n=rt.attr(s,t);return null==n?"!="===e:!e||(n+="","="===e?n===i:"!="===e?n!==i:"^="===e?i&&0===n.indexOf(i):"*="===e?i&&n.indexOf(i)>-1:"$="===e?i&&n.slice(-i.length)===i:"~="===e?(" "+n.replace(j," ")+" ").indexOf(i)>-1:"|="===e&&(n===i||n.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,i,s,n){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),r="of-type"===e;return 1===s&&0===n?function(t){return!!t.parentNode}:function(e,i,l){var h,u,c,d,p,f,g=o!==a?"nextSibling":"previousSibling",m=e.parentNode,v=r&&e.nodeName.toLowerCase(),_=!l&&!r,y=!1;if(m){if(o){for(;g;){for(d=e;d=d[g];)if(r?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=g="only"===t&&!f&&"nextSibling"}return!0}if(f=[a?m.firstChild:m.lastChild],a&&_){for(y=(p=(h=(u=(c=(d=m)[b]||(d[b]={}))[d.uniqueID]||(c[d.uniqueID]={}))[t]||[])[0]===w&&h[1])&&h[2],d=p&&m.childNodes[p];d=++p&&d&&d[g]||(y=p=0)||f.pop();)if(1===d.nodeType&&++y&&d===e){u[t]=[w,p,y];break}}else if(_&&(y=p=(h=(u=(c=(d=e)[b]||(d[b]={}))[d.uniqueID]||(c[d.uniqueID]={}))[t]||[])[0]===w&&h[1]),!1===y)for(;(d=++p&&d&&d[g]||(y=p=0)||f.pop())&&((r?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++y||(_&&((u=(c=d[b]||(d[b]={}))[d.uniqueID]||(c[d.uniqueID]={}))[t]=[w,y]),d!==e)););return(y-=n)===s||y%s==0&&y/s>=0}}},PSEUDO:function(t,e){var i,n=s.pseudos[t]||s.setFilters[t.toLowerCase()]||rt.error("unsupported pseudo: "+t);return n[b]?n(e):n.length>1?(i=[t,t,"",e],s.setFilters.hasOwnProperty(t.toLowerCase())?ht((function(t,i){for(var s,o=n(t,e),a=o.length;a--;)t[s=H(t,o[a])]=!(i[s]=o[a])})):function(t){return n(t,0,i)}):n}},pseudos:{not:ht((function(t){var e=[],i=[],s=r(t.replace(W,"$1"));return s[b]?ht((function(t,e,i,n){for(var o,a=s(t,null,n,[]),r=t.length;r--;)(o=a[r])&&(t[r]=!(e[r]=o))})):function(t,n,o){return e[0]=t,s(e,null,o,i),e[0]=null,!i.pop()}})),has:ht((function(t){return function(e){return rt(t,e).length>0}})),contains:ht((function(t){return t=t.replace(et,it),function(e){return(e.textContent||n(e)).indexOf(t)>-1}})),lang:ht((function(t){return U.test(t||"")||rt.error("unsupported lang: "+t),t=t.replace(et,it).toLowerCase(),function(e){var i;do{if(i=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(i=i.toLowerCase())===t||0===i.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===f},focus:function(t){return t===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!s.pseudos.empty(t)},header:function(t){return J.test(t.nodeName)},input:function(t){return G.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,i){return[i<0?i+e:i]})),even:mt((function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t})),odd:mt((function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t})),lt:mt((function(t,e,i){for(var s=i<0?i+e:i>e?e:i;--s>=0;)t.push(s);return t})),gt:mt((function(t,e,i){for(var s=i<0?i+e:i;++s<e;)t.push(s);return t}))}},s.pseudos.nth=s.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})s.pseudos[e]=pt(e);for(e in{submit:!0,reset:!0})s.pseudos[e]=ft(e);function _t(){}function yt(t){for(var e=0,i=t.length,s="";e<i;e++)s+=t[e].value;return s}function bt(t,e,i){var s=e.dir,n=e.next,o=n||s,a=i&&"parentNode"===o,r=x++;return e.first?function(e,i,n){for(;e=e[s];)if(1===e.nodeType||a)return t(e,i,n);return!1}:function(e,i,l){var h,u,c,d=[w,r];if(l){for(;e=e[s];)if((1===e.nodeType||a)&&t(e,i,l))return!0}else for(;e=e[s];)if(1===e.nodeType||a)if(u=(c=e[b]||(e[b]={}))[e.uniqueID]||(c[e.uniqueID]={}),n&&n===e.nodeName.toLowerCase())e=e[s]||e;else{if((h=u[o])&&h[0]===w&&h[1]===r)return d[2]=h[2];if(u[o]=d,d[2]=t(e,i,l))return!0}return!1}}function kt(t){return t.length>1?function(e,i,s){for(var n=t.length;n--;)if(!t[n](e,i,s))return!1;return!0}:t[0]}function wt(t,e,i,s,n){for(var o,a=[],r=0,l=t.length,h=null!=e;r<l;r++)(o=t[r])&&(i&&!i(o,s,n)||(a.push(o),h&&e.push(r)));return a}function xt(t,e,i,s,n,o){return s&&!s[b]&&(s=xt(s)),n&&!n[b]&&(n=xt(n,o)),ht((function(o,a,r,l){var h,u,c,d=[],p=[],f=a.length,g=o||function(t,e,i){for(var s=0,n=e.length;s<n;s++)rt(t,e[s],i);return i}(e||"*",r.nodeType?[r]:r,[]),m=!t||!o&&e?g:wt(g,d,t,r,l),v=i?n||(o?t:f||s)?[]:a:m;if(i&&i(m,v,r,l),s)for(h=wt(v,p),s(h,[],r,l),u=h.length;u--;)(c=h[u])&&(v[p[u]]=!(m[p[u]]=c));if(o){if(n||t){if(n){for(h=[],u=v.length;u--;)(c=v[u])&&h.push(m[u]=c);n(null,v=[],h,l)}for(u=v.length;u--;)(c=v[u])&&(h=n?H(o,c):d[u])>-1&&(o[h]=!(a[h]=c))}}else v=wt(v===a?v.splice(f,v.length):v),n?n(null,a,v,l):F.apply(a,v)}))}function Ct(t){for(var e,i,n,o=t.length,a=s.relative[t[0].type],r=a||s.relative[" "],l=a?1:0,u=bt((function(t){return t===e}),r,!0),c=bt((function(t){return H(e,t)>-1}),r,!0),d=[function(t,i,s){var n=!a&&(s||i!==h)||((e=i).nodeType?u(t,i,s):c(t,i,s));return e=null,n}];l<o;l++)if(i=s.relative[t[l].type])d=[bt(kt(d),i)];else{if((i=s.filter[t[l].type].apply(null,t[l].matches))[b]){for(n=++l;n<o&&!s.relative[t[n].type];n++);return xt(l>1&&kt(d),l>1&&yt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(W,"$1"),i,l<n&&Ct(t.slice(l,n)),n<o&&Ct(t=t.slice(n)),n<o&&yt(t))}d.push(i)}return kt(d)}return _t.prototype=s.filters=s.pseudos,s.setFilters=new _t,a=rt.tokenize=function(t,e){var i,n,o,a,r,l,h,u=D[t+" "];if(u)return e?0:u.slice(0);for(r=t,l=[],h=s.preFilter;r;){for(a in i&&!(n=q.exec(r))||(n&&(r=r.slice(n[0].length)||r),l.push(o=[])),i=!1,(n=V.exec(r))&&(i=n.shift(),o.push({value:i,type:n[0].replace(W," ")}),r=r.slice(i.length)),s.filter)!(n=K[a].exec(r))||h[a]&&!(n=h[a](n))||(i=n.shift(),o.push({value:i,type:a,matches:n}),r=r.slice(i.length));if(!i)break}return e?r.length:r?rt.error(t):D(t,l).slice(0)},r=rt.compile=function(t,e){var i,n=[],o=[],r=S[t+" "];if(!r){for(e||(e=a(t)),i=e.length;i--;)(r=Ct(e[i]))[b]?n.push(r):o.push(r);r=S(t,function(t,e){var i=e.length>0,n=t.length>0,o=function(o,a,r,l,u){var c,f,m,v=0,_="0",y=o&&[],b=[],k=h,x=o||n&&s.find.TAG("*",u),C=w+=null==k?1:Math.random()||.1,D=x.length;for(u&&(h=a==p||a||u);_!==D&&null!=(c=x[_]);_++){if(n&&c){for(f=0,a||c.ownerDocument==p||(d(c),r=!g);m=t[f++];)if(m(c,a||p,r)){l.push(c);break}u&&(w=C)}i&&((c=!m&&c)&&v--,o&&y.push(c))}if(v+=_,i&&_!==v){for(f=0;m=e[f++];)m(y,b,a,r);if(o){if(v>0)for(;_--;)y[_]||b[_]||(b[_]=I.call(l));b=wt(b)}F.apply(l,b),u&&!o&&b.length>0&&v+e.length>1&&rt.uniqueSort(l)}return u&&(w=C,h=k),y};return i?ht(o):o}(o,n)),r.selector=t}return r},l=rt.select=function(t,e,i,n){var o,l,h,u,c,d="function"==typeof t&&t,p=!n&&a(t=d.selector||t);if(i=i||[],1===p.length){if((l=p[0]=p[0].slice(0)).length>2&&"ID"===(h=l[0]).type&&9===e.nodeType&&g&&s.relative[l[1].type]){if(!(e=(s.find.ID(h.matches[0].replace(et,it),e)||[])[0]))return i;d&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(o=K.needsContext.test(t)?0:l.length;o--&&(h=l[o],!s.relative[u=h.type]);)if((c=s.find[u])&&(n=c(h.matches[0].replace(et,it),tt.test(l[0].type)&&vt(e.parentNode)||e))){if(l.splice(o,1),!(t=n.length&&yt(l)))return F.apply(i,n),i;break}}return(d||r(t,p))(n,e,!g,i,!e||tt.test(t)&&vt(e.parentNode)||e),i},i.sortStable=b.split("").sort(A).join("")===b,i.detectDuplicates=!!c,d(),i.sortDetached=ut((function(t){return 1&t.compareDocumentPosition(p.createElement("fieldset"))})),ut((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||ct("type|href|height|width",(function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),i.attributes&&ut((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||ct("value",(function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),ut((function(t){return null==t.getAttribute("disabled")}))||ct(N,(function(t,e,i){var s;if(!i)return!0===t[e]?e.toLowerCase():(s=t.getAttributeNode(e))&&s.specified?s.value:null})),rt}(s);C.find=S,C.expr=S.selectors,C.expr[":"]=C.expr.pseudos,C.uniqueSort=C.unique=S.uniqueSort,C.text=S.getText,C.isXMLDoc=S.isXML,C.contains=S.contains,C.escapeSelector=S.escape;var T=function(t,e,i){for(var s=[],n=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(n&&C(t).is(i))break;s.push(t)}return s},A=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},E=C.expr.match.needsContext;function M(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var I=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function P(t,e,i){return v(e)?C.grep(t,(function(t,s){return!!e.call(t,s,t)!==i})):e.nodeType?C.grep(t,(function(t){return t===e!==i})):"string"!=typeof e?C.grep(t,(function(t){return u.call(e,t)>-1!==i})):C.filter(e,t,i)}C.filter=function(t,e,i){var s=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===s.nodeType?C.find.matchesSelector(s,t)?[s]:[]:C.find.matches(t,C.grep(e,(function(t){return 1===t.nodeType})))},C.fn.extend({find:function(t){var e,i,s=this.length,n=this;if("string"!=typeof t)return this.pushStack(C(t).filter((function(){for(e=0;e<s;e++)if(C.contains(n[e],this))return!0})));for(i=this.pushStack([]),e=0;e<s;e++)C.find(t,n[e],i);return s>1?C.uniqueSort(i):i},filter:function(t){return this.pushStack(P(this,t||[],!1))},not:function(t){return this.pushStack(P(this,t||[],!0))},is:function(t){return!!P(this,"string"==typeof t&&E.test(t)?C(t):t||[],!1).length}});var F,O=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(C.fn.init=function(t,e,i){var s,n;if(!t)return this;if(i=i||F,"string"==typeof t){if(!(s="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:O.exec(t))||!s[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(s[1]){if(e=e instanceof C?e[0]:e,C.merge(this,C.parseHTML(s[1],e&&e.nodeType?e.ownerDocument||e:y,!0)),I.test(s[1])&&C.isPlainObject(e))for(s in e)v(this[s])?this[s](e[s]):this.attr(s,e[s]);return this}return(n=y.getElementById(s[2]))&&(this[0]=n,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):v(t)?void 0!==i.ready?i.ready(t):t(C):C.makeArray(t,this)}).prototype=C.fn,F=C(y);var H=/^(?:parents|prev(?:Until|All))/,N={children:!0,contents:!0,next:!0,prev:!0};function L(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}C.fn.extend({has:function(t){var e=C(t,this),i=e.length;return this.filter((function(){for(var t=0;t<i;t++)if(C.contains(this,e[t]))return!0}))},closest:function(t,e){var i,s=0,n=this.length,o=[],a="string"!=typeof t&&C(t);if(!E.test(t))for(;s<n;s++)for(i=this[s];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(a?a.index(i)>-1:1===i.nodeType&&C.find.matchesSelector(i,t))){o.push(i);break}return this.pushStack(o.length>1?C.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?u.call(C(t),this[0]):u.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(C.uniqueSort(C.merge(this.get(),C(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),C.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return T(t,"parentNode")},parentsUntil:function(t,e,i){return T(t,"parentNode",i)},next:function(t){return L(t,"nextSibling")},prev:function(t){return L(t,"previousSibling")},nextAll:function(t){return T(t,"nextSibling")},prevAll:function(t){return T(t,"previousSibling")},nextUntil:function(t,e,i){return T(t,"nextSibling",i)},prevUntil:function(t,e,i){return T(t,"previousSibling",i)},siblings:function(t){return A((t.parentNode||{}).firstChild,t)},children:function(t){return A(t.firstChild)},contents:function(t){return null!=t.contentDocument&&a(t.contentDocument)?t.contentDocument:(M(t,"template")&&(t=t.content||t),C.merge([],t.childNodes))}},(function(t,e){C.fn[t]=function(i,s){var n=C.map(this,e,i);return"Until"!==t.slice(-5)&&(s=i),s&&"string"==typeof s&&(n=C.filter(s,n)),this.length>1&&(N[t]||C.uniqueSort(n),H.test(t)&&n.reverse()),this.pushStack(n)}}));var B=/[^\x20\t\r\n\f]+/g;function R(t){return t}function z(t){throw t}function j(t,e,i,s){var n;try{t&&v(n=t.promise)?n.call(t).done(e).fail(i):t&&v(n=t.then)?n.call(t,e,i):e.apply(void 0,[t].slice(s))}catch(t){i.apply(void 0,[t])}}C.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return C.each(t.match(B)||[],(function(t,i){e[i]=!0})),e}(t):C.extend({},t);var e,i,s,n,o=[],a=[],r=-1,l=function(){for(n=n||t.once,s=e=!0;a.length;r=-1)for(i=a.shift();++r<o.length;)!1===o[r].apply(i[0],i[1])&&t.stopOnFalse&&(r=o.length,i=!1);t.memory||(i=!1),e=!1,n&&(o=i?[]:"")},h={add:function(){return o&&(i&&!e&&(r=o.length-1,a.push(i)),function e(i){C.each(i,(function(i,s){v(s)?t.unique&&h.has(s)||o.push(s):s&&s.length&&"string"!==w(s)&&e(s)}))}(arguments),i&&!e&&l()),this},remove:function(){return C.each(arguments,(function(t,e){for(var i;(i=C.inArray(e,o,i))>-1;)o.splice(i,1),i<=r&&r--})),this},has:function(t){return t?C.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return n=a=[],o=i="",this},disabled:function(){return!o},lock:function(){return n=a=[],i||e||(o=i=""),this},locked:function(){return!!n},fireWith:function(t,i){return n||(i=[t,(i=i||[]).slice?i.slice():i],a.push(i),e||l()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!s}};return h},C.extend({Deferred:function(t){var e=[["notify","progress",C.Callbacks("memory"),C.Callbacks("memory"),2],["resolve","done",C.Callbacks("once memory"),C.Callbacks("once memory"),0,"resolved"],["reject","fail",C.Callbacks("once memory"),C.Callbacks("once memory"),1,"rejected"]],i="pending",n={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},catch:function(t){return n.then(null,t)},pipe:function(){var t=arguments;return C.Deferred((function(i){C.each(e,(function(e,s){var n=v(t[s[4]])&&t[s[4]];o[s[1]]((function(){var t=n&&n.apply(this,arguments);t&&v(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[s[0]+"With"](this,n?[t]:arguments)}))})),t=null})).promise()},then:function(t,i,n){var o=0;function a(t,e,i,n){return function(){var r=this,l=arguments,h=function(){var s,h;if(!(t<o)){if((s=i.apply(r,l))===e.promise())throw new TypeError("Thenable self-resolution");h=s&&("object"==typeof s||"function"==typeof s)&&s.then,v(h)?n?h.call(s,a(o,e,R,n),a(o,e,z,n)):(o++,h.call(s,a(o,e,R,n),a(o,e,z,n),a(o,e,R,e.notifyWith))):(i!==R&&(r=void 0,l=[s]),(n||e.resolveWith)(r,l))}},u=n?h:function(){try{h()}catch(s){C.Deferred.exceptionHook&&C.Deferred.exceptionHook(s,u.stackTrace),t+1>=o&&(i!==z&&(r=void 0,l=[s]),e.rejectWith(r,l))}};t?u():(C.Deferred.getStackHook&&(u.stackTrace=C.Deferred.getStackHook()),s.setTimeout(u))}}return C.Deferred((function(s){e[0][3].add(a(0,s,v(n)?n:R,s.notifyWith)),e[1][3].add(a(0,s,v(t)?t:R)),e[2][3].add(a(0,s,v(i)?i:z))})).promise()},promise:function(t){return null!=t?C.extend(t,n):n}},o={};return C.each(e,(function(t,s){var a=s[2],r=s[5];n[s[1]]=a.add,r&&a.add((function(){i=r}),e[3-t][2].disable,e[3-t][3].disable,e[0][2].lock,e[0][3].lock),a.add(s[3].fire),o[s[0]]=function(){return o[s[0]+"With"](this===o?void 0:this,arguments),this},o[s[0]+"With"]=a.fireWith})),n.promise(o),t&&t.call(o,o),o},when:function(t){var e=arguments.length,i=e,s=Array(i),n=r.call(arguments),o=C.Deferred(),a=function(t){return function(i){s[t]=this,n[t]=arguments.length>1?r.call(arguments):i,--e||o.resolveWith(s,n)}};if(e<=1&&(j(t,o.done(a(i)).resolve,o.reject,!e),"pending"===o.state()||v(n[i]&&n[i].then)))return o.then();for(;i--;)j(n[i],a(i),o.reject);return o.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;C.Deferred.exceptionHook=function(t,e){s.console&&s.console.warn&&t&&W.test(t.name)&&s.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},C.readyException=function(t){s.setTimeout((function(){throw t}))};var q=C.Deferred();function V(){y.removeEventListener("DOMContentLoaded",V),s.removeEventListener("load",V),C.ready()}C.fn.ready=function(t){return q.then(t).catch((function(t){C.readyException(t)})),this},C.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--C.readyWait:C.isReady)||(C.isReady=!0,!0!==t&&--C.readyWait>0||q.resolveWith(y,[C]))}}),C.ready.then=q.then,"complete"===y.readyState||"loading"!==y.readyState&&!y.documentElement.doScroll?s.setTimeout(C.ready):(y.addEventListener("DOMContentLoaded",V),s.addEventListener("load",V));var $=function(t,e,i,s,n,o,a){var r=0,l=t.length,h=null==i;if("object"===w(i))for(r in n=!0,i)$(t,e,r,i[r],!0,o,a);else if(void 0!==s&&(n=!0,v(s)||(a=!0),h&&(a?(e.call(t,s),e=null):(h=e,e=function(t,e,i){return h.call(C(t),i)})),e))for(;r<l;r++)e(t[r],i,a?s:s.call(t[r],r,e(t[r],i)));return n?t:h?e.call(t):l?e(t[0],i):o},Y=/^-ms-/,U=/-([a-z])/g;function K(t,e){return e.toUpperCase()}function X(t){return t.replace(Y,"ms-").replace(U,K)}var G=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function J(){this.expando=C.expando+J.uid++}J.uid=1,J.prototype={cache:function(t){var e=t[this.expando];return e||(e={},G(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var s,n=this.cache(t);if("string"==typeof e)n[X(e)]=i;else for(s in e)n[X(s)]=e[s];return n},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][X(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,s=t[this.expando];if(void 0!==s){if(void 0!==e){i=(e=Array.isArray(e)?e.map(X):(e=X(e))in s?[e]:e.match(B)||[]).length;for(;i--;)delete s[e[i]]}(void 0===e||C.isEmptyObject(s))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!C.isEmptyObject(e)}};var Q=new J,Z=new J,tt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,et=/[A-Z]/g;function it(t,e,i){var s;if(void 0===i&&1===t.nodeType)if(s="data-"+e.replace(et,"-$&").toLowerCase(),"string"==typeof(i=t.getAttribute(s))){try{i=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:tt.test(t)?JSON.parse(t):t)}(i)}catch(t){}Z.set(t,e,i)}else i=void 0;return i}C.extend({hasData:function(t){return Z.hasData(t)||Q.hasData(t)},data:function(t,e,i){return Z.access(t,e,i)},removeData:function(t,e){Z.remove(t,e)},_data:function(t,e,i){return Q.access(t,e,i)},_removeData:function(t,e){Q.remove(t,e)}}),C.fn.extend({data:function(t,e){var i,s,n,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(n=Z.get(o),1===o.nodeType&&!Q.get(o,"hasDataAttrs"))){for(i=a.length;i--;)a[i]&&0===(s=a[i].name).indexOf("data-")&&(s=X(s.slice(5)),it(o,s,n[s]));Q.set(o,"hasDataAttrs",!0)}return n}return"object"==typeof t?this.each((function(){Z.set(this,t)})):$(this,(function(e){var i;if(o&&void 0===e)return void 0!==(i=Z.get(o,t))||void 0!==(i=it(o,t))?i:void 0;this.each((function(){Z.set(this,t,e)}))}),null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each((function(){Z.remove(this,t)}))}}),C.extend({queue:function(t,e,i){var s;if(t)return e=(e||"fx")+"queue",s=Q.get(t,e),i&&(!s||Array.isArray(i)?s=Q.access(t,e,C.makeArray(i)):s.push(i)),s||[]},dequeue:function(t,e){e=e||"fx";var i=C.queue(t,e),s=i.length,n=i.shift(),o=C._queueHooks(t,e);"inprogress"===n&&(n=i.shift(),s--),n&&("fx"===e&&i.unshift("inprogress"),delete o.stop,n.call(t,(function(){C.dequeue(t,e)}),o)),!s&&o&&o.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Q.get(t,i)||Q.access(t,i,{empty:C.Callbacks("once memory").add((function(){Q.remove(t,[e+"queue",i])}))})}}),C.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?C.queue(this[0],t):void 0===e?this:this.each((function(){var i=C.queue(this,t,e);C._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&C.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){C.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,s=1,n=C.Deferred(),o=this,a=this.length,r=function(){--s||n.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)(i=Q.get(o[a],t+"queueHooks"))&&i.empty&&(s++,i.empty.add(r));return r(),n.promise(e)}});var st=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,nt=new RegExp("^(?:([+-])=|)("+st+")([a-z%]*)$","i"),ot=["Top","Right","Bottom","Left"],at=y.documentElement,rt=function(t){return C.contains(t.ownerDocument,t)},lt={composed:!0};at.getRootNode&&(rt=function(t){return C.contains(t.ownerDocument,t)||t.getRootNode(lt)===t.ownerDocument});var ht=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&rt(t)&&"none"===C.css(t,"display")};function ut(t,e,i,s){var n,o,a=20,r=s?function(){return s.cur()}:function(){return C.css(t,e,"")},l=r(),h=i&&i[3]||(C.cssNumber[e]?"":"px"),u=t.nodeType&&(C.cssNumber[e]||"px"!==h&&+l)&&nt.exec(C.css(t,e));if(u&&u[3]!==h){for(l/=2,h=h||u[3],u=+l||1;a--;)C.style(t,e,u+h),(1-o)*(1-(o=r()/l||.5))<=0&&(a=0),u/=o;u*=2,C.style(t,e,u+h),i=i||[]}return i&&(u=+u||+l||0,n=i[1]?u+(i[1]+1)*i[2]:+i[2],s&&(s.unit=h,s.start=u,s.end=n)),n}var ct={};function dt(t){var e,i=t.ownerDocument,s=t.nodeName,n=ct[s];return n||(e=i.body.appendChild(i.createElement(s)),n=C.css(e,"display"),e.parentNode.removeChild(e),"none"===n&&(n="block"),ct[s]=n,n)}function pt(t,e){for(var i,s,n=[],o=0,a=t.length;o<a;o++)(s=t[o]).style&&(i=s.style.display,e?("none"===i&&(n[o]=Q.get(s,"display")||null,n[o]||(s.style.display="")),""===s.style.display&&ht(s)&&(n[o]=dt(s))):"none"!==i&&(n[o]="none",Q.set(s,"display",i)));for(o=0;o<a;o++)null!=n[o]&&(t[o].style.display=n[o]);return t}C.fn.extend({show:function(){return pt(this,!0)},hide:function(){return pt(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){ht(this)?C(this).show():C(this).hide()}))}});var ft,gt,mt=/^(?:checkbox|radio)$/i,vt=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,_t=/^$|^module$|\/(?:java|ecma)script/i;ft=y.createDocumentFragment().appendChild(y.createElement("div")),(gt=y.createElement("input")).setAttribute("type","radio"),gt.setAttribute("checked","checked"),gt.setAttribute("name","t"),ft.appendChild(gt),m.checkClone=ft.cloneNode(!0).cloneNode(!0).lastChild.checked,ft.innerHTML="<textarea>x</textarea>",m.noCloneChecked=!!ft.cloneNode(!0).lastChild.defaultValue,ft.innerHTML="<option></option>",m.option=!!ft.lastChild;var yt={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function bt(t,e){var i;return i=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&M(t,e)?C.merge([t],i):i}function kt(t,e){for(var i=0,s=t.length;i<s;i++)Q.set(t[i],"globalEval",!e||Q.get(e[i],"globalEval"))}yt.tbody=yt.tfoot=yt.colgroup=yt.caption=yt.thead,yt.th=yt.td,m.option||(yt.optgroup=yt.option=[1,"<select multiple='multiple'>","</select>"]);var wt=/<|&#?\w+;/;function xt(t,e,i,s,n){for(var o,a,r,l,h,u,c=e.createDocumentFragment(),d=[],p=0,f=t.length;p<f;p++)if((o=t[p])||0===o)if("object"===w(o))C.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){for(a=a||c.appendChild(e.createElement("div")),r=(vt.exec(o)||["",""])[1].toLowerCase(),l=yt[r]||yt._default,a.innerHTML=l[1]+C.htmlPrefilter(o)+l[2],u=l[0];u--;)a=a.lastChild;C.merge(d,a.childNodes),(a=c.firstChild).textContent=""}else d.push(e.createTextNode(o));for(c.textContent="",p=0;o=d[p++];)if(s&&C.inArray(o,s)>-1)n&&n.push(o);else if(h=rt(o),a=bt(c.appendChild(o),"script"),h&&kt(a),i)for(u=0;o=a[u++];)_t.test(o.type||"")&&i.push(o);return c}var Ct=/^([^.]*)(?:\.(.+)|)/;function Dt(){return!0}function St(){return!1}function Tt(t,e){return t===function(){try{return y.activeElement}catch(t){}}()==("focus"===e)}function At(t,e,i,s,n,o){var a,r;if("object"==typeof e){for(r in"string"!=typeof i&&(s=s||i,i=void 0),e)At(t,r,i,s,e[r],o);return t}if(null==s&&null==n?(n=i,s=i=void 0):null==n&&("string"==typeof i?(n=s,s=void 0):(n=s,s=i,i=void 0)),!1===n)n=St;else if(!n)return t;return 1===o&&(a=n,n=function(t){return C().off(t),a.apply(this,arguments)},n.guid=a.guid||(a.guid=C.guid++)),t.each((function(){C.event.add(this,e,n,s,i)}))}function Et(t,e,i){i?(Q.set(t,e,!1),C.event.add(t,e,{namespace:!1,handler:function(t){var s,n,o=Q.get(this,e);if(1&t.isTrigger&&this[e]){if(o.length)(C.event.special[e]||{}).delegateType&&t.stopPropagation();else if(o=r.call(arguments),Q.set(this,e,o),s=i(this,e),this[e](),o!==(n=Q.get(this,e))||s?Q.set(this,e,!1):n={},o!==n)return t.stopImmediatePropagation(),t.preventDefault(),n&&n.value}else o.length&&(Q.set(this,e,{value:C.event.trigger(C.extend(o[0],C.Event.prototype),o.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===Q.get(t,e)&&C.event.add(t,e,Dt)}C.event={global:{},add:function(t,e,i,s,n){var o,a,r,l,h,u,c,d,p,f,g,m=Q.get(t);if(G(t))for(i.handler&&(i=(o=i).handler,n=o.selector),n&&C.find.matchesSelector(at,n),i.guid||(i.guid=C.guid++),(l=m.events)||(l=m.events=Object.create(null)),(a=m.handle)||(a=m.handle=function(e){return void 0!==C&&C.event.triggered!==e.type?C.event.dispatch.apply(t,arguments):void 0}),h=(e=(e||"").match(B)||[""]).length;h--;)p=g=(r=Ct.exec(e[h])||[])[1],f=(r[2]||"").split(".").sort(),p&&(c=C.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,c=C.event.special[p]||{},u=C.extend({type:p,origType:g,data:s,handler:i,guid:i.guid,selector:n,needsContext:n&&C.expr.match.needsContext.test(n),namespace:f.join(".")},o),(d=l[p])||((d=l[p]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(t,s,f,a)||t.addEventListener&&t.addEventListener(p,a)),c.add&&(c.add.call(t,u),u.handler.guid||(u.handler.guid=i.guid)),n?d.splice(d.delegateCount++,0,u):d.push(u),C.event.global[p]=!0)},remove:function(t,e,i,s,n){var o,a,r,l,h,u,c,d,p,f,g,m=Q.hasData(t)&&Q.get(t);if(m&&(l=m.events)){for(h=(e=(e||"").match(B)||[""]).length;h--;)if(p=g=(r=Ct.exec(e[h])||[])[1],f=(r[2]||"").split(".").sort(),p){for(c=C.event.special[p]||{},d=l[p=(s?c.delegateType:c.bindType)||p]||[],r=r[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=d.length;o--;)u=d[o],!n&&g!==u.origType||i&&i.guid!==u.guid||r&&!r.test(u.namespace)||s&&s!==u.selector&&("**"!==s||!u.selector)||(d.splice(o,1),u.selector&&d.delegateCount--,c.remove&&c.remove.call(t,u));a&&!d.length&&(c.teardown&&!1!==c.teardown.call(t,f,m.handle)||C.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)C.event.remove(t,p+e[h],i,s,!0);C.isEmptyObject(l)&&Q.remove(t,"handle events")}},dispatch:function(t){var e,i,s,n,o,a,r=new Array(arguments.length),l=C.event.fix(t),h=(Q.get(this,"events")||Object.create(null))[l.type]||[],u=C.event.special[l.type]||{};for(r[0]=l,e=1;e<arguments.length;e++)r[e]=arguments[e];if(l.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,l)){for(a=C.event.handlers.call(this,l,h),e=0;(n=a[e++])&&!l.isPropagationStopped();)for(l.currentTarget=n.elem,i=0;(o=n.handlers[i++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==o.namespace&&!l.rnamespace.test(o.namespace)||(l.handleObj=o,l.data=o.data,void 0!==(s=((C.event.special[o.origType]||{}).handle||o.handler).apply(n.elem,r))&&!1===(l.result=s)&&(l.preventDefault(),l.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,l),l.result}},handlers:function(t,e){var i,s,n,o,a,r=[],l=e.delegateCount,h=t.target;if(l&&h.nodeType&&!("click"===t.type&&t.button>=1))for(;h!==this;h=h.parentNode||this)if(1===h.nodeType&&("click"!==t.type||!0!==h.disabled)){for(o=[],a={},i=0;i<l;i++)void 0===a[n=(s=e[i]).selector+" "]&&(a[n]=s.needsContext?C(n,this).index(h)>-1:C.find(n,this,null,[h]).length),a[n]&&o.push(s);o.length&&r.push({elem:h,handlers:o})}return h=this,l<e.length&&r.push({elem:h,handlers:e.slice(l)}),r},addProp:function(t,e){Object.defineProperty(C.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[C.expando]?t:new C.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return mt.test(e.type)&&e.click&&M(e,"input")&&Et(e,"click",Dt),!1},trigger:function(t){var e=this||t;return mt.test(e.type)&&e.click&&M(e,"input")&&Et(e,"click"),!0},_default:function(t){var e=t.target;return mt.test(e.type)&&e.click&&M(e,"input")&&Q.get(e,"click")||M(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},C.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},C.Event=function(t,e){if(!(this instanceof C.Event))return new C.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?Dt:St,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&C.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[C.expando]=!0},C.Event.prototype={constructor:C.Event,isDefaultPrevented:St,isPropagationStopped:St,isImmediatePropagationStopped:St,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=Dt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=Dt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=Dt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},C.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},C.event.addProp),C.each({focus:"focusin",blur:"focusout"},(function(t,e){C.event.special[t]={setup:function(){return Et(this,t,Tt),!1},trigger:function(){return Et(this,t),!0},_default:function(){return!0},delegateType:e}})),C.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){C.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,s=this,n=t.relatedTarget,o=t.handleObj;return n&&(n===s||C.contains(s,n))||(t.type=o.origType,i=o.handler.apply(this,arguments),t.type=e),i}}})),C.fn.extend({on:function(t,e,i,s){return At(this,t,e,i,s)},one:function(t,e,i,s){return At(this,t,e,i,s,1)},off:function(t,e,i){var s,n;if(t&&t.preventDefault&&t.handleObj)return s=t.handleObj,C(t.delegateTarget).off(s.namespace?s.origType+"."+s.namespace:s.origType,s.selector,s.handler),this;if("object"==typeof t){for(n in t)this.off(n,e,t[n]);return this}return!1!==e&&"function"!=typeof e||(i=e,e=void 0),!1===i&&(i=St),this.each((function(){C.event.remove(this,t,i,e)}))}});var Mt=/<script|<style|<link/i,It=/checked\s*(?:[^=]|=\s*.checked.)/i,Pt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ft(t,e){return M(t,"table")&&M(11!==e.nodeType?e:e.firstChild,"tr")&&C(t).children("tbody")[0]||t}function Ot(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Ht(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function Nt(t,e){var i,s,n,o,a,r;if(1===e.nodeType){if(Q.hasData(t)&&(r=Q.get(t).events))for(n in Q.remove(e,"handle events"),r)for(i=0,s=r[n].length;i<s;i++)C.event.add(e,n,r[n][i]);Z.hasData(t)&&(o=Z.access(t),a=C.extend({},o),Z.set(e,a))}}function Lt(t,e){var i=e.nodeName.toLowerCase();"input"===i&&mt.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function Bt(t,e,i,s){e=l(e);var n,o,a,r,h,u,c=0,d=t.length,p=d-1,f=e[0],g=v(f);if(g||d>1&&"string"==typeof f&&!m.checkClone&&It.test(f))return t.each((function(n){var o=t.eq(n);g&&(e[0]=f.call(this,n,o.html())),Bt(o,e,i,s)}));if(d&&(o=(n=xt(e,t[0].ownerDocument,!1,t,s)).firstChild,1===n.childNodes.length&&(n=o),o||s)){for(r=(a=C.map(bt(n,"script"),Ot)).length;c<d;c++)h=n,c!==p&&(h=C.clone(h,!0,!0),r&&C.merge(a,bt(h,"script"))),i.call(t[c],h,c);if(r)for(u=a[a.length-1].ownerDocument,C.map(a,Ht),c=0;c<r;c++)h=a[c],_t.test(h.type||"")&&!Q.access(h,"globalEval")&&C.contains(u,h)&&(h.src&&"module"!==(h.type||"").toLowerCase()?C._evalUrl&&!h.noModule&&C._evalUrl(h.src,{nonce:h.nonce||h.getAttribute("nonce")},u):k(h.textContent.replace(Pt,""),h,u))}return t}function Rt(t,e,i){for(var s,n=e?C.filter(e,t):t,o=0;null!=(s=n[o]);o++)i||1!==s.nodeType||C.cleanData(bt(s)),s.parentNode&&(i&&rt(s)&&kt(bt(s,"script")),s.parentNode.removeChild(s));return t}C.extend({htmlPrefilter:function(t){return t},clone:function(t,e,i){var s,n,o,a,r=t.cloneNode(!0),l=rt(t);if(!(m.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||C.isXMLDoc(t)))for(a=bt(r),s=0,n=(o=bt(t)).length;s<n;s++)Lt(o[s],a[s]);if(e)if(i)for(o=o||bt(t),a=a||bt(r),s=0,n=o.length;s<n;s++)Nt(o[s],a[s]);else Nt(t,r);return(a=bt(r,"script")).length>0&&kt(a,!l&&bt(t,"script")),r},cleanData:function(t){for(var e,i,s,n=C.event.special,o=0;void 0!==(i=t[o]);o++)if(G(i)){if(e=i[Q.expando]){if(e.events)for(s in e.events)n[s]?C.event.remove(i,s):C.removeEvent(i,s,e.handle);i[Q.expando]=void 0}i[Z.expando]&&(i[Z.expando]=void 0)}}}),C.fn.extend({detach:function(t){return Rt(this,t,!0)},remove:function(t){return Rt(this,t)},text:function(t){return $(this,(function(t){return void 0===t?C.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Bt(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Ft(this,t).appendChild(t)}))},prepend:function(){return Bt(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Ft(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Bt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Bt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(C.cleanData(bt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return C.clone(this,t,e)}))},html:function(t){return $(this,(function(t){var e=this[0]||{},i=0,s=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Mt.test(t)&&!yt[(vt.exec(t)||["",""])[1].toLowerCase()]){t=C.htmlPrefilter(t);try{for(;i<s;i++)1===(e=this[i]||{}).nodeType&&(C.cleanData(bt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Bt(this,arguments,(function(e){var i=this.parentNode;C.inArray(this,t)<0&&(C.cleanData(bt(this)),i&&i.replaceChild(e,this))}),t)}}),C.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){C.fn[t]=function(t){for(var i,s=[],n=C(t),o=n.length-1,a=0;a<=o;a++)i=a===o?this:this.clone(!0),C(n[a])[e](i),h.apply(s,i.get());return this.pushStack(s)}}));var zt=new RegExp("^("+st+")(?!px)[a-z%]+$","i"),jt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=s),e.getComputedStyle(t)},Wt=function(t,e,i){var s,n,o={};for(n in e)o[n]=t.style[n],t.style[n]=e[n];for(n in s=i.call(t),e)t.style[n]=o[n];return s},qt=new RegExp(ot.join("|"),"i");function Vt(t,e,i){var s,n,o,a,r=t.style;return(i=i||jt(t))&&(""!==(a=i.getPropertyValue(e)||i[e])||rt(t)||(a=C.style(t,e)),!m.pixelBoxStyles()&&zt.test(a)&&qt.test(e)&&(s=r.width,n=r.minWidth,o=r.maxWidth,r.minWidth=r.maxWidth=r.width=a,a=i.width,r.width=s,r.minWidth=n,r.maxWidth=o)),void 0!==a?a+"":a}function $t(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(u){h.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",at.appendChild(h).appendChild(u);var t=s.getComputedStyle(u);i="1%"!==t.top,l=12===e(t.marginLeft),u.style.right="60%",a=36===e(t.right),n=36===e(t.width),u.style.position="absolute",o=12===e(u.offsetWidth/3),at.removeChild(h),u=null}}function e(t){return Math.round(parseFloat(t))}var i,n,o,a,r,l,h=y.createElement("div"),u=y.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",m.clearCloneStyle="content-box"===u.style.backgroundClip,C.extend(m,{boxSizingReliable:function(){return t(),n},pixelBoxStyles:function(){return t(),a},pixelPosition:function(){return t(),i},reliableMarginLeft:function(){return t(),l},scrollboxSize:function(){return t(),o},reliableTrDimensions:function(){var t,e,i,n;return null==r&&(t=y.createElement("table"),e=y.createElement("tr"),i=y.createElement("div"),t.style.cssText="position:absolute;left:-11111px;border-collapse:separate",e.style.cssText="border:1px solid",e.style.height="1px",i.style.height="9px",i.style.display="block",at.appendChild(t).appendChild(e).appendChild(i),n=s.getComputedStyle(e),r=parseInt(n.height,10)+parseInt(n.borderTopWidth,10)+parseInt(n.borderBottomWidth,10)===e.offsetHeight,at.removeChild(t)),r}}))}();var Yt=["Webkit","Moz","ms"],Ut=y.createElement("div").style,Kt={};function Xt(t){return C.cssProps[t]||Kt[t]||(t in Ut?t:Kt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),i=Yt.length;i--;)if((t=Yt[i]+e)in Ut)return t}(t)||t)}var Gt=/^(none|table(?!-c[ea]).+)/,Jt=/^--/,Qt={position:"absolute",visibility:"hidden",display:"block"},Zt={letterSpacing:"0",fontWeight:"400"};function te(t,e,i){var s=nt.exec(e);return s?Math.max(0,s[2]-(i||0))+(s[3]||"px"):e}function ee(t,e,i,s,n,o){var a="width"===e?1:0,r=0,l=0;if(i===(s?"border":"content"))return 0;for(;a<4;a+=2)"margin"===i&&(l+=C.css(t,i+ot[a],!0,n)),s?("content"===i&&(l-=C.css(t,"padding"+ot[a],!0,n)),"margin"!==i&&(l-=C.css(t,"border"+ot[a]+"Width",!0,n))):(l+=C.css(t,"padding"+ot[a],!0,n),"padding"!==i?l+=C.css(t,"border"+ot[a]+"Width",!0,n):r+=C.css(t,"border"+ot[a]+"Width",!0,n));return!s&&o>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-o-l-r-.5))||0),l}function ie(t,e,i){var s=jt(t),n=(!m.boxSizingReliable()||i)&&"border-box"===C.css(t,"boxSizing",!1,s),o=n,a=Vt(t,e,s),r="offset"+e[0].toUpperCase()+e.slice(1);if(zt.test(a)){if(!i)return a;a="auto"}return(!m.boxSizingReliable()&&n||!m.reliableTrDimensions()&&M(t,"tr")||"auto"===a||!parseFloat(a)&&"inline"===C.css(t,"display",!1,s))&&t.getClientRects().length&&(n="border-box"===C.css(t,"boxSizing",!1,s),(o=r in t)&&(a=t[r])),(a=parseFloat(a)||0)+ee(t,e,i||(n?"border":"content"),o,s,a)+"px"}function se(t,e,i,s,n){return new se.prototype.init(t,e,i,s,n)}C.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=Vt(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,i,s){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var n,o,a,r=X(e),l=Jt.test(e),h=t.style;if(l||(e=Xt(r)),a=C.cssHooks[e]||C.cssHooks[r],void 0===i)return a&&"get"in a&&void 0!==(n=a.get(t,!1,s))?n:h[e];"string"==(o=typeof i)&&(n=nt.exec(i))&&n[1]&&(i=ut(t,e,n),o="number"),null!=i&&i==i&&("number"!==o||l||(i+=n&&n[3]||(C.cssNumber[r]?"":"px")),m.clearCloneStyle||""!==i||0!==e.indexOf("background")||(h[e]="inherit"),a&&"set"in a&&void 0===(i=a.set(t,i,s))||(l?h.setProperty(e,i):h[e]=i))}},css:function(t,e,i,s){var n,o,a,r=X(e);return Jt.test(e)||(e=Xt(r)),(a=C.cssHooks[e]||C.cssHooks[r])&&"get"in a&&(n=a.get(t,!0,i)),void 0===n&&(n=Vt(t,e,s)),"normal"===n&&e in Zt&&(n=Zt[e]),""===i||i?(o=parseFloat(n),!0===i||isFinite(o)?o||0:n):n}}),C.each(["height","width"],(function(t,e){C.cssHooks[e]={get:function(t,i,s){if(i)return!Gt.test(C.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?ie(t,e,s):Wt(t,Qt,(function(){return ie(t,e,s)}))},set:function(t,i,s){var n,o=jt(t),a=!m.scrollboxSize()&&"absolute"===o.position,r=(a||s)&&"border-box"===C.css(t,"boxSizing",!1,o),l=s?ee(t,e,s,r,o):0;return r&&a&&(l-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(o[e])-ee(t,e,"border",!1,o)-.5)),l&&(n=nt.exec(i))&&"px"!==(n[3]||"px")&&(t.style[e]=i,i=C.css(t,e)),te(0,i,l)}}})),C.cssHooks.marginLeft=$t(m.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Vt(t,"marginLeft"))||t.getBoundingClientRect().left-Wt(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),C.each({margin:"",padding:"",border:"Width"},(function(t,e){C.cssHooks[t+e]={expand:function(i){for(var s=0,n={},o="string"==typeof i?i.split(" "):[i];s<4;s++)n[t+ot[s]+e]=o[s]||o[s-2]||o[0];return n}},"margin"!==t&&(C.cssHooks[t+e].set=te)})),C.fn.extend({css:function(t,e){return $(this,(function(t,e,i){var s,n,o={},a=0;if(Array.isArray(e)){for(s=jt(t),n=e.length;a<n;a++)o[e[a]]=C.css(t,e[a],!1,s);return o}return void 0!==i?C.style(t,e,i):C.css(t,e)}),t,e,arguments.length>1)}}),C.Tween=se,se.prototype={constructor:se,init:function(t,e,i,s,n,o){this.elem=t,this.prop=i,this.easing=n||C.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=s,this.unit=o||(C.cssNumber[i]?"":"px")},cur:function(){var t=se.propHooks[this.prop];return t&&t.get?t.get(this):se.propHooks._default.get(this)},run:function(t){var e,i=se.propHooks[this.prop];return this.options.duration?this.pos=e=C.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):se.propHooks._default.set(this),this}},se.prototype.init.prototype=se.prototype,se.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=C.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){C.fx.step[t.prop]?C.fx.step[t.prop](t):1!==t.elem.nodeType||!C.cssHooks[t.prop]&&null==t.elem.style[Xt(t.prop)]?t.elem[t.prop]=t.now:C.style(t.elem,t.prop,t.now+t.unit)}}},se.propHooks.scrollTop=se.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},C.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},C.fx=se.prototype.init,C.fx.step={};var ne,oe,ae=/^(?:toggle|show|hide)$/,re=/queueHooks$/;function le(){oe&&(!1===y.hidden&&s.requestAnimationFrame?s.requestAnimationFrame(le):s.setTimeout(le,C.fx.interval),C.fx.tick())}function he(){return s.setTimeout((function(){ne=void 0})),ne=Date.now()}function ue(t,e){var i,s=0,n={height:t};for(e=e?1:0;s<4;s+=2-e)n["margin"+(i=ot[s])]=n["padding"+i]=t;return e&&(n.opacity=n.width=t),n}function ce(t,e,i){for(var s,n=(de.tweeners[e]||[]).concat(de.tweeners["*"]),o=0,a=n.length;o<a;o++)if(s=n[o].call(i,e,t))return s}function de(t,e,i){var s,n,o=0,a=de.prefilters.length,r=C.Deferred().always((function(){delete l.elem})),l=function(){if(n)return!1;for(var e=ne||he(),i=Math.max(0,h.startTime+h.duration-e),s=1-(i/h.duration||0),o=0,a=h.tweens.length;o<a;o++)h.tweens[o].run(s);return r.notifyWith(t,[h,s,i]),s<1&&a?i:(a||r.notifyWith(t,[h,1,0]),r.resolveWith(t,[h]),!1)},h=r.promise({elem:t,props:C.extend({},e),opts:C.extend(!0,{specialEasing:{},easing:C.easing._default},i),originalProperties:e,originalOptions:i,startTime:ne||he(),duration:i.duration,tweens:[],createTween:function(e,i){var s=C.Tween(t,h.opts,e,i,h.opts.specialEasing[e]||h.opts.easing);return h.tweens.push(s),s},stop:function(e){var i=0,s=e?h.tweens.length:0;if(n)return this;for(n=!0;i<s;i++)h.tweens[i].run(1);return e?(r.notifyWith(t,[h,1,0]),r.resolveWith(t,[h,e])):r.rejectWith(t,[h,e]),this}}),u=h.props;for(function(t,e){var i,s,n,o,a;for(i in t)if(n=e[s=X(i)],o=t[i],Array.isArray(o)&&(n=o[1],o=t[i]=o[0]),i!==s&&(t[s]=o,delete t[i]),(a=C.cssHooks[s])&&"expand"in a)for(i in o=a.expand(o),delete t[s],o)i in t||(t[i]=o[i],e[i]=n);else e[s]=n}(u,h.opts.specialEasing);o<a;o++)if(s=de.prefilters[o].call(h,t,u,h.opts))return v(s.stop)&&(C._queueHooks(h.elem,h.opts.queue).stop=s.stop.bind(s)),s;return C.map(u,ce,h),v(h.opts.start)&&h.opts.start.call(t,h),h.progress(h.opts.progress).done(h.opts.done,h.opts.complete).fail(h.opts.fail).always(h.opts.always),C.fx.timer(C.extend(l,{elem:t,anim:h,queue:h.opts.queue})),h}C.Animation=C.extend(de,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return ut(i.elem,t,nt.exec(e),i),i}]},tweener:function(t,e){v(t)?(e=t,t=["*"]):t=t.match(B);for(var i,s=0,n=t.length;s<n;s++)i=t[s],de.tweeners[i]=de.tweeners[i]||[],de.tweeners[i].unshift(e)},prefilters:[function(t,e,i){var s,n,o,a,r,l,h,u,c="width"in e||"height"in e,d=this,p={},f=t.style,g=t.nodeType&&ht(t),m=Q.get(t,"fxshow");for(s in i.queue||(null==(a=C._queueHooks(t,"fx")).unqueued&&(a.unqueued=0,r=a.empty.fire,a.empty.fire=function(){a.unqueued||r()}),a.unqueued++,d.always((function(){d.always((function(){a.unqueued--,C.queue(t,"fx").length||a.empty.fire()}))}))),e)if(n=e[s],ae.test(n)){if(delete e[s],o=o||"toggle"===n,n===(g?"hide":"show")){if("show"!==n||!m||void 0===m[s])continue;g=!0}p[s]=m&&m[s]||C.style(t,s)}if((l=!C.isEmptyObject(e))||!C.isEmptyObject(p))for(s in c&&1===t.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(h=m&&m.display)&&(h=Q.get(t,"display")),"none"===(u=C.css(t,"display"))&&(h?u=h:(pt([t],!0),h=t.style.display||h,u=C.css(t,"display"),pt([t]))),("inline"===u||"inline-block"===u&&null!=h)&&"none"===C.css(t,"float")&&(l||(d.done((function(){f.display=h})),null==h&&(u=f.display,h="none"===u?"":u)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",d.always((function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]}))),l=!1,p)l||(m?"hidden"in m&&(g=m.hidden):m=Q.access(t,"fxshow",{display:h}),o&&(m.hidden=!g),g&&pt([t],!0),d.done((function(){for(s in g||pt([t]),Q.remove(t,"fxshow"),p)C.style(t,s,p[s])}))),l=ce(g?m[s]:0,s,d),s in m||(m[s]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?de.prefilters.unshift(t):de.prefilters.push(t)}}),C.speed=function(t,e,i){var s=t&&"object"==typeof t?C.extend({},t):{complete:i||!i&&e||v(t)&&t,duration:t,easing:i&&e||e&&!v(e)&&e};return C.fx.off?s.duration=0:"number"!=typeof s.duration&&(s.duration in C.fx.speeds?s.duration=C.fx.speeds[s.duration]:s.duration=C.fx.speeds._default),null!=s.queue&&!0!==s.queue||(s.queue="fx"),s.old=s.complete,s.complete=function(){v(s.old)&&s.old.call(this),s.queue&&C.dequeue(this,s.queue)},s},C.fn.extend({fadeTo:function(t,e,i,s){return this.filter(ht).css("opacity",0).show().end().animate({opacity:e},t,i,s)},animate:function(t,e,i,s){var n=C.isEmptyObject(t),o=C.speed(e,i,s),a=function(){var e=de(this,C.extend({},t),o);(n||Q.get(this,"finish"))&&e.stop(!0)};return a.finish=a,n||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(t,e,i){var s=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&this.queue(t||"fx",[]),this.each((function(){var e=!0,n=null!=t&&t+"queueHooks",o=C.timers,a=Q.get(this);if(n)a[n]&&a[n].stop&&s(a[n]);else for(n in a)a[n]&&a[n].stop&&re.test(n)&&s(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=t&&o[n].queue!==t||(o[n].anim.stop(i),e=!1,o.splice(n,1));!e&&i||C.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,i=Q.get(this),s=i[t+"queue"],n=i[t+"queueHooks"],o=C.timers,a=s?s.length:0;for(i.finish=!0,C.queue(this,t,[]),n&&n.stop&&n.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<a;e++)s[e]&&s[e].finish&&s[e].finish.call(this);delete i.finish}))}}),C.each(["toggle","show","hide"],(function(t,e){var i=C.fn[e];C.fn[e]=function(t,s,n){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(ue(e,!0),t,s,n)}})),C.each({slideDown:ue("show"),slideUp:ue("hide"),slideToggle:ue("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){C.fn[t]=function(t,i,s){return this.animate(e,t,i,s)}})),C.timers=[],C.fx.tick=function(){var t,e=0,i=C.timers;for(ne=Date.now();e<i.length;e++)(t=i[e])()||i[e]!==t||i.splice(e--,1);i.length||C.fx.stop(),ne=void 0},C.fx.timer=function(t){C.timers.push(t),C.fx.start()},C.fx.interval=13,C.fx.start=function(){oe||(oe=!0,le())},C.fx.stop=function(){oe=null},C.fx.speeds={slow:600,fast:200,_default:400},C.fn.delay=function(t,e){return t=C.fx&&C.fx.speeds[t]||t,e=e||"fx",this.queue(e,(function(e,i){var n=s.setTimeout(e,t);i.stop=function(){s.clearTimeout(n)}}))},function(){var t=y.createElement("input"),e=y.createElement("select").appendChild(y.createElement("option"));t.type="checkbox",m.checkOn=""!==t.value,m.optSelected=e.selected,(t=y.createElement("input")).value="t",t.type="radio",m.radioValue="t"===t.value}();var pe,fe=C.expr.attrHandle;C.fn.extend({attr:function(t,e){return $(this,C.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each((function(){C.removeAttr(this,t)}))}}),C.extend({attr:function(t,e,i){var s,n,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===t.getAttribute?C.prop(t,e,i):(1===o&&C.isXMLDoc(t)||(n=C.attrHooks[e.toLowerCase()]||(C.expr.match.bool.test(e)?pe:void 0)),void 0!==i?null===i?void C.removeAttr(t,e):n&&"set"in n&&void 0!==(s=n.set(t,i,e))?s:(t.setAttribute(e,i+""),i):n&&"get"in n&&null!==(s=n.get(t,e))?s:null==(s=C.find.attr(t,e))?void 0:s)},attrHooks:{type:{set:function(t,e){if(!m.radioValue&&"radio"===e&&M(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,s=0,n=e&&e.match(B);if(n&&1===t.nodeType)for(;i=n[s++];)t.removeAttribute(i)}}),pe={set:function(t,e,i){return!1===e?C.removeAttr(t,i):t.setAttribute(i,i),i}},C.each(C.expr.match.bool.source.match(/\w+/g),(function(t,e){var i=fe[e]||C.find.attr;fe[e]=function(t,e,s){var n,o,a=e.toLowerCase();return s||(o=fe[a],fe[a]=n,n=null!=i(t,e,s)?a:null,fe[a]=o),n}}));var ge=/^(?:input|select|textarea|button)$/i,me=/^(?:a|area)$/i;function ve(t){return(t.match(B)||[]).join(" ")}function _e(t){return t.getAttribute&&t.getAttribute("class")||""}function ye(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(B)||[]}C.fn.extend({prop:function(t,e){return $(this,C.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each((function(){delete this[C.propFix[t]||t]}))}}),C.extend({prop:function(t,e,i){var s,n,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&C.isXMLDoc(t)||(e=C.propFix[e]||e,n=C.propHooks[e]),void 0!==i?n&&"set"in n&&void 0!==(s=n.set(t,i,e))?s:t[e]=i:n&&"get"in n&&null!==(s=n.get(t,e))?s:t[e]},propHooks:{tabIndex:{get:function(t){var e=C.find.attr(t,"tabindex");return e?parseInt(e,10):ge.test(t.nodeName)||me.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),m.optSelected||(C.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),C.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){C.propFix[this.toLowerCase()]=this})),C.fn.extend({addClass:function(t){var e,i,s,n,o,a,r,l=0;if(v(t))return this.each((function(e){C(this).addClass(t.call(this,e,_e(this)))}));if((e=ye(t)).length)for(;i=this[l++];)if(n=_e(i),s=1===i.nodeType&&" "+ve(n)+" "){for(a=0;o=e[a++];)s.indexOf(" "+o+" ")<0&&(s+=o+" ");n!==(r=ve(s))&&i.setAttribute("class",r)}return this},removeClass:function(t){var e,i,s,n,o,a,r,l=0;if(v(t))return this.each((function(e){C(this).removeClass(t.call(this,e,_e(this)))}));if(!arguments.length)return this.attr("class","");if((e=ye(t)).length)for(;i=this[l++];)if(n=_e(i),s=1===i.nodeType&&" "+ve(n)+" "){for(a=0;o=e[a++];)for(;s.indexOf(" "+o+" ")>-1;)s=s.replace(" "+o+" "," ");n!==(r=ve(s))&&i.setAttribute("class",r)}return this},toggleClass:function(t,e){var i=typeof t,s="string"===i||Array.isArray(t);return"boolean"==typeof e&&s?e?this.addClass(t):this.removeClass(t):v(t)?this.each((function(i){C(this).toggleClass(t.call(this,i,_e(this),e),e)})):this.each((function(){var e,n,o,a;if(s)for(n=0,o=C(this),a=ye(t);e=a[n++];)o.hasClass(e)?o.removeClass(e):o.addClass(e);else void 0!==t&&"boolean"!==i||((e=_e(this))&&Q.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":Q.get(this,"__className__")||""))}))},hasClass:function(t){var e,i,s=0;for(e=" "+t+" ";i=this[s++];)if(1===i.nodeType&&(" "+ve(_e(i))+" ").indexOf(e)>-1)return!0;return!1}});var be=/\r/g;C.fn.extend({val:function(t){var e,i,s,n=this[0];return arguments.length?(s=v(t),this.each((function(i){var n;1===this.nodeType&&(null==(n=s?t.call(this,i,C(this).val()):t)?n="":"number"==typeof n?n+="":Array.isArray(n)&&(n=C.map(n,(function(t){return null==t?"":t+""}))),(e=C.valHooks[this.type]||C.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,n,"value")||(this.value=n))}))):n?(e=C.valHooks[n.type]||C.valHooks[n.nodeName.toLowerCase()])&&"get"in e&&void 0!==(i=e.get(n,"value"))?i:"string"==typeof(i=n.value)?i.replace(be,""):null==i?"":i:void 0}}),C.extend({valHooks:{option:{get:function(t){var e=C.find.attr(t,"value");return null!=e?e:ve(C.text(t))}},select:{get:function(t){var e,i,s,n=t.options,o=t.selectedIndex,a="select-one"===t.type,r=a?null:[],l=a?o+1:n.length;for(s=o<0?l:a?o:0;s<l;s++)if(((i=n[s]).selected||s===o)&&!i.disabled&&(!i.parentNode.disabled||!M(i.parentNode,"optgroup"))){if(e=C(i).val(),a)return e;r.push(e)}return r},set:function(t,e){for(var i,s,n=t.options,o=C.makeArray(e),a=n.length;a--;)((s=n[a]).selected=C.inArray(C.valHooks.option.get(s),o)>-1)&&(i=!0);return i||(t.selectedIndex=-1),o}}}}),C.each(["radio","checkbox"],(function(){C.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=C.inArray(C(t).val(),e)>-1}},m.checkOn||(C.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),m.focusin="onfocusin"in s;var ke=/^(?:focusinfocus|focusoutblur)$/,we=function(t){t.stopPropagation()};C.extend(C.event,{trigger:function(t,e,i,n){var o,a,r,l,h,u,c,d,f=[i||y],g=p.call(t,"type")?t.type:t,m=p.call(t,"namespace")?t.namespace.split("."):[];if(a=d=r=i=i||y,3!==i.nodeType&&8!==i.nodeType&&!ke.test(g+C.event.triggered)&&(g.indexOf(".")>-1&&(m=g.split("."),g=m.shift(),m.sort()),h=g.indexOf(":")<0&&"on"+g,(t=t[C.expando]?t:new C.Event(g,"object"==typeof t&&t)).isTrigger=n?2:3,t.namespace=m.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),e=null==e?[t]:C.makeArray(e,[t]),c=C.event.special[g]||{},n||!c.trigger||!1!==c.trigger.apply(i,e))){if(!n&&!c.noBubble&&!_(i)){for(l=c.delegateType||g,ke.test(l+g)||(a=a.parentNode);a;a=a.parentNode)f.push(a),r=a;r===(i.ownerDocument||y)&&f.push(r.defaultView||r.parentWindow||s)}for(o=0;(a=f[o++])&&!t.isPropagationStopped();)d=a,t.type=o>1?l:c.bindType||g,(u=(Q.get(a,"events")||Object.create(null))[t.type]&&Q.get(a,"handle"))&&u.apply(a,e),(u=h&&a[h])&&u.apply&&G(a)&&(t.result=u.apply(a,e),!1===t.result&&t.preventDefault());return t.type=g,n||t.isDefaultPrevented()||c._default&&!1!==c._default.apply(f.pop(),e)||!G(i)||h&&v(i[g])&&!_(i)&&((r=i[h])&&(i[h]=null),C.event.triggered=g,t.isPropagationStopped()&&d.addEventListener(g,we),i[g](),t.isPropagationStopped()&&d.removeEventListener(g,we),C.event.triggered=void 0,r&&(i[h]=r)),t.result}},simulate:function(t,e,i){var s=C.extend(new C.Event,i,{type:t,isSimulated:!0});C.event.trigger(s,null,e)}}),C.fn.extend({trigger:function(t,e){return this.each((function(){C.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var i=this[0];if(i)return C.event.trigger(t,e,i,!0)}}),m.focusin||C.each({focus:"focusin",blur:"focusout"},(function(t,e){var i=function(t){C.event.simulate(e,t.target,C.event.fix(t))};C.event.special[e]={setup:function(){var s=this.ownerDocument||this.document||this,n=Q.access(s,e);n||s.addEventListener(t,i,!0),Q.access(s,e,(n||0)+1)},teardown:function(){var s=this.ownerDocument||this.document||this,n=Q.access(s,e)-1;n?Q.access(s,e,n):(s.removeEventListener(t,i,!0),Q.remove(s,e))}}}));var xe=s.location,Ce={guid:Date.now()},De=/\?/;C.parseXML=function(t){var e,i;if(!t||"string"!=typeof t)return null;try{e=(new s.DOMParser).parseFromString(t,"text/xml")}catch(t){}return i=e&&e.getElementsByTagName("parsererror")[0],e&&!i||C.error("Invalid XML: "+(i?C.map(i.childNodes,(function(t){return t.textContent})).join("\n"):t)),e};var Se=/\[\]$/,Te=/\r?\n/g,Ae=/^(?:submit|button|image|reset|file)$/i,Ee=/^(?:input|select|textarea|keygen)/i;function Me(t,e,i,s){var n;if(Array.isArray(e))C.each(e,(function(e,n){i||Se.test(t)?s(t,n):Me(t+"["+("object"==typeof n&&null!=n?e:"")+"]",n,i,s)}));else if(i||"object"!==w(e))s(t,e);else for(n in e)Me(t+"["+n+"]",e[n],i,s)}C.param=function(t,e){var i,s=[],n=function(t,e){var i=v(e)?e():e;s[s.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!C.isPlainObject(t))C.each(t,(function(){n(this.name,this.value)}));else for(i in t)Me(i,t[i],e,n);return s.join("&")},C.fn.extend({serialize:function(){return C.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=C.prop(this,"elements");return t?C.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!C(this).is(":disabled")&&Ee.test(this.nodeName)&&!Ae.test(t)&&(this.checked||!mt.test(t))})).map((function(t,e){var i=C(this).val();return null==i?null:Array.isArray(i)?C.map(i,(function(t){return{name:e.name,value:t.replace(Te,"\r\n")}})):{name:e.name,value:i.replace(Te,"\r\n")}})).get()}});var Ie=/%20/g,Pe=/#.*$/,Fe=/([?&])_=[^&]*/,Oe=/^(.*?):[ \t]*([^\r\n]*)$/gm,He=/^(?:GET|HEAD)$/,Ne=/^\/\//,Le={},Be={},Re="*/".concat("*"),ze=y.createElement("a");function je(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var s,n=0,o=e.toLowerCase().match(B)||[];if(v(i))for(;s=o[n++];)"+"===s[0]?(s=s.slice(1)||"*",(t[s]=t[s]||[]).unshift(i)):(t[s]=t[s]||[]).push(i)}}function We(t,e,i,s){var n={},o=t===Be;function a(r){var l;return n[r]=!0,C.each(t[r]||[],(function(t,r){var h=r(e,i,s);return"string"!=typeof h||o||n[h]?o?!(l=h):void 0:(e.dataTypes.unshift(h),a(h),!1)})),l}return a(e.dataTypes[0])||!n["*"]&&a("*")}function qe(t,e){var i,s,n=C.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((n[i]?t:s||(s={}))[i]=e[i]);return s&&C.extend(!0,t,s),t}ze.href=xe.href,C.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:xe.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(xe.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Re,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":C.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?qe(qe(t,C.ajaxSettings),e):qe(C.ajaxSettings,t)},ajaxPrefilter:je(Le),ajaxTransport:je(Be),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var i,n,o,a,r,l,h,u,c,d,p=C.ajaxSetup({},e),f=p.context||p,g=p.context&&(f.nodeType||f.jquery)?C(f):C.event,m=C.Deferred(),v=C.Callbacks("once memory"),_=p.statusCode||{},b={},k={},w="canceled",x={readyState:0,getResponseHeader:function(t){var e;if(h){if(!a)for(a={};e=Oe.exec(o);)a[e[1].toLowerCase()+" "]=(a[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=a[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return h?o:null},setRequestHeader:function(t,e){return null==h&&(t=k[t.toLowerCase()]=k[t.toLowerCase()]||t,b[t]=e),this},overrideMimeType:function(t){return null==h&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(h)x.always(t[x.status]);else for(e in t)_[e]=[_[e],t[e]];return this},abort:function(t){var e=t||w;return i&&i.abort(e),D(0,e),this}};if(m.promise(x),p.url=((t||p.url||xe.href)+"").replace(Ne,xe.protocol+"//"),p.type=e.method||e.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(B)||[""],null==p.crossDomain){l=y.createElement("a");try{l.href=p.url,l.href=l.href,p.crossDomain=ze.protocol+"//"+ze.host!=l.protocol+"//"+l.host}catch(t){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=C.param(p.data,p.traditional)),We(Le,p,e,x),h)return x;for(c in(u=C.event&&p.global)&&0==C.active++&&C.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!He.test(p.type),n=p.url.replace(Pe,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Ie,"+")):(d=p.url.slice(n.length),p.data&&(p.processData||"string"==typeof p.data)&&(n+=(De.test(n)?"&":"?")+p.data,delete p.data),!1===p.cache&&(n=n.replace(Fe,"$1"),d=(De.test(n)?"&":"?")+"_="+Ce.guid+++d),p.url=n+d),p.ifModified&&(C.lastModified[n]&&x.setRequestHeader("If-Modified-Since",C.lastModified[n]),C.etag[n]&&x.setRequestHeader("If-None-Match",C.etag[n])),(p.data&&p.hasContent&&!1!==p.contentType||e.contentType)&&x.setRequestHeader("Content-Type",p.contentType),x.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Re+"; q=0.01":""):p.accepts["*"]),p.headers)x.setRequestHeader(c,p.headers[c]);if(p.beforeSend&&(!1===p.beforeSend.call(f,x,p)||h))return x.abort();if(w="abort",v.add(p.complete),x.done(p.success),x.fail(p.error),i=We(Be,p,e,x)){if(x.readyState=1,u&&g.trigger("ajaxSend",[x,p]),h)return x;p.async&&p.timeout>0&&(r=s.setTimeout((function(){x.abort("timeout")}),p.timeout));try{h=!1,i.send(b,D)}catch(t){if(h)throw t;D(-1,t)}}else D(-1,"No Transport");function D(t,e,a,l){var c,d,y,b,k,w=e;h||(h=!0,r&&s.clearTimeout(r),i=void 0,o=l||"",x.readyState=t>0?4:0,c=t>=200&&t<300||304===t,a&&(b=function(t,e,i){for(var s,n,o,a,r=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===s&&(s=t.mimeType||e.getResponseHeader("Content-Type"));if(s)for(n in r)if(r[n]&&r[n].test(s)){l.unshift(n);break}if(l[0]in i)o=l[0];else{for(n in i){if(!l[0]||t.converters[n+" "+l[0]]){o=n;break}a||(a=n)}o=o||a}if(o)return o!==l[0]&&l.unshift(o),i[o]}(p,x,a)),!c&&C.inArray("script",p.dataTypes)>-1&&C.inArray("json",p.dataTypes)<0&&(p.converters["text script"]=function(){}),b=function(t,e,i,s){var n,o,a,r,l,h={},u=t.dataTypes.slice();if(u[1])for(a in t.converters)h[a.toLowerCase()]=t.converters[a];for(o=u.shift();o;)if(t.responseFields[o]&&(i[t.responseFields[o]]=e),!l&&s&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=u.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(a=h[l+" "+o]||h["* "+o]))for(n in h)if((r=n.split(" "))[1]===o&&(a=h[l+" "+r[0]]||h["* "+r[0]])){!0===a?a=h[n]:!0!==h[n]&&(o=r[0],u.unshift(r[1]));break}if(!0!==a)if(a&&t.throws)e=a(e);else try{e=a(e)}catch(t){return{state:"parsererror",error:a?t:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}(p,b,x,c),c?(p.ifModified&&((k=x.getResponseHeader("Last-Modified"))&&(C.lastModified[n]=k),(k=x.getResponseHeader("etag"))&&(C.etag[n]=k)),204===t||"HEAD"===p.type?w="nocontent":304===t?w="notmodified":(w=b.state,d=b.data,c=!(y=b.error))):(y=w,!t&&w||(w="error",t<0&&(t=0))),x.status=t,x.statusText=(e||w)+"",c?m.resolveWith(f,[d,w,x]):m.rejectWith(f,[x,w,y]),x.statusCode(_),_=void 0,u&&g.trigger(c?"ajaxSuccess":"ajaxError",[x,p,c?d:y]),v.fireWith(f,[x,w]),u&&(g.trigger("ajaxComplete",[x,p]),--C.active||C.event.trigger("ajaxStop")))}return x},getJSON:function(t,e,i){return C.get(t,e,i,"json")},getScript:function(t,e){return C.get(t,void 0,e,"script")}}),C.each(["get","post"],(function(t,e){C[e]=function(t,i,s,n){return v(i)&&(n=n||s,s=i,i=void 0),C.ajax(C.extend({url:t,type:e,dataType:n,data:i,success:s},C.isPlainObject(t)&&t))}})),C.ajaxPrefilter((function(t){var e;for(e in t.headers)"content-type"===e.toLowerCase()&&(t.contentType=t.headers[e]||"")})),C._evalUrl=function(t,e,i){return C.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){C.globalEval(t,e,i)}})},C.fn.extend({wrapAll:function(t){var e;return this[0]&&(v(t)&&(t=t.call(this[0])),e=C(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return v(t)?this.each((function(e){C(this).wrapInner(t.call(this,e))})):this.each((function(){var e=C(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)}))},wrap:function(t){var e=v(t);return this.each((function(i){C(this).wrapAll(e?t.call(this,i):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){C(this).replaceWith(this.childNodes)})),this}}),C.expr.pseudos.hidden=function(t){return!C.expr.pseudos.visible(t)},C.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},C.ajaxSettings.xhr=function(){try{return new s.XMLHttpRequest}catch(t){}};var Ve={0:200,1223:204},$e=C.ajaxSettings.xhr();m.cors=!!$e&&"withCredentials"in $e,m.ajax=$e=!!$e,C.ajaxTransport((function(t){var e,i;if(m.cors||$e&&!t.crossDomain)return{send:function(n,o){var a,r=t.xhr();if(r.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)r[a]=t.xhrFields[a];for(a in t.mimeType&&r.overrideMimeType&&r.overrideMimeType(t.mimeType),t.crossDomain||n["X-Requested-With"]||(n["X-Requested-With"]="XMLHttpRequest"),n)r.setRequestHeader(a,n[a]);e=function(t){return function(){e&&(e=i=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===t?r.abort():"error"===t?"number"!=typeof r.status?o(0,"error"):o(r.status,r.statusText):o(Ve[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=e(),i=r.onerror=r.ontimeout=e("error"),void 0!==r.onabort?r.onabort=i:r.onreadystatechange=function(){4===r.readyState&&s.setTimeout((function(){e&&i()}))},e=e("abort");try{r.send(t.hasContent&&t.data||null)}catch(t){if(e)throw t}},abort:function(){e&&e()}}})),C.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),C.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return C.globalEval(t),t}}}),C.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),C.ajaxTransport("script",(function(t){var e,i;if(t.crossDomain||t.scriptAttrs)return{send:function(s,n){e=C("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&n("error"===t.type?404:200,t.type)}),y.head.appendChild(e[0])},abort:function(){i&&i()}}}));var Ye,Ue=[],Ke=/(=)\?(?=&|$)|\?\?/;C.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ue.pop()||C.expando+"_"+Ce.guid++;return this[t]=!0,t}}),C.ajaxPrefilter("json jsonp",(function(t,e,i){var n,o,a,r=!1!==t.jsonp&&(Ke.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ke.test(t.data)&&"data");if(r||"jsonp"===t.dataTypes[0])return n=t.jsonpCallback=v(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,r?t[r]=t[r].replace(Ke,"$1"+n):!1!==t.jsonp&&(t.url+=(De.test(t.url)?"&":"?")+t.jsonp+"="+n),t.converters["script json"]=function(){return a||C.error(n+" was not called"),a[0]},t.dataTypes[0]="json",o=s[n],s[n]=function(){a=arguments},i.always((function(){void 0===o?C(s).removeProp(n):s[n]=o,t[n]&&(t.jsonpCallback=e.jsonpCallback,Ue.push(n)),a&&v(o)&&o(a[0]),a=o=void 0})),"script"})),m.createHTMLDocument=((Ye=y.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ye.childNodes.length),C.parseHTML=function(t,e,i){return"string"!=typeof t?[]:("boolean"==typeof e&&(i=e,e=!1),e||(m.createHTMLDocument?((s=(e=y.implementation.createHTMLDocument("")).createElement("base")).href=y.location.href,e.head.appendChild(s)):e=y),o=!i&&[],(n=I.exec(t))?[e.createElement(n[1])]:(n=xt([t],e,o),o&&o.length&&C(o).remove(),C.merge([],n.childNodes)));var s,n,o},C.fn.load=function(t,e,i){var s,n,o,a=this,r=t.indexOf(" ");return r>-1&&(s=ve(t.slice(r)),t=t.slice(0,r)),v(e)?(i=e,e=void 0):e&&"object"==typeof e&&(n="POST"),a.length>0&&C.ajax({url:t,type:n||"GET",dataType:"html",data:e}).done((function(t){o=arguments,a.html(s?C("<div>").append(C.parseHTML(t)).find(s):t)})).always(i&&function(t,e){a.each((function(){i.apply(this,o||[t.responseText,e,t])}))}),this},C.expr.pseudos.animated=function(t){return C.grep(C.timers,(function(e){return t===e.elem})).length},C.offset={setOffset:function(t,e,i){var s,n,o,a,r,l,h=C.css(t,"position"),u=C(t),c={};"static"===h&&(t.style.position="relative"),r=u.offset(),o=C.css(t,"top"),l=C.css(t,"left"),("absolute"===h||"fixed"===h)&&(o+l).indexOf("auto")>-1?(a=(s=u.position()).top,n=s.left):(a=parseFloat(o)||0,n=parseFloat(l)||0),v(e)&&(e=e.call(t,i,C.extend({},r))),null!=e.top&&(c.top=e.top-r.top+a),null!=e.left&&(c.left=e.left-r.left+n),"using"in e?e.using.call(t,c):u.css(c)}},C.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){C.offset.setOffset(this,t,e)}));var e,i,s=this[0];return s?s.getClientRects().length?(e=s.getBoundingClientRect(),i=s.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i,s=this[0],n={top:0,left:0};if("fixed"===C.css(s,"position"))e=s.getBoundingClientRect();else{for(e=this.offset(),i=s.ownerDocument,t=s.offsetParent||i.documentElement;t&&(t===i.body||t===i.documentElement)&&"static"===C.css(t,"position");)t=t.parentNode;t&&t!==s&&1===t.nodeType&&((n=C(t).offset()).top+=C.css(t,"borderTopWidth",!0),n.left+=C.css(t,"borderLeftWidth",!0))}return{top:e.top-n.top-C.css(s,"marginTop",!0),left:e.left-n.left-C.css(s,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===C.css(t,"position");)t=t.offsetParent;return t||at}))}}),C.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var i="pageYOffset"===e;C.fn[t]=function(s){return $(this,(function(t,s,n){var o;if(_(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===n)return o?o[e]:t[s];o?o.scrollTo(i?o.pageXOffset:n,i?n:o.pageYOffset):t[s]=n}),t,s,arguments.length)}})),C.each(["top","left"],(function(t,e){C.cssHooks[e]=$t(m.pixelPosition,(function(t,i){if(i)return i=Vt(t,e),zt.test(i)?C(t).position()[e]+"px":i}))})),C.each({Height:"height",Width:"width"},(function(t,e){C.each({padding:"inner"+t,content:e,"":"outer"+t},(function(i,s){C.fn[s]=function(n,o){var a=arguments.length&&(i||"boolean"!=typeof n),r=i||(!0===n||!0===o?"margin":"border");return $(this,(function(e,i,n){var o;return _(e)?0===s.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===n?C.css(e,i,r):C.style(e,i,n,r)}),e,a?n:void 0,a)}}))})),C.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){C.fn[e]=function(t){return this.on(e,t)}})),C.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,s){return this.on(e,t,i,s)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)},hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){C.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}));var Xe=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;C.proxy=function(t,e){var i,s,n;if("string"==typeof e&&(i=t[e],e=t,t=i),v(t))return s=r.call(arguments,2),n=function(){return t.apply(e||this,s.concat(r.call(arguments)))},n.guid=t.guid=t.guid||C.guid++,n},C.holdReady=function(t){t?C.readyWait++:C.ready(!0)},C.isArray=Array.isArray,C.parseJSON=JSON.parse,C.nodeName=M,C.isFunction=v,C.isWindow=_,C.camelCase=X,C.type=w,C.now=Date.now,C.isNumeric=function(t){var e=C.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},C.trim=function(t){return null==t?"":(t+"").replace(Xe,"")},void 0===(i=function(){return C}.apply(e,[]))||(t.exports=i);var Ge=s.jQuery,Je=s.$;return C.noConflict=function(t){return s.$===C&&(s.$=Je),t&&s.jQuery===C&&(s.jQuery=Ge),C},void 0===n&&(s.jQuery=s.$=C),C}))},594:(t,e,i)=>{var s={"./350.png":635,"./352.png":222,"./444.png":413,"./450.png":4,"./666.png":963,"./678.png":942,"./740.png":521,"./840.png":290,"./856.png":452,"./888_1.png":708,"./888_2.png":151,"./888_3.png":292,"./980.png":716,"./982.png":998};function n(t){var e=o(t);return i(e)}function o(t){if(!i.o(s,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return s[t]}n.keys=function(){return Object.keys(s)},n.resolve=o,t.exports=n,n.id=594},559:(t,e,i)=>{var s,n,o;!function(a){"use strict";n=[i(755)],s=function(t){t.ui=t.ui||{},t.ui.version="1.13.1";var e,i,s,n,o,a,r,l,h,u,c,d,p,f=0,g=Array.prototype.hasOwnProperty,m=Array.prototype.slice;function v(t,e,i){return[parseFloat(t[0])*(h.test(t[0])?e/100:1),parseFloat(t[1])*(h.test(t[1])?i/100:1)]}function _(e,i){return parseInt(t.css(e,i),10)||0}function y(t){return null!=t&&t===t.window}t.cleanData=(e=t.cleanData,function(i){for(var s,n,o=0;null!=(n=i[o]);o++)(s=t._data(n,"events"))&&s.remove&&t(n).triggerHandler("remove");e(i)}),t.widget=function(e,i,s){var n,o,a,r={},l=e.split(".")[0],h=l+"-"+(e=e.split(".")[1]);return s||(s=i,i=t.Widget),Array.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr.pseudos[h.toLowerCase()]=function(e){return!!t.data(e,h)},t[l]=t[l]||{},n=t[l][e],o=t[l][e]=function(t,e){if(!this||!this._createWidget)return new o(t,e);arguments.length&&this._createWidget(t,e)},t.extend(o,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),(a=new i).options=t.widget.extend({},a.options),t.each(s,(function(t,e){function s(){return i.prototype[t].apply(this,arguments)}function n(e){return i.prototype[t].apply(this,e)}r[t]="function"==typeof e?function(){var t,i=this._super,o=this._superApply;return this._super=s,this._superApply=n,t=e.apply(this,arguments),this._super=i,this._superApply=o,t}:e})),o.prototype=t.widget.extend(a,{widgetEventPrefix:n&&a.widgetEventPrefix||e},r,{constructor:o,namespace:l,widgetName:e,widgetFullName:h}),n?(t.each(n._childConstructors,(function(e,i){var s=i.prototype;t.widget(s.namespace+"."+s.widgetName,o,i._proto)})),delete n._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o},t.widget.extend=function(e){for(var i,s,n=m.call(arguments,1),o=0,a=n.length;o<a;o++)for(i in n[o])s=n[o][i],g.call(n[o],i)&&void 0!==s&&(t.isPlainObject(s)?e[i]=t.isPlainObject(e[i])?t.widget.extend({},e[i],s):t.widget.extend({},s):e[i]=s);return e},t.widget.bridge=function(e,i){var s=i.prototype.widgetFullName||e;t.fn[e]=function(n){var o="string"==typeof n,a=m.call(arguments,1),r=this;return o?this.length||"instance"!==n?this.each((function(){var i,o=t.data(this,s);return"instance"===n?(r=o,!1):o?"function"!=typeof o[n]||"_"===n.charAt(0)?t.error("no such method '"+n+"' for "+e+" widget instance"):(i=o[n].apply(o,a))!==o&&void 0!==i?(r=i&&i.jquery?r.pushStack(i.get()):i,!1):void 0:t.error("cannot call methods on "+e+" prior to initialization; attempted to call method '"+n+"'")})):r=void 0:(a.length&&(n=t.widget.extend.apply(null,[n].concat(a))),this.each((function(){var e=t.data(this,s);e?(e.option(n||{}),e._init&&e._init()):t.data(this,s,new i(n,this))}))),r}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=f++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===i&&this.destroy()}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,(function(t,i){e._removeClass(i,t)})),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var s,n,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(a={},e=(s=e.split(".")).shift(),s.length){for(n=a[e]=t.widget.extend({},this.options[e]),o=0;o<s.length-1;o++)n[s[o]]=n[s[o]]||{},n=n[s[o]];if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){for(var e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return"classes"===t&&this._setOptionClasses(e),this.options[t]=e,"disabled"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,s,n;for(i in e)n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!t),t&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){var i=[],s=this;function n(n,o){for(var a,r=0;r<n.length;r++)a=s.classesElementLookup[n[r]]||t(),a=e.add?(function(){var i=[];e.element.each((function(e,n){t.map(s.classesElementLookup,(function(t){return t})).some((function(t){return t.is(n)}))||i.push(n)})),s._on(t(i),{remove:"_untrackClassesElement"})}(),t(t.uniqueSort(a.get().concat(e.element.get())))):t(a.not(e.element).get()),s.classesElementLookup[n[r]]=a,i.push(n[r]),o&&e.classes[n[r]]&&i.push(e.classes[n[r]])}return(e=t.extend({element:this.element,classes:this.options.classes||{}},e)).keys&&n(e.keys.match(/\S+/g)||[],!0),e.extra&&n(e.extra.match(/\S+/g)||[]),i.join(" ")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,(function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()))})),this._off(t(e.target))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){var n="string"==typeof t||null===t;return(i={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s="boolean"==typeof s?s:i}).element.toggleClass(this._classes(i),s),this},_on:function(e,i,s){var n,o=this;"boolean"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,(function(s,a){function r(){if(e||!0!==o.options.disabled&&!t(this).hasClass("ui-state-disabled"))return("string"==typeof a?o[a]:a).apply(o,arguments)}var l;"string"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++),s=(l=s.match(/^([\w:-]*)\s*(.*)$/))[1]+o.eventNamespace,(l=l[2])?n.on(s,l,r):i.on(s,r)}))},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){var i=this;return setTimeout((function(){return("string"==typeof t?i[t]:t).apply(i,arguments)}),e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,"ui-state-hover")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,"ui-state-focus")},focusout:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-focus")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},(i=t.Event(i)).type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!("function"==typeof a&&!1===a.apply(this.element[0],[i].concat(s))||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},(function(e,i){t.Widget.prototype["_"+e]=function(s,n,o){var a,r=(n="string"==typeof n?{effect:n}:n)?!0!==n&&"number"!=typeof n&&n.effect||i:e;"number"==typeof(n=n||{})?n={duration:n}:!0===n&&(n={}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue((function(i){t(this)[e](),o&&o.call(s[0]),i()}))}})),t.widget,s=Math.max,n=Math.abs,o=/left|center|right/,a=/top|center|bottom/,r=/[\+\-]\d+(\.[\d]+)?%?/,l=/^\w+/,h=/%$/,u=t.fn.position,t.position={scrollbarWidth:function(){if(void 0!==i)return i;var e,s=t("<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'></div></div>"),n=s.children()[0];return t("body").append(s),e=n.offsetWidth,s.css("overflow","scroll"),e===(n=n.offsetWidth)&&(n=s[0].clientWidth),s.remove(),i=e-n},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),s=e.isWindow||e.isDocument?"":e.element.css("overflow-y");return i="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,{width:"scroll"===s||"auto"===s&&e.height<e.element[0].scrollHeight?t.position.scrollbarWidth():0,height:i?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=y(i[0]),n=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:s,isDocument:n,offset:s||n?{left:0,top:0}:t(e).offset(),scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},t.fn.position=function(e){if(!e||!e.of)return u.apply(this,arguments);var i,h,c,d,p,f,g="string"==typeof(e=t.extend({},e)).of?t(document).find(e.of):t(e.of),m=t.position.getWithinInfo(e.within),b=t.position.getScrollInfo(m),k=(e.collision||"flip").split(" "),w={},x=9===(f=(x=g)[0]).nodeType?{width:x.width(),height:x.height(),offset:{top:0,left:0}}:y(f)?{width:x.width(),height:x.height(),offset:{top:x.scrollTop(),left:x.scrollLeft()}}:f.preventDefault?{width:0,height:0,offset:{top:f.pageY,left:f.pageX}}:{width:x.outerWidth(),height:x.outerHeight(),offset:x.offset()};return g[0].preventDefault&&(e.at="left top"),h=x.width,c=x.height,p=t.extend({},d=x.offset),t.each(["my","at"],(function(){var t,i,s=(e[this]||"").split(" ");(s=1===s.length?o.test(s[0])?s.concat(["center"]):a.test(s[0])?["center"].concat(s):["center","center"]:s)[0]=o.test(s[0])?s[0]:"center",s[1]=a.test(s[1])?s[1]:"center",t=r.exec(s[0]),i=r.exec(s[1]),w[this]=[t?t[0]:0,i?i[0]:0],e[this]=[l.exec(s[0])[0],l.exec(s[1])[0]]})),1===k.length&&(k[1]=k[0]),"right"===e.at[0]?p.left+=h:"center"===e.at[0]&&(p.left+=h/2),"bottom"===e.at[1]?p.top+=c:"center"===e.at[1]&&(p.top+=c/2),i=v(w.at,h,c),p.left+=i[0],p.top+=i[1],this.each((function(){var o,a,r=t(this),l=r.outerWidth(),u=r.outerHeight(),f=_(this,"marginLeft"),y=_(this,"marginTop"),x=l+f+_(this,"marginRight")+b.width,C=u+y+_(this,"marginBottom")+b.height,D=t.extend({},p),S=v(w.my,r.outerWidth(),r.outerHeight());"right"===e.my[0]?D.left-=l:"center"===e.my[0]&&(D.left-=l/2),"bottom"===e.my[1]?D.top-=u:"center"===e.my[1]&&(D.top-=u/2),D.left+=S[0],D.top+=S[1],o={marginLeft:f,marginTop:y},t.each(["left","top"],(function(s,n){t.ui.position[k[s]]&&t.ui.position[k[s]][n](D,{targetWidth:h,targetHeight:c,elemWidth:l,elemHeight:u,collisionPosition:o,collisionWidth:x,collisionHeight:C,offset:[i[0]+S[0],i[1]+S[1]],my:e.my,at:e.at,within:m,elem:r})})),e.using&&(a=function(t){var i=d.left-D.left,o=i+h-l,a=d.top-D.top,p=a+c-u,f={target:{element:g,left:d.left,top:d.top,width:h,height:c},element:{element:r,left:D.left,top:D.top,width:l,height:u},horizontal:o<0?"left":0<i?"right":"center",vertical:p<0?"top":0<a?"bottom":"middle"};h<l&&n(i+o)<h&&(f.horizontal="center"),c<u&&n(a+p)<c&&(f.vertical="middle"),s(n(i),n(o))>s(n(a),n(p))?f.important="horizontal":f.important="vertical",e.using.call(this,t,f)}),r.offset(t.extend(D,{using:a}))}))},t.ui.position={fit:{left:function(t,e){var i=e.within,n=i.isWindow?i.scrollLeft:i.offset.left,o=i.width,a=t.left-e.collisionPosition.marginLeft,r=n-a,l=a+e.collisionWidth-o-n;e.collisionWidth>o?0<r&&l<=0?(i=t.left+r+e.collisionWidth-o-n,t.left+=r-i):t.left=!(0<l&&r<=0)&&l<r?n+o-e.collisionWidth:n:0<r?t.left+=r:0<l?t.left-=l:t.left=s(t.left-a,t.left)},top:function(t,e){var i=e.within,n=i.isWindow?i.scrollTop:i.offset.top,o=e.within.height,a=t.top-e.collisionPosition.marginTop,r=n-a,l=a+e.collisionHeight-o-n;e.collisionHeight>o?0<r&&l<=0?(i=t.top+r+e.collisionHeight-o-n,t.top+=r-i):t.top=!(0<l&&r<=0)&&l<r?n+o-e.collisionHeight:n:0<r?t.top+=r:0<l?t.top-=l:t.top=s(t.top-a,t.top)}},flip:{left:function(t,e){var i=(h=e.within).offset.left+h.scrollLeft,s=h.width,o=h.isWindow?h.scrollLeft:h.offset.left,a=(u=t.left-e.collisionPosition.marginLeft)-o,r=u+e.collisionWidth-s-o,l="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,h="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,u=-2*e.offset[0];a<0?((i=t.left+l+h+u+e.collisionWidth-s-i)<0||i<n(a))&&(t.left+=l+h+u):0<r&&(0<(o=t.left-e.collisionPosition.marginLeft+l+h+u-o)||n(o)<r)&&(t.left+=l+h+u)},top:function(t,e){var i=(h=e.within).offset.top+h.scrollTop,s=h.height,o=h.isWindow?h.scrollTop:h.offset.top,a=(u=t.top-e.collisionPosition.marginTop)-o,r=u+e.collisionHeight-s-o,l="top"===e.my[1]?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,h="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,u=-2*e.offset[1];a<0?((i=t.top+l+h+u+e.collisionHeight-s-i)<0||i<n(a))&&(t.top+=l+h+u):0<r&&(0<(o=t.top-e.collisionPosition.marginTop+l+h+u-o)||n(o)<r)&&(t.top+=l+h+u)}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},t.ui.position,t.extend(t.expr.pseudos,{data:t.expr.createPseudo?t.expr.createPseudo((function(e){return function(i){return!!t.data(i,e)}})):function(e,i,s){return!!t.data(e,s[3])}}),t.fn.extend({disableSelection:(c="onselectstart"in document.createElement("div")?"selectstart":"mousedown",function(){return this.on(c+".ui-disableSelection",(function(t){t.preventDefault()}))}),enableSelection:function(){return this.off(".ui-disableSelection")}}),t.ui.focusable=function(e,i){var s,n,o,a,r=e.nodeName.toLowerCase();return"area"===r?(n=(s=e.parentNode).name,!(!e.href||!n||"map"!==s.nodeName.toLowerCase())&&0<(n=t("img[usemap='#"+n+"']")).length&&n.is(":visible")):(/^(input|select|textarea|button|object)$/.test(r)?(o=!e.disabled)&&(a=t(e).closest("fieldset")[0])&&(o=!a.disabled):o="a"===r&&e.href||i,o&&t(e).is(":visible")&&function(t){for(var e=t.css("visibility");"inherit"===e;)e=(t=t.parent()).css("visibility");return"visible"===e}(t(e)))},t.extend(t.expr.pseudos,{focusable:function(e){return t.ui.focusable(e,null!=t.attr(e,"tabindex"))}}),t.ui.focusable,t.fn._form=function(){return"string"==typeof this[0].form?this.closest("form"):t(this[0].form)},t.ui.formResetMixin={_formResetHandler:function(){var e=t(this);setTimeout((function(){var i=e.data("ui-form-reset-instances");t.each(i,(function(){this.refresh()}))}))},_bindFormResetHandler:function(){var t;this.form=this.element._form(),this.form.length&&((t=this.form.data("ui-form-reset-instances")||[]).length||this.form.on("reset.ui-form-reset",this._formResetHandler),t.push(this),this.form.data("ui-form-reset-instances",t))},_unbindFormResetHandler:function(){var e;this.form.length&&((e=this.form.data("ui-form-reset-instances")).splice(t.inArray(this,e),1),e.length?this.form.data("ui-form-reset-instances",e):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset"))}},t.expr.pseudos||(t.expr.pseudos=t.expr[":"]),t.uniqueSort||(t.uniqueSort=t.unique),t.escapeSelector||(d=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,p=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},t.escapeSelector=function(t){return(t+"").replace(d,p)}),t.fn.even&&t.fn.odd||t.fn.extend({even:function(){return this.filter((function(t){return t%2==0}))},odd:function(){return this.filter((function(t){return t%2==1}))}}),t.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},t.fn.labels=function(){var e,i,s;return this.length?this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(i=this.eq(0).parents("label"),(e=this.attr("id"))&&(s=(s=this.eq(0).parents().last()).add((s.length?s:this).siblings()),e="label[for='"+t.escapeSelector(e)+"']",i=i.add(s.find(e).addBack(e))),this.pushStack(i)):this.pushStack([])},t.fn.scrollParent=function(e){var i=this.css("position"),s="absolute"===i,n=e?/(auto|scroll|hidden)/:/(auto|scroll)/;return e=this.parents().filter((function(){var e=t(this);return(!s||"static"!==e.css("position"))&&n.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))})).eq(0),"fixed"!==i&&e.length?e:t(this[0].ownerDocument||document)},t.extend(t.expr.pseudos,{tabbable:function(e){var i=t.attr(e,"tabindex"),s=null!=i;return(!s||0<=i)&&t.ui.focusable(e,s)}}),t.fn.extend({uniqueId:(b=0,function(){return this.each((function(){this.id||(this.id="ui-id-"+ ++b)}))}),removeUniqueId:function(){return this.each((function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id")}))}}),t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var b,k=!1;function w(t,e,i){return e<=t&&t<e+i}t(document).on("mouseup",(function(){k=!1})),t.widget("ui.mouse",{version:"1.13.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on("mousedown."+this.widgetName,(function(t){return e._mouseDown(t)})).on("click."+this.widgetName,(function(i){if(!0===t.data(i.target,e.widgetName+".preventClickEvent"))return t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1})),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!k){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,s=1===e.which,n=!("string"!=typeof this.options.cancel||!e.target.nodeName)&&t(e.target).closest(this.options.cancel).length;return!(s&&!n&&this._mouseCapture(e))||(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout((function(){i.mouseDelayMet=!0}),this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=!1!==this._mouseStart(e),!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+".preventClickEvent")&&t.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),k=!0))}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||document.documentMode<9)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=!1!==this._mouseStart(this._mouseDownEvent,e),this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,k=!1,e.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),t.ui.plugin={add:function(e,i,s){var n,o=t.ui[e].prototype;for(n in s)o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]])},call:function(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;n<o.length;n++)t.options[o[n][0]]&&o[n][1].apply(t.element,i)}},t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement}catch(i){e=t.body}return(e=e||t.body).nodeName?e:t.body},t.ui.safeBlur=function(e){e&&"body"!==e.nodeName.toLowerCase()&&t(e).trigger("blur")},t.widget("ui.draggable",t.ui.mouse,{version:"1.13.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){(this.helper||this.element).is(".ui-draggable-dragging")?this.destroyOnClear=!0:(this._removeHandleClassName(),this._mouseDestroy())},_mouseCapture:function(e){var i=this.options;return!(this.helper||i.disabled||0<t(e.target).closest(".ui-resizable-handle").length||(this.handle=this._getHandle(e),!this.handle||(this._blurActiveElement(e),this._blockFrames(!0===i.iframeFix?"iframe":i.iframeFix),0)))},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map((function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]}))},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=t.ui.safeActiveElement(this.document[0]);t(e.target).closest(i).length||t.ui.safeBlur(i)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=0<this.helper.parents().filter((function(){return"fixed"===t(this).css("position")})).length,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),!1===this._trigger("start",e)?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){if(i=this._uiHash(),!1===this._trigger("drag",e,i))return this._mouseUp(new t.Event("mouseup",e)),!1;this.position=i.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!s||"valid"===this.options.revert&&s||!0===this.options.revert||"function"==typeof this.options.revert&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),(function(){!1!==i._trigger("stop",e)&&i._clear()})):!1!==this._trigger("stop",e)&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger("focus"),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new t.Event("mouseup",{target:this.element[0]})):this._clear(),this},_getHandle:function(e){return!this.options.handle||!!t(e.target).closest(this.element.find(this.options.handle)).length},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle")},_removeHandleClassName:function(){this._removeClass(this.handleElement,"ui-draggable-handle")},_createHelper:function(e){var i=this.options,s="function"==typeof i.helper;return(e=s?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element).parents("body").length||e.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s&&e[0]===this.element[0]&&this._setPositionRelative(),e[0]===this.element[0]||/(fixed|absolute)/.test(e.css("position"))||e.css("position","absolute"),e},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),"left"in(t=Array.isArray(t)?{left:+t[0],top:+t[1]||0}:t)&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),{top:(e=this._isRootNode(this.offsetParent[0])?{top:0,left:0}:e).top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options,o=this.document[0];this.relativeContainer=null,n.containment?"window"!==n.containment?"document"!==n.containment?n.containment.constructor!==Array?("parent"===n.containment&&(n.containment=this.helper[0].parentNode),(s=(i=t(n.containment))[0])&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i)):this.containment=n.containment:this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]:this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]:this.containment=null},_convertPositionTo:function(t,e){e=e||this.position;var i="absolute"===t?1:-1;return t=this._isRootNode(this.scrollParent[0]),{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:t?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:t?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,s=this.options,n=this._isRootNode(this.scrollParent[0]),o=t.pageX,a=t.pageY;return n&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(i=this.relativeContainer?(i=this.relativeContainer.offset(),[this.containment[0]+i.left,this.containment[1]+i.top,this.containment[2]+i.left,this.containment[3]+i.top]):this.containment,t.pageX-this.offset.click.left<i[0]&&(o=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(a=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(o=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(a=i[3]+this.offset.click.top)),s.grid&&(t=s.grid[1]?this.originalPageY+Math.round((a-this.originalPageY)/s.grid[1])*s.grid[1]:this.originalPageY,a=!i||t-this.offset.click.top>=i[1]||t-this.offset.click.top>i[3]?t:t-this.offset.click.top>=i[1]?t-s.grid[1]:t+s.grid[1],t=s.grid[0]?this.originalPageX+Math.round((o-this.originalPageX)/s.grid[0])*s.grid[0]:this.originalPageX,o=!i||t-this.offset.click.left>=i[0]||t-this.offset.click.left>i[2]?t:t-this.offset.click.left>=i[0]?t-s.grid[0]:t+s.grid[0]),"y"===s.axis&&(o=this.originalPageX),"x"===s.axis&&(a=this.originalPageY)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),s.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i,s){var n=t.extend({},i,{item:s.element});s.sortables=[],t(s.options.connectToSortable).each((function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(s.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,n))}))},stop:function(e,i,s){var n=t.extend({},i,{item:s.element});s.cancelHelperRemoval=!1,t.each(s.sortables,(function(){var t=this;t.isOver?(t.isOver=0,s.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,n))}))},drag:function(e,i,s){t.each(s.sortables,(function(){var n=!1,o=this;o.positionAbs=s.positionAbs,o.helperProportions=s.helperProportions,o.offset.click=s.offset.click,o._intersectsWith(o.containerCache)&&(n=!0,t.each(s.sortables,(function(){return this.positionAbs=s.positionAbs,this.helperProportions=s.helperProportions,this.offset.click=s.offset.click,n=(this===o||!this._intersectsWith(this.containerCache)||!t.contains(o.element[0],this.element[0]))&&n}))),n?(o.isOver||(o.isOver=1,s._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data("ui-sortable-item",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=s.offset.click.top,o.offset.click.left=s.offset.click.left,o.offset.parent.left-=s.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=s.offset.parent.top-o.offset.parent.top,s._trigger("toSortable",e),s.dropped=o.element,t.each(s.sortables,(function(){this.refreshPositions()})),s.currentItem=s.element,o.fromOutside=s),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger("out",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(s._parent),s._refreshOffsets(e),i.position=s._generatePosition(e,!0),s._trigger("fromSortable",e),s.dropped=!1,t.each(s.sortables,(function(){this.refreshPositions()})))}))}}),t.ui.plugin.add("draggable","cursor",{start:function(e,i,s){var n=t("body");s=s.options,n.css("cursor")&&(s._cursor=n.css("cursor")),n.css("cursor",s.cursor)},stop:function(e,i,s){(s=s.options)._cursor&&t("body").css("cursor",s._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i,s){i=t(i.helper),s=s.options,i.css("opacity")&&(s._opacity=i.css("opacity")),i.css("opacity",s.opacity)},stop:function(e,i,s){(s=s.options)._opacity&&t(i.helper).css("opacity",s._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,s){var n=s.options,o=!1,a=s.scrollParentNotHidden[0],r=s.document[0];a!==r&&"HTML"!==a.tagName?(n.axis&&"x"===n.axis||(s.overflowOffset.top+a.offsetHeight-e.pageY<n.scrollSensitivity?a.scrollTop=o=a.scrollTop+n.scrollSpeed:e.pageY-s.overflowOffset.top<n.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-n.scrollSpeed)),n.axis&&"y"===n.axis||(s.overflowOffset.left+a.offsetWidth-e.pageX<n.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+n.scrollSpeed:e.pageX-s.overflowOffset.left<n.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-n.scrollSpeed))):(n.axis&&"x"===n.axis||(e.pageY-t(r).scrollTop()<n.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<n.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+n.scrollSpeed))),n.axis&&"y"===n.axis||(e.pageX-t(r).scrollLeft()<n.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<n.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+n.scrollSpeed)))),!1!==o&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(s,e)}}),t.ui.plugin.add("draggable","snap",{start:function(e,i,s){var n=s.options;s.snapElements=[],t(n.snap.constructor!==String?n.snap.items||":data(ui-draggable)":n.snap).each((function(){var e=t(this),i=e.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})}))},drag:function(e,i,s){for(var n,o,a,r,l,h,u,c,d,p=s.options,f=p.snapTolerance,g=i.offset.left,m=g+s.helperProportions.width,v=i.offset.top,_=v+s.helperProportions.height,y=s.snapElements.length-1;0<=y;y--)h=(l=s.snapElements[y].left-s.margins.left)+s.snapElements[y].width,c=(u=s.snapElements[y].top-s.margins.top)+s.snapElements[y].height,m<l-f||h+f<g||_<u-f||c+f<v||!t.contains(s.snapElements[y].item.ownerDocument,s.snapElements[y].item)?(s.snapElements[y].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[y].item})),s.snapElements[y].snapping=!1):("inner"!==p.snapMode&&(n=Math.abs(u-_)<=f,o=Math.abs(c-v)<=f,a=Math.abs(l-m)<=f,r=Math.abs(h-g)<=f,n&&(i.position.top=s._convertPositionTo("relative",{top:u-s.helperProportions.height,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:c,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l-s.helperProportions.width}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h}).left)),d=n||o||a||r,"outer"!==p.snapMode&&(n=Math.abs(u-v)<=f,o=Math.abs(c-_)<=f,a=Math.abs(l-g)<=f,r=Math.abs(h-m)<=f,n&&(i.position.top=s._convertPositionTo("relative",{top:u,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:c-s.helperProportions.height,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h-s.helperProportions.width}).left)),!s.snapElements[y].snapping&&(n||o||a||r||d)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[y].item})),s.snapElements[y].snapping=n||o||a||r||d)}}),t.ui.plugin.add("draggable","stack",{start:function(e,i,s){var n;s=s.options,s=t.makeArray(t(s.stack)).sort((function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)})),s.length&&(n=parseInt(t(s[0]).css("zIndex"),10)||0,t(s).each((function(e){t(this).css("zIndex",n+e)})),this.css("zIndex",n+s.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i,s){i=t(i.helper),s=s.options,i.css("zIndex")&&(s._zIndex=i.css("zIndex")),i.css("zIndex",s.zIndex)},stop:function(e,i,s){(s=s.options)._zIndex&&t(i.helper).css("zIndex",s._zIndex)}}),t.ui.draggable,t.widget("ui.droppable",{version:"1.13.1",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var t,e=this.options,i=e.accept;this.isover=!1,this.isout=!0,this.accept="function"==typeof i?i:function(t){return t.is(i)},this.proportions=function(){if(!arguments.length)return t=t||{width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};t=arguments[0]},this._addToManager(e.scope),e.addClasses&&this._addClass("ui-droppable")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;e<t.length;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e)},_setOption:function(e,i){var s;"accept"===e?this.accept="function"==typeof i?i:function(t){return t.is(i)}:"scope"===e&&(s=t.ui.ddmanager.droppables[this.options.scope],this._splice(s),this._addToManager(i)),this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var s=i||t.ui.ddmanager.current,n=!1;return!(!s||(s.currentItem||s.element)[0]===this.element[0])&&(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each((function(){var i=t(this).droppable("instance");if(i.options.greedy&&!i.options.disabled&&i.options.scope===s.options.scope&&i.accept.call(i.element[0],s.currentItem||s.element)&&t.ui.intersect(s,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e))return!(n=!0)})),!n&&!!this.accept.call(this.element[0],s.currentItem||s.element)&&(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",e,this.ui(s)),this.element))},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}},_addHoverClass:function(){this._addClass("ui-droppable-hover")},_removeHoverClass:function(){this._removeClass("ui-droppable-hover")},_addActiveClass:function(){this._addClass("ui-droppable-active")},_removeActiveClass:function(){this._removeClass("ui-droppable-active")}}),t.ui.intersect=function(t,e,i,s){if(!e.offset)return!1;var n=(t.positionAbs||t.position.absolute).left+t.margins.left,o=(t.positionAbs||t.position.absolute).top+t.margins.top,a=n+t.helperProportions.width,r=o+t.helperProportions.height,l=e.offset.left,h=e.offset.top,u=l+e.proportions().width,c=h+e.proportions().height;switch(i){case"fit":return l<=n&&a<=u&&h<=o&&r<=c;case"intersect":return l<n+t.helperProportions.width/2&&a-t.helperProportions.width/2<u&&h<o+t.helperProportions.height/2&&r-t.helperProportions.height/2<c;case"pointer":return w(s.pageY,h,e.proportions().height)&&w(s.pageX,l,e.proportions().width);case"touch":return(h<=o&&o<=c||h<=r&&r<=c||o<h&&c<r)&&(l<=n&&n<=u||l<=a&&a<=u||n<l&&u<a);default:return!1}},!(t.ui.ddmanager={current:null,droppables:{default:[]},prepareOffsets:function(e,i){var s,n,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,r=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(s=0;s<o.length;s++)if(!(o[s].options.disabled||e&&!o[s].accept.call(o[s].element[0],e.currentItem||e.element))){for(n=0;n<r.length;n++)if(r[n]===o[s].element[0]){o[s].proportions().height=0;continue t}o[s].visible="none"!==o[s].element.css("display"),o[s].visible&&("mousedown"===a&&o[s]._activate.call(o[s],i),o[s].offset=o[s].element.offset(),o[s].proportions({width:o[s].element[0].offsetWidth,height:o[s].element[0].offsetHeight}))}},drop:function(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),(function(){this.options&&(!this.options.disabled&&this.visible&&t.ui.intersect(e,this,this.options.tolerance,i)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))})),s},dragStart:function(e,i){e.element.parentsUntil("body").on("scroll.droppable",(function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}))},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],(function(){var s,n,o,a;this.options.disabled||this.greedyChild||!this.visible||(a=!(o=t.ui.intersect(e,this,this.options.tolerance,i))&&this.isover?"isout":o&&!this.isover?"isover":null)&&(this.options.greedy&&(n=this.options.scope,(o=this.element.parents(":data(ui-droppable)").filter((function(){return t(this).droppable("instance").options.scope===n}))).length&&((s=t(o[0]).droppable("instance")).greedyChild="isover"===a)),s&&"isover"===a&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[a]=!0,this["isout"===a?"isover":"isout"]=!1,this["isover"===a?"_over":"_out"].call(this,i),s&&"isout"===a&&(s.isout=!1,s.isover=!0,s._over.call(s,i)))}))},dragStop:function(e,i){e.element.parentsUntil("body").off("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}})!==t.uiBackCompat&&t.widget("ui.droppable",t.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}}),t.ui.droppable,t.widget("ui.resizable",t.ui.mouse,{version:"1.13.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(e,i){if("hidden"===t(e).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop";if(i=!1,0<e[s])return!0;try{e[s]=1,i=0<e[s],e[s]=0}catch(e){}return i},_create:function(){var e,i=this.options,s=this;this._addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t("<div class='ui-wrapper'></div>").css({overflow:"hidden",position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(e),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on("mouseenter",(function(){i.disabled||(s._removeClass("ui-resizable-autohide"),s._handles.show())})).on("mouseleave",(function(){i.disabled||s.resizing||(s._addClass("ui-resizable-autohide"),s._handles.hide())})),this._mouseInit()},_destroy:function(){function e(e){t(e).removeData("resizable").removeData("ui-resizable").off(".resizable")}var i;return this._mouseDestroy(),this._addedHandles.remove(),this.elementIsWrapper&&(e(this.element),i=this.element,this.originalElement.css({position:i.css("position"),width:i.outerWidth(),height:i.outerHeight(),top:i.css("top"),left:i.css("left")}).insertAfter(i),i.remove()),this.originalElement.css("resize",this.originalResizeStyle),e(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case"handles":this._removeHandles(),this._setupHandles();break;case"aspectRatio":this._aspectRatio=!!e}},_setupHandles:function(){var e,i,s,n,o,a=this.options,r=this;if(this.handles=a.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=t(),this._addedHandles=t(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),s=this.handles.split(","),this.handles={},i=0;i<s.length;i++)n="ui-resizable-"+(e=String.prototype.trim.call(s[i])),o=t("<div>"),this._addClass(o,"ui-resizable-handle "+n),o.css({zIndex:a.zIndex}),this.handles[e]=".ui-resizable-"+e,this.element.children(this.handles[e]).length||(this.element.append(o),this._addedHandles=this._addedHandles.add(o));this._renderAxis=function(e){var i,s,n;for(i in e=e||this.element,this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(s=t(this.handles[i],this.element),n=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),s=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(s,n),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",(function(){r.resizing||(this.className&&(o=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=o&&o[1]?o[1]:"se")})),a.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"))},_removeHandles:function(){this._addedHandles.remove()},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)(s=t(this.handles[i])[0])!==e.target&&!t.contains(s,e.target)||(n=!0);return!this.options.disabled&&n},_mouseStart:function(e){var i,s,n=this.options,o=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),s=this._num(this.helper.css("top")),n.containment&&(i+=t(n.containment).scrollLeft()||0,s+=t(n.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:o.width(),height:o.height()},this.originalSize=this._helper?{width:o.outerWidth(),height:o.outerHeight()}:{width:o.width(),height:o.height()},this.sizeDiff={width:o.outerWidth()-o.width(),height:o.outerHeight()-o.height()},this.originalPosition={left:i,top:s},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof n.aspectRatio?n.aspectRatio:this.originalSize.width/this.originalSize.height||1,n=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===n?this.axis+"-resize":n),this._addClass("ui-resizable-resizing"),this._propagate("start",e),!0},_mouseDrag:function(e){var i=this.originalMousePosition,s=this.axis,n=e.pageX-i.left||0;return i=e.pageY-i.top||0,s=this._change[s],this._updatePrevProperties(),s&&(i=s.apply(this,[e,n,i]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),i=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(i)||(this._updatePrevProperties(),this._trigger("resize",e,this.ui()),this._applyChanges())),!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,o=this.options,a=this;return this._helper&&(n=(i=(s=this._proportionallyResizeElements).length&&/textarea/i.test(s[0].nodeName))&&this._hasScroll(s[0],"left")?0:a.sizeDiff.height,s=i?0:a.sizeDiff.width,i={width:a.helper.width()-s,height:a.helper.height()-n},s=parseFloat(a.element.css("left"))+(a.position.left-a.originalPosition.left)||null,n=parseFloat(a.element.css("top"))+(a.position.top-a.originalPosition.top)||null,o.animate||this.element.css(t.extend(i,{top:n,left:s})),a.helper.height(a.size.height),a.helper.width(a.size.width),this._helper&&!o.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,s=this.options,n={minWidth:this._isNumber(s.minWidth)?s.minWidth:0,maxWidth:this._isNumber(s.maxWidth)?s.maxWidth:1/0,minHeight:this._isNumber(s.minHeight)?s.minHeight:0,maxHeight:this._isNumber(s.maxHeight)?s.maxHeight:1/0};(this._aspectRatio||t)&&(e=n.minHeight*this.aspectRatio,i=n.minWidth/this.aspectRatio,s=n.maxHeight*this.aspectRatio,t=n.maxWidth/this.aspectRatio,e>n.minWidth&&(n.minWidth=e),i>n.minHeight&&(n.minHeight=i),s<n.maxWidth&&(n.maxWidth=s),t<n.maxHeight&&(n.maxHeight=t)),this._vBoundaries=n},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===s&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,h=/sw|nw|w/.test(i);return i=/nw|ne|n/.test(i),o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&h&&(t.left=r-e.minWidth),s&&h&&(t.left=r-e.maxWidth),a&&i&&(t.top=l-e.minHeight),n&&i&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],s=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],n=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];e<4;e++)i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;e<this._proportionallyResizeElements.length;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div></div>").css({overflow:"hidden"}),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize;return{left:this.originalPosition.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize;return{top:this.originalPosition.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).resizable("instance"),s=i.options,n=i._proportionallyResizeElements,o=(r=n.length&&/textarea/i.test(n[0].nodeName))&&i._hasScroll(n[0],"left")?0:i.sizeDiff.height,a=r?0:i.sizeDiff.width,r={width:i.size.width-a,height:i.size.height-o};a=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,o=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null,i.element.animate(t.extend(r,o&&a?{top:o,left:a}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var e,i,s=t(this).resizable("instance"),n=s.options,o=s.element,a=n.containment,r=a instanceof t?a.get(0):/parent/.test(a)?o.parent().get(0):a;r&&(s.containerElement=t(r),/document/.test(a)||a===document?(s.containerOffset={left:0,top:0},s.containerPosition={left:0,top:0},s.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(r),i=[],t(["Top","Right","Left","Bottom"]).each((function(t,n){i[t]=s._num(e.css("padding"+n))})),s.containerOffset=e.offset(),s.containerPosition=e.position(),s.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},n=s.containerOffset,o=s.containerSize.height,a=s.containerSize.width,a=s._hasScroll(r,"left")?r.scrollWidth:a,o=s._hasScroll(r)?r.scrollHeight:o,s.parentData={element:r,left:n.left,top:n.top,width:a,height:o}))},resize:function(e){var i=t(this).resizable("instance"),s=i.options,n=i.containerOffset,o=i.position,a=i._aspectRatio||e.shiftKey,r={top:0,left:0},l=i.containerElement;e=!0,l[0]!==document&&/static/.test(l.css("position"))&&(r=n),o.left<(i._helper?n.left:0)&&(i.size.width=i.size.width+(i._helper?i.position.left-n.left:i.position.left-r.left),a&&(i.size.height=i.size.width/i.aspectRatio,e=!1),i.position.left=s.helper?n.left:0),o.top<(i._helper?n.top:0)&&(i.size.height=i.size.height+(i._helper?i.position.top-n.top:i.position.top),a&&(i.size.width=i.size.height*i.aspectRatio,e=!1),i.position.top=i._helper?n.top:0),s=i.containerElement.get(0)===i.element.parent().get(0),o=/relative|absolute/.test(i.containerElement.css("position")),s&&o?(i.offset.left=i.parentData.left+i.position.left,i.offset.top=i.parentData.top+i.position.top):(i.offset.left=i.element.offset().left,i.offset.top=i.element.offset().top),o=Math.abs(i.sizeDiff.width+(i._helper?i.offset.left-r.left:i.offset.left-n.left)),n=Math.abs(i.sizeDiff.height+(i._helper?i.offset.top-r.top:i.offset.top-n.top)),o+i.size.width>=i.parentData.width&&(i.size.width=i.parentData.width-o,a&&(i.size.height=i.size.width/i.aspectRatio,e=!1)),n+i.size.height>=i.parentData.height&&(i.size.height=i.parentData.height-n,a&&(i.size.width=i.size.height*i.aspectRatio,e=!1)),e||(i.position.left=i.prevPosition.left,i.position.top=i.prevPosition.top,i.size.width=i.prevSize.width,i.size.height=i.prevSize.height)},stop:function(){var e=t(this).resizable("instance"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=(l=t(e.helper)).offset(),r=l.outerWidth()-e.sizeDiff.width,l=l.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css("position"))&&t(this).css({left:a.left-n.left-s.left,width:r,height:l}),e._helper&&!i.animate&&/static/.test(o.css("position"))&&t(this).css({left:a.left-n.left-s.left,width:r,height:l})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).resizable("instance").options;t(e.alsoResize).each((function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css("left")),top:parseFloat(e.css("top"))})}))},resize:function(e,i){var s=t(this).resizable("instance"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0};t(n.alsoResize).each((function(){var e=t(this),s=t(this).data("ui-resizable-alsoresize"),n={},o=e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(o,(function(t,e){var i=(s[e]||0)+(r[e]||0);i&&0<=i&&(n[e]=i||null)})),e.css(n)}))},stop:function(){t(this).removeData("ui-resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).resizable("instance"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,"ui-resizable-ghost"),!1!==t.uiBackCompat&&"string"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable("instance");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable("instance");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e,i=t(this).resizable("instance"),s=i.options,n=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,l="number"==typeof s.grid?[s.grid,s.grid]:s.grid,h=l[0]||1,u=l[1]||1,c=Math.round((n.width-o.width)/h)*h,d=Math.round((n.height-o.height)/u)*u,p=o.width+c,f=o.height+d,g=s.maxWidth&&s.maxWidth<p,m=s.maxHeight&&s.maxHeight<f,v=s.minWidth&&s.minWidth>p;n=s.minHeight&&s.minHeight>f,s.grid=l,v&&(p+=h),n&&(f+=u),g&&(p-=h),m&&(f-=u),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=a.left-c):((f-u<=0||p-h<=0)&&(e=i._getPaddingPlusBorderDimensions(this)),0<f-u?(i.size.height=f,i.position.top=a.top-d):(f=u-e.height,i.size.height=f,i.position.top=a.top+o.height-f),0<p-h?(i.size.width=p,i.position.left=a.left-c):(p=h-e.width,i.size.width=p,i.position.left=a.left+o.width-p))}}),t.ui.resizable,t.widget("ui.selectable",t.ui.mouse,{version:"1.13.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e.elementPos=t(e.element[0]).offset(),e.selectees=t(e.options.filter,e.element[0]),e._addClass(e.selectees,"ui-selectee"),e.selectees.each((function(){var i=t(this),s={left:(s=i.offset()).left-e.elementPos.left,top:s.top-e.elementPos.top};t.data(this,"selectable-item",{element:this,$element:i,left:s.left,top:s.top,right:s.left+i.outerWidth(),bottom:s.top+i.outerHeight(),startselected:!1,selected:i.hasClass("ui-selected"),selecting:i.hasClass("ui-selecting"),unselecting:i.hasClass("ui-unselecting")})}))},this.refresh(),this._mouseInit(),this.helper=t("<div>"),this._addClass(this.helper,"ui-selectable-helper")},_destroy:function(){this.selectees.removeData("selectable-item"),this._mouseDestroy()},_mouseStart:function(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.elementPos=t(this.element[0]).offset(),this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger("start",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each((function(){var s=t.data(this,"selectable-item");s.startselected=!0,e.metaKey||e.ctrlKey||(i._removeClass(s.$element,"ui-selected"),s.selected=!1,i._addClass(s.$element,"ui-unselecting"),s.unselecting=!0,i._trigger("unselecting",e,{unselecting:s.element}))})),t(e.target).parents().addBack().each((function(){var s,n=t.data(this,"selectable-item");if(n)return s=!e.metaKey&&!e.ctrlKey||!n.$element.hasClass("ui-selected"),i._removeClass(n.$element,s?"ui-unselecting":"ui-selected")._addClass(n.$element,s?"ui-selecting":"ui-unselecting"),n.unselecting=!s,n.selecting=s,(n.selected=s)?i._trigger("selecting",e,{selecting:n.element}):i._trigger("unselecting",e,{unselecting:n.element}),!1})))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,o=this.opos[0],a=this.opos[1],r=e.pageX,l=e.pageY;return r<o&&(i=r,r=o,o=i),l<a&&(i=l,l=a,a=i),this.helper.css({left:o,top:a,width:r-o,height:l-a}),this.selectees.each((function(){var i=t.data(this,"selectable-item"),h=!1,u={};i&&i.element!==s.element[0]&&(u.left=i.left+s.elementPos.left,u.right=i.right+s.elementPos.left,u.top=i.top+s.elementPos.top,u.bottom=i.bottom+s.elementPos.top,"touch"===n.tolerance?h=!(u.left>r||u.right<o||u.top>l||u.bottom<a):"fit"===n.tolerance&&(h=u.left>o&&u.right<r&&u.top>a&&u.bottom<l),h?(i.selected&&(s._removeClass(i.$element,"ui-selected"),i.selected=!1),i.unselecting&&(s._removeClass(i.$element,"ui-unselecting"),i.unselecting=!1),i.selecting||(s._addClass(i.$element,"ui-selecting"),i.selecting=!0,s._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,s._addClass(i.$element,"ui-selected"),i.selected=!0):(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,i.startselected&&(s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0),s._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(s._removeClass(i.$element,"ui-selected"),i.selected=!1,s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0,s._trigger("unselecting",e,{unselecting:i.element})))))})),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each((function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-unselecting"),s.unselecting=!1,s.startselected=!1,i._trigger("unselected",e,{unselected:s.element})})),t(".ui-selecting",this.element[0]).each((function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-selecting")._addClass(s.$element,"ui-selected"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger("selected",e,{selected:s.element})})),this._trigger("stop",e),this.helper.remove(),!1}}),t.widget("ui.sortable",t.ui.mouse,{version:"1.13.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return e<=t&&t<e+i},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){var e=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),t.each(this.items,(function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle")}))},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;0<=t;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return!(this.reverting||this.options.disabled||"static"===this.options.type||(this._refreshItems(e),t(e.target).parents().each((function(){if(t.data(this,o.widgetName+"-item")===o)return s=t(this),!1})),!(s=t.data(e.target,o.widgetName+"-item")===o?t(e.target):s)||this.options.handle&&!i&&(t(this.options.handle,s).find("*").addBack().each((function(){this===e.target&&(n=!0)})),!n)||(this.currentItem=s,this._removeCurrentsFromItems(),0)))},_mouseStart:function(e,i,s){var n,o,a=this.options;if((this.currentContainer=this).refreshPositions(),this.appendTo=t("parent"!==a.appendTo?a.appendTo:this.currentItem.parent()),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),this.scrollParent=this.placeholder.scrollParent(),t.extend(this.offset,{parent:this._getParentOffset()}),a.containment&&this._setContainment(),a.cursor&&"auto"!==a.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("<style>*{ cursor: "+a.cursor+" !important; }</style>").appendTo(o)),a.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),a.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;0<=n;n--)this.containers[n]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this.helper.parent().is(this.appendTo)||(this.helper.detach().appendTo(this.appendTo),this.offset.parent=this._getParentOffset()),this.position=this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,this.lastPositionAbs=this.positionAbs=this._convertPositionTo("absolute"),this._mouseDrag(e),!0},_scroll:function(t){var e=this.options,i=!1;return this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<e.scrollSensitivity?this.scrollParent[0].scrollTop=i=this.scrollParent[0].scrollTop+e.scrollSpeed:t.pageY-this.overflowOffset.top<e.scrollSensitivity&&(this.scrollParent[0].scrollTop=i=this.scrollParent[0].scrollTop-e.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<e.scrollSensitivity?this.scrollParent[0].scrollLeft=i=this.scrollParent[0].scrollLeft+e.scrollSpeed:t.pageX-this.overflowOffset.left<e.scrollSensitivity&&(this.scrollParent[0].scrollLeft=i=this.scrollParent[0].scrollLeft-e.scrollSpeed)):(t.pageY-this.document.scrollTop()<e.scrollSensitivity?i=this.document.scrollTop(this.document.scrollTop()-e.scrollSpeed):this.window.height()-(t.pageY-this.document.scrollTop())<e.scrollSensitivity&&(i=this.document.scrollTop(this.document.scrollTop()+e.scrollSpeed)),t.pageX-this.document.scrollLeft()<e.scrollSensitivity?i=this.document.scrollLeft(this.document.scrollLeft()-e.scrollSpeed):this.window.width()-(t.pageX-this.document.scrollLeft())<e.scrollSensitivity&&(i=this.document.scrollLeft(this.document.scrollLeft()+e.scrollSpeed))),i},_mouseDrag:function(e){var i,s,n,o,a=this.options;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),a.scroll&&!1!==this._scroll(e)&&(this._refreshItemPositions(!0),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.dragDirection={vertical:this._getDragVerticalDirection(),horizontal:this._getDragHorizontalDirection()},i=this.items.length-1;0<=i;i--)if(n=(s=this.items[i]).item[0],(o=this._intersectsWithPointer(s))&&s.instance===this.currentContainer&&!(n===this.currentItem[0]||this.placeholder[1===o?"next":"prev"]()[0]===n||t.contains(this.placeholder[0],n)||"semi-dynamic"===this.options.type&&t.contains(this.element[0],n))){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){var s,n,o,a;if(e)return t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert?(n=(s=this).placeholder.offset(),a={},(o=this.options.axis)&&"x"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,(function(){s._clear(e)}))):this._clear(e,i),!1},cancel:function(){if(this.dragging){this._mouseUp(new t.Event("mouseup",{target:null})),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var e=this.containers.length-1;0<=e;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each((function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&s.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))})),!s.length&&e.key&&s.push(e.key+"="),s.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each((function(){s.push(t(e.item||this).attr(e.attribute||"id")||"")})),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,l=r+t.height,h=this.offset.click.top,u=this.offset.click.left;return h="x"===this.options.axis||r<s+h&&s+h<l,u="y"===this.options.axis||o<e+u&&e+u<a,"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?h&&u:o<e+this.helperProportions.width/2&&i-this.helperProportions.width/2<a&&r<s+this.helperProportions.height/2&&n-this.helperProportions.height/2<l},_intersectsWithPointer:function(t){var e="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height);return t="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),!(!e||!t)&&(e=this.dragDirection.vertical,t=this.dragDirection.horizontal,this.floating?"right"===t||"down"===e?2:1:e&&("down"===e?2:1))},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this.dragDirection.vertical;return t=this.dragDirection.horizontal,this.floating&&t?"right"===t&&i||"left"===t&&!i:s&&("down"===s&&e||"up"===s&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!=t&&(0<t?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!=t&&(0<t?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){var i,s,n,o,a=[],r=[],l=this._connectWith();if(l&&e)for(i=l.length-1;0<=i;i--)for(s=(n=t(l[i],this.document[0])).length-1;0<=s;s--)(o=t.data(n[s],this.widgetFullName))&&o!==this&&!o.options.disabled&&r.push(["function"==typeof o.options.items?o.options.items.call(o.element):t(o.options.items,o.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),o]);function h(){a.push(this)}for(r.push(["function"==typeof this.options.items?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),i=r.length-1;0<=i;i--)r[i][0].each(h);return t(a)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,(function(t){for(var i=0;i<e.length;i++)if(e[i]===t.item[0])return!1;return!0}))},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,l,h,u=this.items,c=[["function"==typeof this.options.items?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;0<=i;i--)for(s=(n=t(d[i],this.document[0])).length-1;0<=s;s--)(o=t.data(n[s],this.widgetFullName))&&o!==this&&!o.options.disabled&&(c.push(["function"==typeof o.options.items?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=c.length-1;0<=i;i--)for(a=c[i][1],h=(r=c[i][s=0]).length;s<h;s++)(l=t(r[s])).data(this.widgetName+"-item",a),u.push({item:l,instance:a,width:0,height:0,left:0,top:0})},_refreshItemPositions:function(e){for(var i,s,n=this.items.length-1;0<=n;n--)i=this.items[n],this.currentContainer&&i.instance!==this.currentContainer&&i.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?t(this.options.toleranceElement,i.item):i.item,e||(i.width=s.outerWidth(),i.height=s.outerHeight()),s=s.offset(),i.left=s.left,i.top=s.top)},refreshPositions:function(t){var e,i;if(this.floating=!!this.items.length&&("x"===this.options.axis||this._isFloating(this.items[0].item)),this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset()),this._refreshItemPositions(t),this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(e=this.containers.length-1;0<=e;e--)i=this.containers[e].element.offset(),this.containers[e].containerCache.left=i.left,this.containers[e].containerCache.top=i.top,this.containers[e].containerCache.width=this.containers[e].element.outerWidth(),this.containers[e].containerCache.height=this.containers[e].element.outerHeight();return this},_createPlaceholder:function(e){var i,s,n=(e=e||this).options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,s=e.currentItem[0].nodeName.toLowerCase(),n.placeholder={element:function(){var n=t("<"+s+">",e.document[0]);return e._addClass(n,"ui-sortable-placeholder",i||e.currentItem[0].className)._removeClass(n,"ui-sortable-helper"),"tbody"===s?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(n)):"tr"===s?e._createTrPlaceholder(e.currentItem,n):"img"===s&&n.attr("src",e.currentItem.attr("src")),i||n.css("visibility","hidden"),n},update:function(t,o){i&&!n.forcePlaceholderSize||(o.height()&&(!n.forcePlaceholderSize||"tbody"!==s&&"tr"!==s)||o.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),o.width()||o.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(n.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),n.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var s=this;e.children().each((function(){t("<td>&#160;</td>",s.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i)}))},_contactContainers:function(e){for(var i,s,n,o,a,r,l,h,u,c=null,d=null,p=this.containers.length-1;0<=p;p--)t.contains(this.currentItem[0],this.containers[p].element[0])||(this._intersectsWith(this.containers[p].containerCache)?c&&t.contains(this.containers[p].element[0],c.element[0])||(c=this.containers[p],d=p):this.containers[p].containerCache.over&&(this.containers[p]._trigger("out",e,this._uiHash(this)),this.containers[p].containerCache.over=0));if(c)if(1===this.containers.length)this.containers[d].containerCache.over||(this.containers[d]._trigger("over",e,this._uiHash(this)),this.containers[d].containerCache.over=1);else{for(s=1e4,n=null,o=(h=c.floating||this._isFloating(this.currentItem))?"left":"top",a=h?"width":"height",u=h?"pageX":"pageY",i=this.items.length-1;0<=i;i--)t.contains(this.containers[d].element[0],this.items[i].item[0])&&this.items[i].item[0]!==this.currentItem[0]&&(r=this.items[i].item.offset()[o],l=!1,e[u]-r>this.items[i][a]/2&&(l=!0),Math.abs(e[u]-r)<s&&(s=Math.abs(e[u]-r),n=this.items[i],this.direction=l?"up":"down"));(n||this.options.dropOnEmpty)&&(this.currentContainer!==this.containers[d]?(n?this._rearrange(e,n,null,!0):this._rearrange(e,null,this.containers[d].element,!0),this._trigger("change",e,this._uiHash()),this.containers[d]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[d],this.options.placeholder.update(this.currentContainer,this.placeholder),this.scrollParent=this.placeholder.scrollParent(),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this.containers[d]._trigger("over",e,this._uiHash(this)),this.containers[d].containerCache.over=1):this.currentContainer.containerCache.over||(this.containers[d]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1))}},_createHelper:function(e){var i=this.options;return(e="function"==typeof i.helper?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem).parents("body").length||this.appendTo[0].appendChild(e[0]),e[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),e[0].style.width&&!i.forceHelperSize||e.width(this.currentItem.width()),e[0].style.height&&!i.forceHelperSize||e.height(this.currentItem.height()),e},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),"left"in(t=Array.isArray(t)?{left:+t[0],top:+t[1]||0}:t)&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),{top:(e=this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie?{top:0,left:0}:e).top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),"document"!==s.containment&&"window"!==s.containment||(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(e=t(s.containment)[0],i=t(s.containment).offset(),s="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i=i||this.position;var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent;return e=/(html|body)/i.test(n[0].tagName),{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():e?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():e?0:n.scrollLeft())*s}},_generatePosition:function(e){var i=this.options,s=e.pageX,n=e.pageY,o="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(o[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(n=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(n=this.containment[3]+this.offset.click.top)),i.grid&&(e=this.originalPageY+Math.round((n-this.originalPageY)/i.grid[1])*i.grid[1],n=!this.containment||e-this.offset.click.top>=this.containment[1]&&e-this.offset.click.top<=this.containment[3]?e:e-this.offset.click.top>=this.containment[1]?e-i.grid[1]:e+i.grid[1],e=this.originalPageX+Math.round((s-this.originalPageX)/i.grid[0])*i.grid[0],s=!this.containment||e-this.offset.click.left>=this.containment[0]&&e-this.offset.click.left<=this.containment[2]?e:e-this.offset.click.left>=this.containment[0]?e-i.grid[0]:e+i.grid[0])),{top:n-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():a?0:o.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():a?0:o.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay((function(){n===this.counter&&this.refreshPositions(!s)}))},_clear:function(t,e){this.reverting=!1;var i,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(i in this._storedCSS)"auto"!==this._storedCSS[i]&&"static"!==this._storedCSS[i]||(this._storedCSS[i]="");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")}else this.currentItem.show();function n(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}for(this.fromOutside&&!e&&s.push((function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))})),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||s.push((function(t){this._trigger("update",t,this._uiHash())})),this!==this.currentContainer&&(e||(s.push((function(t){this._trigger("remove",t,this._uiHash())})),s.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),i=this.containers.length-1;0<=i;i--)e||s.push(n("deactivate",this,this.containers[i])),this.containers[i].containerCache.over&&(s.push(n("out",this,this.containers[i])),this.containers[i].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(i=0;i<s.length;i++)s[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){!1===t.Widget.prototype._trigger.apply(this,arguments)&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}}),t.widget("ui.accordion",{version:"1.13.1",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:function(t){return t.find("> li > :first-child").add(t.find("> :not(li)").even())},heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),e.collapsible||!1!==e.active&&null!=e.active||(e.active=0),this._processPanels(),e.active<0&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t()}},_createIcons:function(){var e,i=this.options.icons;i&&(e=t("<span>"),this._addClass(e,"ui-accordion-header-icon","ui-icon "+i.header),e.prependTo(this.headers),e=this.active.children(".ui-accordion-header-icon"),this._removeClass(e,i.header)._addClass(e,null,i.activeHeader)._addClass(this.headers,"ui-accordion-icons"))},_destroyIcons:function(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","")},_setOption:function(t,e){"active"!==t?("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||!1!==this.options.active||this._activate(0),"icons"===t&&(this._destroyIcons(),e&&this._createIcons())):this._activate(e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!t)},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,s=this.headers.length,n=this.headers.index(e.target),o=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:o=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[s-1]}o&&(t(e.target).attr("tabIndex",-1),t(o).attr("tabIndex",0),t(o).trigger("focus"),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().trigger("focus")},refresh:function(){var e=this.options;this._processPanels(),!1===e.active&&!0===e.collapsible||!this.headers.length?(e.active=!1,this.active=t()):!1===e.active?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;"function"==typeof this.options.header?this.headers=this.options.header(this.element):this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var e,i=this.options,s=i.heightStyle,n=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each((function(){var e=t(this),i=e.uniqueId().attr("id"),s=e.next(),n=s.uniqueId().attr("id");e.attr("aria-controls",n),s.attr("aria-labelledby",i)})).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===s?(e=n.height(),this.element.siblings(":visible").each((function(){var i=t(this),s=i.css("position");"absolute"!==s&&"fixed"!==s&&(e-=i.outerHeight(!0))})),this.headers.each((function(){e-=t(this).outerHeight(!0)})),this.headers.next().each((function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()))})).css("overflow","auto")):"auto"===s&&(e=0,this.headers.next().each((function(){var i=t(this).is(":visible");i||t(this).show(),e=Math.max(e,t(this).css("height","").height()),i||t(this).hide()})).height(e))},_activate:function(e){(e=this._findActive(e)[0])!==this.active[0]&&(e=e||this.active[0],this._eventHandler({target:e,currentTarget:e,preventDefault:t.noop}))},_findActive:function(e){return"number"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:"_keydown"};e&&t.each(e.split(" "),(function(t,e){i[e]="_eventHandler"})),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget),o=n[0]===s[0],a=o&&i.collapsible,r=a?t():n.next(),l=s.next();r={oldHeader:s,oldPanel:l,newHeader:a?t():n,newPanel:r},e.preventDefault(),o&&!i.collapsible||!1===this._trigger("beforeActivate",e,r)||(i.active=!a&&this.headers.index(n),this.active=o?t():n,this._toggle(r),this._removeClass(s,"ui-accordion-header-active","ui-state-active"),i.icons&&(s=s.children(".ui-accordion-header-icon"),this._removeClass(s,null,i.icons.activeHeader)._addClass(s,null,i.icons.header)),o||(this._removeClass(n,"ui-accordion-header-collapsed")._addClass(n,"ui-accordion-header-active","ui-state-active"),i.icons&&(o=n.children(".ui-accordion-header-icon"),this._removeClass(o,null,i.icons.header)._addClass(o,null,i.icons.activeHeader)),this._addClass(n.next(),"ui-accordion-content-active")))},_toggle:function(e){var i=e.newPanel,s=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,e):(s.hide(),i.show(),this._toggleComplete(e)),s.attr({"aria-hidden":"true"}),s.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&s.length?s.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter((function(){return 0===parseInt(t(this).attr("tabIndex"),10)})).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(t,e,i){var s,n,o,a=this,r=0,l=t.css("box-sizing"),h=t.length&&(!e.length||t.index()<e.index()),u=this.options.animate||{},c=h&&u.down||u;return h=function(){a._toggleComplete(i)},n=(n="string"==typeof c?c:n)||c.easing||u.easing,o=(o="number"==typeof c?c:o)||c.duration||u.duration,e.length?t.length?(s=t.show().outerHeight(),e.animate(this.hideProps,{duration:o,easing:n,step:function(t,e){e.now=Math.round(t)}}),void t.hide().animate(this.showProps,{duration:o,easing:n,complete:h,step:function(t,i){i.now=Math.round(t),"height"!==i.prop?"content-box"===l&&(r+=i.now):"content"!==a.options.heightStyle&&(i.now=Math.round(s-e.outerHeight()-r),r=0)}})):e.animate(this.hideProps,o,n,h):t.animate(this.showProps,o,n,h)},_toggleComplete:function(t){var e=t.oldPanel,i=e.prev();this._removeClass(e,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}}),t.widget("ui.menu",{version:"1.13.1",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.lastMousePosition={x:null,y:null},this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function(t){t.preventDefault(),this._activateItem(t)},"click .ui-menu-item":function(e){var i=t(e.target),s=t(t.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&&s.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":"_activateItem","mousemove .ui-menu-item":"_activateItem",mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this._menuItems().first();e||this.focus(t,i)},blur:function(e){this._delay((function(){t.contains(this.element[0],t.ui.safeActiveElement(this.document[0]))||this.collapseAll(e)}))},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t,!0),this.mouseHandled=!1}})},_activateItem:function(e){var i,s;this.previousFilter||e.clientX===this.lastMousePosition.x&&e.clientY===this.lastMousePosition.y||(this.lastMousePosition={x:e.clientX,y:e.clientY},i=t(e.target).closest(".ui-menu-item"),s=t(e.currentTarget),i[0]===s[0]&&(s.is(".ui-state-active")||(this._removeClass(s.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(e,s))))},_destroy:function(){var e=this.element.find(".ui-menu-item").removeAttr("role aria-disabled").children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),e.children().each((function(){var e=t(this);e.data("ui-menu-submenu-caret")&&e.remove()}))},_keydown:function(e){var i,s,n,o=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:i=this.previousFilter||"",n=o=!1,s=96<=e.keyCode&&e.keyCode<=105?(e.keyCode-96).toString():String.fromCharCode(e.keyCode),clearTimeout(this.filterTimer),s===i?n=!0:s=i+s,i=this._filterMenuItems(s),(i=n&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i).length||(s=String.fromCharCode(e.keyCode),i=this._filterMenuItems(s)),i.length?(this.focus(e,i),this.previousFilter=s,this.filterTimer=this._delay((function(){delete this.previousFilter}),1e3)):delete this.previousFilter}o&&e.preventDefault()},_activate:function(t){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(t):this.select(t))},refresh:function(){var e,i,s=this,n=this.options.icons.submenu,o=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),i=o.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each((function(){var e=t(this),i=e.prev(),o=t("<span>").data("ui-menu-submenu-caret",!0);s._addClass(o,"ui-menu-icon","ui-icon "+n),i.attr("aria-haspopup","true").prepend(o),e.attr("aria-labelledby",i.attr("id"))})),this._addClass(i,"ui-menu","ui-widget ui-widget-content ui-front"),(e=o.add(this.element).find(this.options.items)).not(".ui-menu-item").each((function(){var e=t(this);s._isDivider(e)&&s._addClass(e,"ui-menu-divider","ui-widget-content")})),o=(i=e.not(".ui-menu-item, .ui-menu-divider")).children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(i,"ui-menu-item")._addClass(o,"ui-menu-item-wrapper"),e.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){var i;"icons"===t&&(i=this.element.find(".ui-menu-icon"),this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",String(t)),this._toggleClass(null,"ui-state-disabled",!!t)},focus:function(t,e){var i;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),i=this.active.children(".ui-menu-item-wrapper"),this._addClass(i,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",i.attr("id")),i=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(i,null,"ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay((function(){this._close()}),this.delay),(i=e.children(".ui-menu")).length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(e){var i,s,n;this._hasScroll()&&(s=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,n=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,i=e.offset().top-this.activeMenu.offset().top-s-n,s=this.activeMenu.scrollTop(),n=this.activeMenu.height(),e=e.outerHeight(),i<0?this.activeMenu.scrollTop(s+i):n<i+e&&this.activeMenu.scrollTop(s+i-n+e))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay((function(){this._close(),this._open(t)}),this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay((function(){var s=i?this.element:t(e&&e.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(e),this._removeClass(s.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=s}),i?0:this.delay)},_close:function(t){(t=t||(this.active?this.active.parent():this.element)).find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false")},_closeOnDocumentClick:function(e){return!t(e.target).closest(".ui-menu").length},_isDivider:function(t){return!/[^\-\u2014\u2013\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this._menuItems(this.active.children(".ui-menu")).first();e&&e.length&&(this._open(e.parent()),this._delay((function(){this.focus(t,e)})))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_menuItems:function(t){return(t||this.element).find(this.options.items).filter(".ui-menu-item")},_move:function(t,e,i){var s;(s=this.active?"first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").last():this.active[t+"All"](".ui-menu-item").first():s)&&s.length&&this.active||(s=this._menuItems(this.activeMenu)[e]()),this.focus(i,s)},nextPage:function(e){var i,s,n;this.active?this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.innerHeight(),0===t.fn.jquery.indexOf("3.2.")&&(n+=this.element[0].offsetHeight-this.element.outerHeight()),this.active.nextAll(".ui-menu-item").each((function(){return(i=t(this)).offset().top-s-n<0})),this.focus(e,i)):this.focus(e,this._menuItems(this.activeMenu)[this.active?"last":"first"]())):this.next(e)},previousPage:function(e){var i,s,n;this.active?this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.innerHeight(),0===t.fn.jquery.indexOf("3.2.")&&(n+=this.element[0].offsetHeight-this.element.outerHeight()),this.active.prevAll(".ui-menu-item").each((function(){return 0<(i=t(this)).offset().top-s+n})),this.focus(e,i)):this.focus(e,this._menuItems(this.activeMenu).first())):this.next(e)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i)},_filterMenuItems:function(e){e=e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");var i=new RegExp("^"+e,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter((function(){return i.test(String.prototype.trim.call(t(this).children(".ui-menu-item-wrapper").text()))}))}}),t.widget("ui.autocomplete",{version:"1.13.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,liveRegionTimer:null,_create:function(){var e,i,s,n="textarea"===(o=this.element[0].nodeName.toLowerCase()),o="input"===o;this.isMultiLine=n||!o&&this._isContentEditable(this.element),this.valueMethod=this.element[n||o?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))i=s=e=!0;else{i=s=e=!1;var o=t.ui.keyCode;switch(n.keyCode){case o.PAGE_UP:e=!0,this._move("previousPage",n);break;case o.PAGE_DOWN:e=!0,this._move("nextPage",n);break;case o.UP:e=!0,this._keyEvent("previous",n);break;case o.DOWN:e=!0,this._keyEvent("next",n);break;case o.ENTER:this.menu.active&&(e=!0,n.preventDefault(),this.menu.select(n));break;case o.TAB:this.menu.active&&this.menu.select(n);break;case o.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}}},keypress:function(s){if(e)return e=!1,void(this.isMultiLine&&!this.menu.element.is(":visible")||s.preventDefault());if(!i){var n=t.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(t){if(s)return s=!1,void t.preventDefault();this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){clearTimeout(this.searching),this.close(t),this._change(t)}}),this._initSource(),this.menu=t("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().attr({unselectable:"on"}).menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault()},menufocus:function(e,i){var s,n;if(this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type)))return this.menu.blur(),void this.document.one("mousemove",(function(){t(e.target).trigger(e.originalEvent)}));n=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",e,{item:n})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(n.value),(s=i.item.attr("aria-label")||n.value)&&String.prototype.trim.call(s).length&&(clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay((function(){this.liveRegion.html(t("<div>").text(s))}),100))},menuselect:function(e,i){var s=i.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==t.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=n,this._delay((function(){this.previous=n,this.selectedItem=s}))),!1!==this._trigger("select",e,{item:s})&&this._value(s.value),this.term=this._value(),this.close(e),this.selectedItem=s}}),this.liveRegion=t("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(e){var i=this.menu.element[0];return e.target===this.element[0]||e.target===i||t.contains(i,e.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var e=this.options.appendTo;return(e=(e=e&&(e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)))&&e[0]?e:this.element.closest(".ui-front, dialog")).length?e:this.document[0].body},_initSource:function(){var e,i,s=this;Array.isArray(this.options.source)?(e=this.options.source,this.source=function(i,s){s(t.ui.autocomplete.filter(e,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,n){s.xhr&&s.xhr.abort(),s.xhr=t.ajax({url:i,data:e,dataType:"json",success:function(t){n(t)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay((function(){var e=this.term===this._value(),i=this.menu.element.is(":visible"),s=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;e&&(i||s)||(this.selectedItem=null,this.search(null,t))}),this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):!1!==this._trigger("search",e)?this._search(t):void 0},_search:function(t){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var t=++this.requestIndex;return function(e){t===this.requestIndex&&this.__response(e),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")}.bind(this)},__response:function(t){t=t&&this._normalize(t),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,(function(e){return"string"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label})}))},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var s=this;t.each(i,(function(t,i){s._renderItemData(e,i)}))},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(e,i){return t("<li>").append(t("<div>").text(i.label)).appendTo(e)},_move:function(t,e){if(this.menu.element.is(":visible"))return this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[t](e);this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){this.isMultiLine&&!this.menu.element.is(":visible")||(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop("contentEditable");return"inherit"===e?this._isContentEditable(t.parent()):"true"===e}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(e,i){var s=new RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,(function(t){return s.test(t.label||t.value||t)}))}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(1<t?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay((function(){this.liveRegion.html(t("<div>").text(i))}),100))}}),t.ui.autocomplete;var x,C,D,S=/ui-corner-([a-z]){2,6}/g;function T(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:"",selectMonthLabel:"Select month",selectYearLabel:"Select year"},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,onUpdateDatepicker:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=A(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function A(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.on("mouseout",i,(function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover")})).on("mouseover",i,E)}function E(){t.datepicker._isDisabledDatepicker((C.inline?C.dpDiv.parent():C.input)[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"))}function M(e,i){for(var s in t.extend(e,i),i)null==i[s]&&(e[s]=i[s]);return e}function I(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger("change")}}t.widget("ui.controlgroup",{version:"1.13.1",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr("role","toolbar"),this.refresh()},_destroy:function(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()},_initWidgets:function(){var e=this,i=[];t.each(this.options.items,(function(s,n){var o,a={};if(n)return"controlgroupLabel"===s?((o=e.element.find(n)).each((function(){var e=t(this);e.children(".ui-controlgroup-label-contents").length||e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")})),e._addClass(o,null,"ui-widget ui-widget-content ui-state-default"),void(i=i.concat(o.get()))):void(t.fn[s]&&(a=e["_"+s+"Options"]?e["_"+s+"Options"]("middle"):{classes:{}},e.element.find(n).each((function(){var n=t(this),o=n[s]("instance"),r=t.widget.extend({},a);"button"===s&&n.parent(".ui-spinner").length||((o=o||n[s]()[s]("instance"))&&(r.classes=e._resolveClassesValues(r.classes,o)),n[s](r),r=n[s]("widget"),t.data(r[0],"ui-controlgroup-data",o||n[s]("instance")),i.push(r[0]))}))))})),this.childWidgets=t(t.uniqueSort(i)),this._addClass(this.childWidgets,"ui-controlgroup-item")},_callChildMethod:function(e){this.childWidgets.each((function(){var i=t(this).data("ui-controlgroup-data");i&&i[e]&&i[e]()}))},_updateCornerClass:function(t,e){e=this._buildSimpleOptions(e,"label").classes.label,this._removeClass(t,null,"ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"),this._addClass(t,null,e)},_buildSimpleOptions:function(t,e){var i="vertical"===this.options.direction,s={classes:{}};return s.classes[e]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[t],s},_spinnerOptions:function(t){return(t=this._buildSimpleOptions(t,"ui-spinner")).classes["ui-spinner-up"]="",t.classes["ui-spinner-down"]="",t},_buttonOptions:function(t){return this._buildSimpleOptions(t,"ui-button")},_checkboxradioOptions:function(t){return this._buildSimpleOptions(t,"ui-checkboxradio-label")},_selectmenuOptions:function(t){var e="vertical"===this.options.direction;return{width:e&&"auto",classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(e?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(e?"top":"left")},last:{"ui-selectmenu-button-open":e?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(e?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[t]}},_resolveClassesValues:function(e,i){var s={};return t.each(e,(function(t){var n=i.options.classes[t]||"";n=String.prototype.trim.call(n.replace(S,"")),s[t]=(n+" "+e[t]).replace(/\s+/g," ")})),s},_setOption:function(t,e){"direction"===t&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(t,e),"disabled"!==t?this.refresh():this._callChildMethod(e?"disable":"enable")},refresh:function(){var e,i=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),e=this.childWidgets,(e=this.options.onlyVisible?e.filter(":visible"):e).length&&(t.each(["first","last"],(function(t,s){var n,o=e[s]().data("ui-controlgroup-data");o&&i["_"+o.widgetName+"Options"]?((n=i["_"+o.widgetName+"Options"](1===e.length?"only":s)).classes=i._resolveClassesValues(n.classes,o),o.element[o.widgetName](n)):i._updateCornerClass(e[s](),s)})),this._callChildMethod("refresh"))}}),t.widget("ui.checkboxradio",[t.ui.formResetMixin,{version:"1.13.1",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function(){var e,i=this,s=this._super()||{};return this._readType(),e=this.element.labels(),this.label=t(e[e.length-1]),this.label.length||t.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element[0]).each((function(){i.originalLabel+=3===this.nodeType?t(this).text():this.outerHTML})),this.originalLabel&&(s.label=this.originalLabel),null!=(e=this.element[0].disabled)&&(s.disabled=e),s},_create:function(){var t=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),t&&this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this._on({change:"_toggleClasses",focus:function(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus")},blur:function(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus")}})},_readType:function(){var e=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===e&&/radio|checkbox/.test(this.type)||t.error("Can't create checkboxradio on element.nodeName="+e+" and element.type="+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var e=this.element[0].name,i="input[name='"+t.escapeSelector(e)+"']";return e?(this.form.length?t(this.form[0].elements).filter(i):t(i).filter((function(){return 0===t(this)._form().length}))).not(this.element):t([])},_toggleClasses:function(){var e=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",e),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",e)._toggleClass(this.icon,null,"ui-icon-blank",!e),"radio"===this.type&&this._getRadioGroup().each((function(){var e=t(this).checkboxradio("instance");e&&e._removeClass(e.label,"ui-checkboxradio-checked","ui-state-active")}))},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(t,e){if("label"!==t||e){if(this._super(t,e),"disabled"===t)return this._toggleClass(this.label,null,"ui-state-disabled",e),void(this.element[0].disabled=e);this.refresh()}},_updateIcon:function(e){var i="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=t("<span>"),this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(i+=e?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,e?"ui-icon-blank":"ui-icon-check")):i+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",i),e||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)},_updateLabel:function(){var t=this.label.contents().not(this.element[0]);this.icon&&(t=t.not(this.icon[0])),(t=this.iconSpace?t.not(this.iconSpace[0]):t).remove(),this.label.append(this.options.label)},refresh:function(){var t=this.element[0].checked,e=this.element[0].disabled;this._updateIcon(t),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),null!==this.options.label&&this._updateLabel(),e!==this.options.disabled&&this._setOptions({disabled:e})}}]),t.ui.checkboxradio,t.widget("ui.button",{version:"1.13.1",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function(){var t,e=this._super()||{};return this.isInput=this.element.is("input"),null!=(t=this.element[0].disabled)&&(e.disabled=t),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(e.label=this.originalLabel),e},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function(e){e.keyCode===t.ui.keyCode.SPACE&&(e.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"))}})},_enhance:function(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label)},_updateIcon:function(e,i){var s="iconPosition"!==e,n=s?this.options.iconPosition:i;e="top"===n||"bottom"===n,this.icon?s&&this._removeClass(this.icon,null,this.options.icon):(this.icon=t("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),s&&this._addClass(this.icon,null,i),this._attachIcon(n),e?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(n))},_destroy:function(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title")},_attachIconSpace:function(t){this.icon[/^(?:end|bottom)/.test(t)?"before":"after"](this.iconSpace)},_attachIcon:function(t){this.element[/^(?:end|bottom)/.test(t)?"append":"prepend"](this.icon)},_setOptions:function(t){var e=(void 0===t.showLabel?this.options:t).showLabel,i=(void 0===t.icon?this.options:t).icon;e||i||(t.showLabel=!0),this._super(t)},_setOption:function(t,e){"icon"===t&&(e?this._updateIcon(t,e):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===t&&this._updateIcon(t,e),"showLabel"===t&&(this._toggleClass("ui-button-icon-only",null,!e),this._updateTooltip()),"label"===t&&(this.isInput?this.element.val(e):(this.element.html(e),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(t,e),"disabled"===t&&(this._toggleClass(null,"ui-state-disabled",e),(this.element[0].disabled=e)&&this.element.trigger("blur"))},refresh:function(){var t=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOptions({disabled:t}),this._updateTooltip()}}),!1!==t.uiBackCompat&&(t.widget("ui.button",t.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super()},_setOption:function(t,e){"text"!==t?("showLabel"===t&&(this.options.text=e),"icon"===t&&(this.options.icons.primary=e),"icons"===t&&(e.primary?(this._super("icon",e.primary),this._super("iconPosition","beginning")):e.secondary&&(this._super("icon",e.secondary),this._super("iconPosition","end"))),this._superApply(arguments)):this._super("showLabel",e)}}),t.fn.button=(x=t.fn.button,function(e){var i="string"==typeof e,s=Array.prototype.slice.call(arguments,1),n=this;return i?this.length||"instance"!==e?this.each((function(){var i=t(this).attr("type"),o=t.data(this,"ui-"+("checkbox"!==i&&"radio"!==i?"button":"checkboxradio"));return"instance"===e?(n=o,!1):o?"function"!=typeof o[e]||"_"===e.charAt(0)?t.error("no such method '"+e+"' for button widget instance"):(i=o[e].apply(o,s))!==o&&void 0!==i?(n=i&&i.jquery?n.pushStack(i.get()):i,!1):void 0:t.error("cannot call methods on button prior to initialization; attempted to call method '"+e+"'")})):n=void 0:(s.length&&(e=t.widget.extend.apply(null,[e].concat(s))),this.each((function(){var i,s="checkbox"!==(i=t(this).attr("type"))&&"radio"!==i?"button":"checkboxradio";(i=t.data(this,"ui-"+s))?(i.option(e||{}),i._init&&i._init()):"button"!=s?t(this).checkboxradio(t.extend({icon:!1},e)):x.call(t(this),e)}))),n}),t.fn.buttonset=function(){return t.ui.controlgroup||t.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))}),t.ui.button,t.extend(t.ui,{datepicker:{version:"1.13.1"}}),t.extend(T.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return M(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var s,n=e.nodeName.toLowerCase(),o="div"===n||"span"===n;e.id||(this.uuid+=1,e.id="dp"+this.uuid),(s=this._newInst(t(e),o)).settings=t.extend({},i||{}),"input"===n?this._connectDatepicker(e,s):o&&this._inlineDatepicker(e,s)},_newInst:function(e,i){return{id:e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1"),input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?A(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(e,i){var s=t(e);i.append=t([]),i.trigger=t([]),s.hasClass(this.markerClassName)||(this._attachments(s,i),s.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var s,n=this._get(i,"appendText"),o=this._get(i,"isRTL");i.append&&i.append.remove(),n&&(i.append=t("<span>").addClass(this._appendClass).text(n),e[o?"before":"after"](i.append)),e.off("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),"focus"!==(s=this._get(i,"showOn"))&&"both"!==s||e.on("focus",this._showDatepicker),"button"!==s&&"both"!==s||(n=this._get(i,"buttonText"),s=this._get(i,"buttonImage"),this._get(i,"buttonImageOnly")?i.trigger=t("<img>").addClass(this._triggerClass).attr({src:s,alt:n,title:n}):(i.trigger=t("<button type='button'>").addClass(this._triggerClass),s?i.trigger.html(t("<img>").attr({src:s,alt:n,title:n})):i.trigger.text(n)),e[o?"before":"after"](i.trigger),i.trigger.on("click",(function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():(t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]&&t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])),!1})))},_autoSize:function(t){var e,i,s,n,o,a;this._get(t,"autoSize")&&!t.inline&&(o=new Date(2009,11,20),(a=this._get(t,"dateFormat")).match(/[DM]/)&&(e=function(t){for(n=s=i=0;n<t.length;n++)t[n].length>i&&(i=t[n].length,s=n);return s},o.setMonth(e(this._get(t,a.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,a.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length))},_inlineDatepicker:function(e,i){var s=t(e);s.hasClass(this.markerClassName)||(s.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,s,n,o){var a,r=this._dialogInst;return r||(this.uuid+=1,a="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+a+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),t("body").append(this._dialogInput),(r=this._dialogInst=this._newInst(this._dialogInput,!1)).settings={},t.data(this._dialogInput[0],"datepicker",r)),M(r.settings,n||{}),i=i&&i.constructor===Date?this._formatDate(r,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(a=document.documentElement.clientWidth,n=document.documentElement.clientHeight,i=document.documentElement.scrollLeft||document.body.scrollLeft,o=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[a/2-100+i,n/2-150+o]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),r.settings.onSelect=s,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",r),this},_destroyDatepicker:function(e){var i,s=t(e),n=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(n.append.remove(),n.trigger.remove(),s.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):"div"!==i&&"span"!==i||s.removeClass(this.markerClassName).empty(),C===n&&(C=null,this._curInst=null))},_enableDatepicker:function(e){var i,s=t(e),n=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&("input"===(i=e.nodeName.toLowerCase())?(e.disabled=!1,n.trigger.filter("button").each((function(){this.disabled=!1})).end().filter("img").css({opacity:"1.0",cursor:""})):"div"!==i&&"span"!==i||((s=s.children("."+this._inlineClass)).children().removeClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,(function(t){return t===e?null:t})))},_disableDatepicker:function(e){var i,s=t(e),n=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&("input"===(i=e.nodeName.toLowerCase())?(e.disabled=!0,n.trigger.filter("button").each((function(){this.disabled=!0})).end().filter("img").css({opacity:"0.5",cursor:"default"})):"div"!==i&&"span"!==i||((s=s.children("."+this._inlineClass)).children().addClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,(function(t){return t===e?null:t})),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;e<this._disabledInputs.length;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,"datepicker")}catch(e){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,i,s){var n,o,a=this._getInst(e);if(2===arguments.length&&"string"==typeof i)return"defaults"===i?t.extend({},t.datepicker._defaults):a?"all"===i?t.extend({},a.settings):this._get(a,i):null;n=i||{},"string"==typeof i&&((n={})[i]=s),a&&(this._curInst===a&&this._hideDatepicker(),o=this._getDateDatepicker(e,!0),i=this._getMinMaxDate(a,"min"),s=this._getMinMaxDate(a,"max"),M(a.settings,n),null!==i&&void 0!==n.dateFormat&&void 0===n.minDate&&(a.settings.minDate=this._formatDate(a,i)),null!==s&&void 0!==n.dateFormat&&void 0===n.maxDate&&(a.settings.maxDate=this._formatDate(a,s)),"disabled"in n&&(n.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),a),this._autoSize(a),this._setDate(a,o),this._updateAlternate(a),this._updateDatepicker(a))},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){(t=this._getInst(t))&&this._updateDatepicker(t)},_setDateDatepicker:function(t,e){(t=this._getInst(t))&&(this._setDate(t,e),this._updateDatepicker(t),this._updateAlternate(t))},_getDateDatepicker:function(t,e){return(t=this._getInst(t))&&!t.inline&&this._setDateFromField(t,e),t?this._getDate(t):null},_doKeyDown:function(e){var i,s,n=t.datepicker._getInst(e.target),o=!0,a=n.dpDiv.is(".ui-datepicker-rtl");if(n._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),o=!1;break;case 13:return(s=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",n.dpDiv))[0]&&t.datepicker._selectDay(e.target,n.selectedMonth,n.selectedYear,s[0]),(i=t.datepicker._get(n,"onSelect"))?(s=t.datepicker._formatDate(n),i.apply(n.input?n.input[0]:null,[s,n])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(n,"stepBigMonths"):-t.datepicker._get(n,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(n,"stepBigMonths"):+t.datepicker._get(n,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),o=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),o=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,a?1:-1,"D"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(n,"stepBigMonths"):-t.datepicker._get(n,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),o=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,a?-1:1,"D"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(n,"stepBigMonths"):+t.datepicker._get(n,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),o=e.ctrlKey||e.metaKey;break;default:o=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):o=!1;o&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,s=t.datepicker._getInst(e.target);if(t.datepicker._get(s,"constrainInput"))return i=t.datepicker._possibleChars(t.datepicker._get(s,"dateFormat")),s=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||s<" "||!i||-1<i.indexOf(s)},_doKeyUp:function(e){if((e=t.datepicker._getInst(e.target)).input.val()!==e.lastVal)try{t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),e.input?e.input.val():null,t.datepicker._getFormatConfig(e))&&(t.datepicker._setDateFromField(e),t.datepicker._updateAlternate(e),t.datepicker._updateDatepicker(e))}catch(e){}return!0},_showDatepicker:function(e){var i,s,n,o;"input"!==(e=e.target||e).nodeName.toLowerCase()&&(e=t("input",e.parentNode)[0]),t.datepicker._isDisabledDatepicker(e)||t.datepicker._lastInput===e||(o=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==o&&(t.datepicker._curInst.dpDiv.stop(!0,!0),o&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),!1!==(s=(n=t.datepicker._get(o,"beforeShow"))?n.apply(e,[e,o]):{})&&(M(o.settings,s),o.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(o),t.datepicker._inDialog&&(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),i=!1,t(e).parents().each((function(){return!(i|="fixed"===t(this).css("position"))})),n={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,o.dpDiv.empty(),o.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(o),n=t.datepicker._checkOffset(o,n,i),o.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":i?"fixed":"absolute",display:"none",left:n.left+"px",top:n.top+"px"}),o.inline||(s=t.datepicker._get(o,"showAnim"),n=t.datepicker._get(o,"duration"),o.dpDiv.css("z-index",function(t){for(var e,i;t.length&&t[0]!==document;){if(("absolute"===(e=t.css("position"))||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[s]?o.dpDiv.show(s,t.datepicker._get(o,"showOptions"),n):o.dpDiv[s||"show"](s?n:null),t.datepicker._shouldFocusInput(o)&&o.input.trigger("focus"),t.datepicker._curInst=o)))},_updateDatepicker:function(e){this.maxRows=4,(C=e).dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,s=this._getNumberOfMonths(e),n=s[1],o=e.dpDiv.find("."+this._dayOverClass+" a"),a=t.datepicker._get(e,"onUpdateDatepicker");0<o.length&&E.apply(o.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),1<n&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",17*n+"em"),e.dpDiv[(1!==s[0]||1!==s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.trigger("focus"),e.yearshtml&&(i=e.yearshtml,setTimeout((function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year").first().replaceWith(e.yearshtml),i=e.yearshtml=null}),0)),a&&a.apply(e.input?e.input[0]:null,[e])},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(e,i,s){var n=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,l=document.documentElement.clientWidth+(s?0:t(document).scrollLeft()),h=document.documentElement.clientHeight+(s?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?n-a:0,i.left-=s&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=s&&i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+n>l&&n<l?Math.abs(i.left+n-l):0),i.top-=Math.min(i.top,i.top+o>h&&o<h?Math.abs(o+r):0),i},_findPos:function(e){for(var i=this._getInst(e),s=this._get(i,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.pseudos.hidden(e));)e=e[s?"previousSibling":"nextSibling"];return[(i=t(e).offset()).left,i.top]},_hideDatepicker:function(e){var i,s,n=this._curInst;!n||e&&n!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(n,"showAnim"),s=this._get(n,"duration"),e=function(){t.datepicker._tidyDialog(n)},t.effects&&(t.effects.effect[i]||t.effects[i])?n.dpDiv.hide(i,t.datepicker._get(n,"showOptions"),s,e):n.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?s:null,e),i||e(),this._datepickerShowing=!1,(e=this._get(n,"onClose"))&&e.apply(n.input?n.input[0]:null,[n.input?n.input.val():"",n]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")},_checkExternalClick:function(e){var i;t.datepicker._curInst&&(i=t(e.target),e=t.datepicker._getInst(i[0]),(i[0].id===t.datepicker._mainDivId||0!==i.parents("#"+t.datepicker._mainDivId).length||i.hasClass(t.datepicker.markerClassName)||i.closest("."+t.datepicker._triggerClass).length||!t.datepicker._datepickerShowing||t.datepicker._inDialog&&t.blockUI)&&(!i.hasClass(t.datepicker.markerClassName)||t.datepicker._curInst===e)||t.datepicker._hideDatepicker())},_adjustDate:function(e,i,s){var n=t(e);e=this._getInst(n[0]),this._isDisabledDatepicker(n[0])||(this._adjustInstDate(e,i,s),this._updateDatepicker(e))},_gotoToday:function(e){var i=t(e),s=this._getInst(i[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(e=new Date,s.selectedDay=e.getDate(),s.drawMonth=s.selectedMonth=e.getMonth(),s.drawYear=s.selectedYear=e.getFullYear()),this._notifyChange(s),this._adjustDate(i)},_selectMonthYear:function(e,i,s){var n=t(e);(e=this._getInst(n[0]))["selected"+("M"===s?"Month":"Year")]=e["draw"+("M"===s?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(e),this._adjustDate(n)},_selectDay:function(e,i,s,n){var o=t(e);t(n).hasClass(this._unselectableClass)||this._isDisabledDatepicker(o[0])||((o=this._getInst(o[0])).selectedDay=o.currentDay=parseInt(t("a",n).attr("data-date")),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=s,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(e){e=t(e),this._selectDate(e,"")},_selectDate:function(e,i){var s=t(e);e=this._getInst(s[0]),i=null!=i?i:this._formatDate(e),e.input&&e.input.val(i),this._updateAlternate(e),(s=this._get(e,"onSelect"))?s.apply(e.input?e.input[0]:null,[i,e]):e.input&&e.input.trigger("change"),e.inline?this._updateDatepicker(e):(this._hideDatepicker(),this._lastInput=e.input[0],"object"!=typeof e.input[0]&&e.input.trigger("focus"),this._lastInput=null)},_updateAlternate:function(e){var i,s,n=this._get(e,"altField");n&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),e=this.formatDate(i,s,this._getFormatConfig(e)),t(document).find(n).val(e))},noWeekends:function(t){return[0<(t=t.getDay())&&t<6,""]},iso8601Week:function(t){var e=new Date(t.getTime());return e.setDate(e.getDate()+4-(e.getDay()||7)),t=e.getTime(),e.setMonth(0),e.setDate(1),Math.floor(Math.round((t-e)/864e5)/7)+1},parseDate:function(e,i,s){if(null==e||null==i)throw"Invalid arguments";if(""===(i="object"==typeof i?i.toString():i+""))return null;for(var n,o,a,r=0,l="string"!=typeof(l=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff)?l:(new Date).getFullYear()%100+parseInt(l,10),h=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,u=(s?s.dayNames:null)||this._defaults.dayNames,c=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,d=(s?s.monthNames:null)||this._defaults.monthNames,p=-1,f=-1,g=-1,m=-1,v=!1,_=function(t){return(t=w+1<e.length&&e.charAt(w+1)===t)&&w++,t},y=function(t){var e=_(t);if(e="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,e=new RegExp("^\\d{"+("y"===t?e:1)+","+e+"}"),!(e=i.substring(r).match(e)))throw"Missing number at position "+r;return r+=e[0].length,parseInt(e[0],10)},b=function(e,s,n){var o=-1;if(s=t.map(_(e)?n:s,(function(t,e){return[[e,t]]})).sort((function(t,e){return-(t[1].length-e[1].length)})),t.each(s,(function(t,e){var s=e[1];if(i.substr(r,s.length).toLowerCase()===s.toLowerCase())return o=e[0],r+=s.length,!1})),-1!==o)return o+1;throw"Unknown name at position "+r},k=function(){if(i.charAt(r)!==e.charAt(w))throw"Unexpected literal at position "+r;r++},w=0;w<e.length;w++)if(v)"'"!==e.charAt(w)||_("'")?k():v=!1;else switch(e.charAt(w)){case"d":g=y("d");break;case"D":b("D",h,u);break;case"o":m=y("o");break;case"m":f=y("m");break;case"M":f=b("M",c,d);break;case"y":p=y("y");break;case"@":p=(a=new Date(y("@"))).getFullYear(),f=a.getMonth()+1,g=a.getDate();break;case"!":p=(a=new Date((y("!")-this._ticksTo1970)/1e4)).getFullYear(),f=a.getMonth()+1,g=a.getDate();break;case"'":_("'")?k():v=!0;break;default:k()}if(r<i.length&&(o=i.substr(r),!/^\s+/.test(o)))throw"Extra/unparsed characters found in date: "+o;if(-1===p?p=(new Date).getFullYear():p<100&&(p+=(new Date).getFullYear()-(new Date).getFullYear()%100+(p<=l?0:-100)),-1<m)for(f=1,g=m;!(g<=(n=this._getDaysInMonth(p,f-1)));)f++,g-=n;if((a=this._daylightSavingAdjust(new Date(p,f-1,g))).getFullYear()!==p||a.getMonth()+1!==f||a.getDate()!==g)throw"Invalid date";return a},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*60*60*1e7,formatDate:function(t,e,i){if(!e)return"";function s(t,e,i){var s=""+e;if(u(t))for(;s.length<i;)s="0"+s;return s}function n(t,e,i,s){return(u(t)?s:i)[e]}var o,a=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,r=(i?i.dayNames:null)||this._defaults.dayNames,l=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,h=(i?i.monthNames:null)||this._defaults.monthNames,u=function(e){return(e=o+1<t.length&&t.charAt(o+1)===e)&&o++,e},c="",d=!1;if(e)for(o=0;o<t.length;o++)if(d)"'"!==t.charAt(o)||u("'")?c+=t.charAt(o):d=!1;else switch(t.charAt(o)){case"d":c+=s("d",e.getDate(),2);break;case"D":c+=n("D",e.getDay(),a,r);break;case"o":c+=s("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":c+=s("m",e.getMonth()+1,2);break;case"M":c+=n("M",e.getMonth(),l,h);break;case"y":c+=u("y")?e.getFullYear():(e.getFullYear()%100<10?"0":"")+e.getFullYear()%100;break;case"@":c+=e.getTime();break;case"!":c+=1e4*e.getTime()+this._ticksTo1970;break;case"'":u("'")?c+="'":d=!0;break;default:c+=t.charAt(o)}return c},_possibleChars:function(t){for(var e="",i=!1,s=function(e){return(e=n+1<t.length&&t.charAt(n+1)===e)&&n++,e},n=0;n<t.length;n++)if(i)"'"!==t.charAt(n)||s("'")?e+=t.charAt(n):i=!1;else switch(t.charAt(n)){case"d":case"m":case"y":case"@":e+="0123456789";break;case"D":case"M":return null;case"'":s("'")?e+="'":i=!0;break;default:e+=t.charAt(n)}return e},_get:function(t,e){return(void 0!==t.settings[e]?t.settings:this._defaults)[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),s=t.lastVal=t.input?t.input.val():null,n=this._getDefaultDate(t),o=n,a=this._getFormatConfig(t);try{o=this.parseDate(i,s,a)||n}catch(t){s=e?"":s}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=s?o.getDate():0,t.currentMonth=s?o.getMonth():0,t.currentYear=s?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,s){var n,o;return i=null==i||""===i?s:"string"==typeof i?function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(i){}for(var s=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,n=s.getFullYear(),o=s.getMonth(),a=s.getDate(),r=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,l=r.exec(i);l;){switch(l[2]||"d"){case"d":case"D":a+=parseInt(l[1],10);break;case"w":case"W":a+=7*parseInt(l[1],10);break;case"m":case"M":o+=parseInt(l[1],10),a=Math.min(a,t.datepicker._getDaysInMonth(n,o));break;case"y":case"Y":n+=parseInt(l[1],10),a=Math.min(a,t.datepicker._getDaysInMonth(n,o))}l=r.exec(i)}return new Date(n,o,a)}(i):"number"==typeof i?isNaN(i)?s:(n=i,(o=new Date).setDate(o.getDate()+n),o):new Date(i.getTime()),(i=i&&"Invalid Date"===i.toString()?s:i)&&(i.setHours(0),i.setMinutes(0),i.setSeconds(0),i.setMilliseconds(0)),this._daylightSavingAdjust(i)},_daylightSavingAdjust:function(t){return t?(t.setHours(12<t.getHours()?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var s=!e,n=t.selectedMonth,o=t.selectedYear;e=this._restrictMinMax(t,this._determineDate(t,e,new Date)),t.selectedDay=t.currentDay=e.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=e.getMonth(),t.drawYear=t.selectedYear=t.currentYear=e.getFullYear(),n===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(s?"":this._formatDate(t))},_getDate:function(t){return!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay))},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),s="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map((function(){var e={prev:function(){t.datepicker._adjustDate(s,-i,"M")},next:function(){t.datepicker._adjustDate(s,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(s)},selectDay:function(){return t.datepicker._selectDay(s,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(s,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(s,this,"Y"),!1}};t(this).on(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])}))},_generateHTML:function(e){var i,s,n,o,a,r,l,h,u,c,d,p,f,g,m,v,_,y,b,k,w,x,C,D,S,T,A,E,M,I,P,F,O=new Date,H=this._daylightSavingAdjust(new Date(O.getFullYear(),O.getMonth(),O.getDate())),N=this._get(e,"isRTL"),L=this._get(e,"showButtonPanel"),B=this._get(e,"hideIfNoPrevNext"),R=this._get(e,"navigationAsDateFormat"),z=this._getNumberOfMonths(e),j=this._get(e,"showCurrentAtPos"),W=(O=this._get(e,"stepMonths"),1!==z[0]||1!==z[1]),q=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),V=this._getMinMaxDate(e,"min"),$=this._getMinMaxDate(e,"max"),Y=e.drawMonth-j,U=e.drawYear;if(Y<0&&(Y+=12,U--),$)for(i=this._daylightSavingAdjust(new Date($.getFullYear(),$.getMonth()-z[0]*z[1]+1,$.getDate())),i=V&&i<V?V:i;this._daylightSavingAdjust(new Date(U,Y,1))>i;)--Y<0&&(Y=11,U--);for(e.drawMonth=Y,e.drawYear=U,j=this._get(e,"prevText"),j=R?this.formatDate(j,this._daylightSavingAdjust(new Date(U,Y-O,1)),this._getFormatConfig(e)):j,s=this._canAdjustMonth(e,-1,U,Y)?t("<a>").attr({class:"ui-datepicker-prev ui-corner-all","data-handler":"prev","data-event":"click",title:j}).append(t("<span>").addClass("ui-icon ui-icon-circle-triangle-"+(N?"e":"w")).text(j))[0].outerHTML:B?"":t("<a>").attr({class:"ui-datepicker-prev ui-corner-all ui-state-disabled",title:j}).append(t("<span>").addClass("ui-icon ui-icon-circle-triangle-"+(N?"e":"w")).text(j))[0].outerHTML,j=this._get(e,"nextText"),j=R?this.formatDate(j,this._daylightSavingAdjust(new Date(U,Y+O,1)),this._getFormatConfig(e)):j,n=this._canAdjustMonth(e,1,U,Y)?t("<a>").attr({class:"ui-datepicker-next ui-corner-all","data-handler":"next","data-event":"click",title:j}).append(t("<span>").addClass("ui-icon ui-icon-circle-triangle-"+(N?"w":"e")).text(j))[0].outerHTML:B?"":t("<a>").attr({class:"ui-datepicker-next ui-corner-all ui-state-disabled",title:j}).append(t("<span>").attr("class","ui-icon ui-icon-circle-triangle-"+(N?"w":"e")).text(j))[0].outerHTML,O=this._get(e,"currentText"),B=this._get(e,"gotoCurrent")&&e.currentDay?q:H,O=R?this.formatDate(O,B,this._getFormatConfig(e)):O,j="",e.inline||(j=t("<button>").attr({type:"button",class:"ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all","data-handler":"hide","data-event":"click"}).text(this._get(e,"closeText"))[0].outerHTML),R="",L&&(R=t("<div class='ui-datepicker-buttonpane ui-widget-content'>").append(N?j:"").append(this._isInRange(e,B)?t("<button>").attr({type:"button",class:"ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all","data-handler":"today","data-event":"click"}).text(O):"").append(N?"":j)[0].outerHTML),o=parseInt(this._get(e,"firstDay"),10),o=isNaN(o)?0:o,a=this._get(e,"showWeek"),r=this._get(e,"dayNames"),l=this._get(e,"dayNamesMin"),h=this._get(e,"monthNames"),u=this._get(e,"monthNamesShort"),c=this._get(e,"beforeShowDay"),d=this._get(e,"showOtherMonths"),p=this._get(e,"selectOtherMonths"),f=this._getDefaultDate(e),g="",v=0;v<z[0];v++){for(_="",this.maxRows=4,y=0;y<z[1];y++){if(b=this._daylightSavingAdjust(new Date(U,Y,e.selectedDay)),k=" ui-corner-all",w="",W){if(w+="<div class='ui-datepicker-group",1<z[1])switch(y){case 0:w+=" ui-datepicker-group-first",k=" ui-corner-"+(N?"right":"left");break;case z[1]-1:w+=" ui-datepicker-group-last",k=" ui-corner-"+(N?"left":"right");break;default:w+=" ui-datepicker-group-middle",k=""}w+="'>"}for(w+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+k+"'>"+(/all|left/.test(k)&&0===v?N?n:s:"")+(/all|right/.test(k)&&0===v?N?s:n:"")+this._generateMonthYearHeader(e,Y,U,V,$,0<v||0<y,h,u)+"</div><table class='ui-datepicker-calendar'><thead><tr>",x=a?"<th class='ui-datepicker-week-col'>"+this._get(e,"weekHeader")+"</th>":"",m=0;m<7;m++)x+="<th scope='col'"+(5<=(m+o+6)%7?" class='ui-datepicker-week-end'":"")+"><span title='"+r[C=(m+o)%7]+"'>"+l[C]+"</span></th>";for(w+=x+"</tr></thead><tbody>",S=this._getDaysInMonth(U,Y),U===e.selectedYear&&Y===e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,S)),D=(this._getFirstDayOfMonth(U,Y)-o+7)%7,S=Math.ceil((D+S)/7),T=W&&this.maxRows>S?this.maxRows:S,this.maxRows=T,A=this._daylightSavingAdjust(new Date(U,Y,1-D)),E=0;E<T;E++){for(w+="<tr>",M=a?"<td class='ui-datepicker-week-col'>"+this._get(e,"calculateWeek")(A)+"</td>":"",m=0;m<7;m++)I=c?c.apply(e.input?e.input[0]:null,[A]):[!0,""],F=(P=A.getMonth()!==Y)&&!p||!I[0]||V&&A<V||$&&$<A,M+="<td class='"+(5<=(m+o+6)%7?" ui-datepicker-week-end":"")+(P?" ui-datepicker-other-month":"")+(A.getTime()===b.getTime()&&Y===e.selectedMonth&&e._keyEvent||f.getTime()===A.getTime()&&f.getTime()===b.getTime()?" "+this._dayOverClass:"")+(F?" "+this._unselectableClass+" ui-state-disabled":"")+(P&&!d?"":" "+I[1]+(A.getTime()===q.getTime()?" "+this._currentClass:"")+(A.getTime()===H.getTime()?" ui-datepicker-today":""))+"'"+(P&&!d||!I[2]?"":" title='"+I[2].replace(/'/g,"&#39;")+"'")+(F?"":" data-handler='selectDay' data-event='click' data-month='"+A.getMonth()+"' data-year='"+A.getFullYear()+"'")+">"+(P&&!d?"&#xa0;":F?"<span class='ui-state-default'>"+A.getDate()+"</span>":"<a class='ui-state-default"+(A.getTime()===H.getTime()?" ui-state-highlight":"")+(A.getTime()===q.getTime()?" ui-state-active":"")+(P?" ui-priority-secondary":"")+"' href='#' aria-current='"+(A.getTime()===q.getTime()?"true":"false")+"' data-date='"+A.getDate()+"'>"+A.getDate()+"</a>")+"</td>",A.setDate(A.getDate()+1),A=this._daylightSavingAdjust(A);w+=M+"</tr>"}11<++Y&&(Y=0,U++),_+=w+="</tbody></table>"+(W?"</div>"+(0<z[0]&&y===z[1]-1?"<div class='ui-datepicker-row-break'></div>":""):"")}g+=_}return g+=R,e._keyEvent=!1,g},_generateMonthYearHeader:function(t,e,i,s,n,o,a,r){var l,h,u,c,d,p,f=this._get(t,"changeMonth"),g=this._get(t,"changeYear"),m=this._get(t,"showMonthAfterYear"),v=this._get(t,"selectMonthLabel"),_=this._get(t,"selectYearLabel"),y="<div class='ui-datepicker-title'>",b="";if(o||!f)b+="<span class='ui-datepicker-month'>"+a[e]+"</span>";else{for(l=s&&s.getFullYear()===i,h=n&&n.getFullYear()===i,b+="<select class='ui-datepicker-month' aria-label='"+v+"' data-handler='selectMonth' data-event='change'>",u=0;u<12;u++)(!l||u>=s.getMonth())&&(!h||u<=n.getMonth())&&(b+="<option value='"+u+"'"+(u===e?" selected='selected'":"")+">"+r[u]+"</option>");b+="</select>"}if(m||(y+=b+(!o&&f&&g?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!g)y+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(a=this._get(t,"yearRange").split(":"),c=(new Date).getFullYear(),d=(v=function(t){return t=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?c+parseInt(t,10):parseInt(t,10),isNaN(t)?c:t})(a[0]),p=Math.max(d,v(a[1]||"")),d=s?Math.max(d,s.getFullYear()):d,p=n?Math.min(p,n.getFullYear()):p,t.yearshtml+="<select class='ui-datepicker-year' aria-label='"+_+"' data-handler='selectYear' data-event='change'>";d<=p;d++)t.yearshtml+="<option value='"+d+"'"+(d===i?" selected='selected'":"")+">"+d+"</option>";t.yearshtml+="</select>",y+=t.yearshtml,t.yearshtml=null}return y+=this._get(t,"yearSuffix"),m&&(y+=(!o&&f&&g?"":"&#xa0;")+b),y+"</div>"},_adjustInstDate:function(t,e,i){var s=t.selectedYear+("Y"===i?e:0),n=t.selectedMonth+("M"===i?e:0);e=Math.min(t.selectedDay,this._getDaysInMonth(s,n))+("D"===i?e:0),e=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(s,n,e))),t.selectedDay=e.getDate(),t.drawMonth=t.selectedMonth=e.getMonth(),t.drawYear=t.selectedYear=e.getFullYear(),"M"!==i&&"Y"!==i||this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min");return e=i&&e<i?i:e,(t=this._getMinMaxDate(t,"max"))&&t<e?t:e},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){return null==(t=this._get(t,"numberOfMonths"))?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,s){var n=this._getNumberOfMonths(t);return n=this._daylightSavingAdjust(new Date(i,s+(e<0?e:n[0]*n[1]),1)),e<0&&n.setDate(this._getDaysInMonth(n.getFullYear(),n.getMonth())),this._isInRange(t,n)},_isInRange:function(t,e){var i=this._getMinMaxDate(t,"min"),s=this._getMinMaxDate(t,"max"),n=null,o=null,a=this._get(t,"yearRange");return a&&(t=a.split(":"),a=(new Date).getFullYear(),n=parseInt(t[0],10),o=parseInt(t[1],10),t[0].match(/[+\-].*/)&&(n+=a),t[1].match(/[+\-].*/)&&(o+=a)),(!i||e.getTime()>=i.getTime())&&(!s||e.getTime()<=s.getTime())&&(!n||e.getFullYear()>=n)&&(!o||e.getFullYear()<=o)},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return{shortYearCutoff:e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,s){return e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear),e=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(s,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay)),this.formatDate(this._get(t,"dateFormat"),e,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).on("mousedown",t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"==typeof e&&("isDisabled"===e||"getDate"===e||"widget"===e)||"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each((function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}))},t.datepicker=new T,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.13.1",t.datepicker,t.widget("ui.dialog",{version:"1.13.1",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var i=t(this).css(e).offset().top;i<0&&t(this).css("top",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),(t=e.parent.children().eq(e.index)).length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:t.noop,enable:t.noop,close:function(e){var i=this;this._isOpen&&!1!==this._trigger("beforeClose",e)&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,(function(){i._trigger("close",e)})))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,i){var s=!1,n=this.uiDialog.siblings(".ui-front:visible").map((function(){return+t(this).css("z-index")})).get();return(n=Math.max.apply(null,n))>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",n+1),s=!0),s&&!i&&this._trigger("focus",e),s},open:function(){var e=this;this._isOpen?this._moveToTop()&&this._focusTabbable():(this._isOpen=!0,this.opener=t(t.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,(function(){e._focusTabbable(),e._trigger("focus")})),this._makeFocusTarget(),this._trigger("open"))},_focusTabbable:function(){var t=this._focusedElement;(t=(t=(t=(t=(t=t||this.element.find("[autofocus]")).length?t:this.element.find(":tabbable")).length?t:this.uiDialogButtonPane.find(":tabbable")).length?t:this.uiDialogTitlebarClose.filter(":tabbable")).length?t:this.uiDialog).eq(0).trigger("focus")},_restoreTabbableFocus:function(){var e=t.ui.safeActiveElement(this.document[0]);this.uiDialog[0]===e||t.contains(this.uiDialog[0],e)||this._focusTabbable()},_keepFocus:function(t){t.preventDefault(),this._restoreTabbableFocus(),this._delay(this._restoreTabbableFocus)},_createWrapper:function(){this.uiDialog=t("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),void this.close(e);var i,s,n;e.keyCode!==t.ui.keyCode.TAB||e.isDefaultPrevented()||(i=this.uiDialog.find(":tabbable"),s=i.first(),n=i.last(),e.target!==n[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==s[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay((function(){n.trigger("focus")})),e.preventDefault()):(this._delay((function(){s.trigger("focus")})),e.preventDefault()))},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus")}}),this.uiDialogTitlebarClose=t("<button type='button'></button>").button({label:t("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(e,"ui-dialog-title"),this._title(e),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":e.attr("id")})},_title:function(t){this.options.title?t.text(this.options.title):t.html("&#160;")},_createButtonPane:function(){this.uiDialogButtonPane=t("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||Array.isArray(i)&&!i.length?this._removeClass(this.uiDialog,"ui-dialog-buttons"):(t.each(i,(function(i,s){var n;s=t.extend({type:"button"},s="function"==typeof s?{click:s,text:i}:s),n=s.click,i={icon:s.icon,iconPosition:s.iconPosition,showLabel:s.showLabel,icons:s.icons,text:s.text},delete s.click,delete s.icon,delete s.iconPosition,delete s.showLabel,delete s.icons,"boolean"==typeof s.text&&delete s.text,t("<button></button>",s).button(i).appendTo(e.uiButtonSet).on("click",(function(){n.apply(e.element[0],arguments)}))})),this._addClass(this.uiDialog,"ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){var e=this,i=this.options;function s(t){return{position:t.position,offset:t.offset}}this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(i,n){e._addClass(t(this),"ui-dialog-dragging"),e._blockFrames(),e._trigger("dragStart",i,s(n))},drag:function(t,i){e._trigger("drag",t,s(i))},stop:function(n,o){var a=o.offset.left-e.document.scrollLeft(),r=o.offset.top-e.document.scrollTop();i.position={my:"left top",at:"left"+(0<=a?"+":"")+a+" top"+(0<=r?"+":"")+r,of:e.window},e._removeClass(t(this),"ui-dialog-dragging"),e._unblockFrames(),e._trigger("dragStop",n,s(o))}})},_makeResizable:function(){var e=this,i=this.options,s=i.resizable,n=this.uiDialog.css("position");function o(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}s="string"==typeof s?s:"n,e,s,w,se,sw,ne,nw",this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:i.maxWidth,maxHeight:i.maxHeight,minWidth:i.minWidth,minHeight:this._minHeight(),handles:s,start:function(i,s){e._addClass(t(this),"ui-dialog-resizing"),e._blockFrames(),e._trigger("resizeStart",i,o(s))},resize:function(t,i){e._trigger("resize",t,o(i))},stop:function(s,n){var a=(r=e.uiDialog.offset()).left-e.document.scrollLeft(),r=r.top-e.document.scrollTop();i.height=e.uiDialog.height(),i.width=e.uiDialog.width(),i.position={my:"left top",at:"left"+(0<=a?"+":"")+a+" top"+(0<=r?"+":"")+r,of:e.window},e._removeClass(t(this),"ui-dialog-resizing"),e._unblockFrames(),e._trigger("resizeStop",s,o(n))}}).css("position",n)},_trackFocus:function(){this._on(this.widget(),{focusin:function(e){this._makeFocusTarget(),this._focusedElement=t(e.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1)},_trackingInstances:function(){var t=this.document.data("ui-dialog-instances");return t||this.document.data("ui-dialog-instances",t=[]),t},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(e){var i=this,s=!1,n={};t.each(e,(function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(s=!0),t in i.resizableRelatedOptions&&(n[t]=e)})),s&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",n)},_setOption:function(e,i){var s,n=this.uiDialog;"disabled"!==e&&(this._super(e,i),"appendTo"===e&&this.uiDialog.appendTo(this._appendTo()),"buttons"===e&&this._createButtons(),"closeText"===e&&this.uiDialogTitlebarClose.button({label:t("<a>").text(""+this.options.closeText).html()}),"draggable"===e&&((s=n.is(":data(ui-draggable)"))&&!i&&n.draggable("destroy"),!s&&i&&this._makeDraggable()),"position"===e&&this._position(),"resizable"===e&&((s=n.is(":data(ui-resizable)"))&&!i&&n.resizable("destroy"),s&&"string"==typeof i&&n.resizable("option","handles",i),s||!1===i||this._makeResizable()),"title"===e&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,s=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),s.minWidth>s.width&&(s.width=s.minWidth),t=this.uiDialog.css({height:"auto",width:s.width}).outerHeight(),e=Math.max(0,s.minHeight-t),i="number"==typeof s.maxHeight?Math.max(0,s.maxHeight-t):"none","auto"===s.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,s.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map((function(){var e=t(this);return t("<div>").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]}))},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return!!t(e.target).closest(".ui-dialog").length||!!t(e.target).closest(".ui-datepicker").length},_createOverlay:function(){var e,i;this.options.modal&&(e=t.fn.jquery.substring(0,4),i=!0,this._delay((function(){i=!1})),this.document.data("ui-dialog-overlays")||this.document.on("focusin.ui-dialog",function(t){var s;i||(s=this._trackingInstances()[0])._allowInteraction(t)||(t.preventDefault(),s._focusTabbable(),"3.4."!==e&&"3.5."!==e||s._delay(s._restoreTabbableFocus))}.bind(this)),this.overlay=t("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1))},_destroyOverlay:function(){var t;this.options.modal&&this.overlay&&((t=this.document.data("ui-dialog-overlays")-1)?this.document.data("ui-dialog-overlays",t):(this.document.off("focusin.ui-dialog"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null)}}),!1!==t.uiBackCompat&&t.widget("ui.dialog",t.ui.dialog,{options:{dialogClass:""},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(t,e){"dialogClass"===t&&this.uiDialog.removeClass(this.options.dialogClass).addClass(e),this._superApply(arguments)}}),t.ui.dialog,t.widget("ui.progressbar",{version:"1.13.1",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=t("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue()},_destroy:function(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove()},value:function(t){if(void 0===t)return this.options.value;this.options.value=this._constrainedValue(t),this._refreshValue()},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=!1===t,"number"!=typeof t&&(t=0),!this.indeterminate&&Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){"max"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).width(i.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,e===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),e===this.options.max&&this._trigger("complete")}}),t.widget("ui.selectmenu",[t.ui.formResetMixin,{version:"1.13.1",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var e=this.element.uniqueId().attr("id");this.ids={element:e,button:e+"-button",menu:e+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=t()},_drawButton:function(){var e,i=this,s=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function(t){this.button.trigger("focus"),t.preventDefault()}}),this.element.hide(),this.button=t("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),e=t("<span>").appendTo(this.button),this._addClass(e,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(s).appendTo(this.button),!1!==this.options.width&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",(function(){i._rendered||i._refreshMenu()}))},_drawMenu:function(){var e=this;this.menu=t("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=t("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data("ui-selectmenu-item"),t)},focus:function(t,i){i=i.item.data("ui-selectmenu-item"),null!=e.focusIndex&&i.index!==e.focusIndex&&(e._trigger("focus",t,{item:i}),e.isOpen||e._select(i,t)),e.focusIndex=i.index,e.button.attr("aria-activedescendant",e.menuItems.eq(i.index).attr("id"))}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var t=this.element.find("option");this.menu.empty(),this._parseOptions(t),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,t.length&&(t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(t){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t)))},_position:function(){this.menuWrap.position(t.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(e){var i=t("<span>");return this._setText(i,e.label),this._addClass(i,"ui-selectmenu-text"),i},_renderMenu:function(e,i){var s=this,n="";t.each(i,(function(i,o){var a;o.optgroup!==n&&(a=t("<li>",{text:o.optgroup}),s._addClass(a,"ui-selectmenu-optgroup","ui-menu-divider"+(o.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),a.appendTo(e),n=o.optgroup),s._renderItemData(e,o)}))},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e)},_renderItem:function(e,i){var s=t("<li>"),n=t("<div>",{title:i.element.attr("title")});return i.disabled&&this._addClass(s,null,"ui-state-disabled"),this._setText(n,i.label),s.append(n).appendTo(e)},_setText:function(t,e){e?t.text(e):t.html("&#160;")},_move:function(t,e){var i,s=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),s+=":not(.ui-state-disabled)"),(s="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](s).eq(-1):i[t+"All"](s).eq(0)).length&&this.menuInstance.focus(e,s)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li")},_toggle:function(t){this[this.isOpen?"close":"open"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?((t=window.getSelection()).removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(e){this.isOpen&&(t(e.target).closest(".ui-selectmenu-menu, #"+t.escapeSelector(this.ids.button)).length||this.close(e))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection()).rangeCount&&(this.range=t.getRangeAt(0)):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move("prev",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move("next",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move("prev",e);break;case t.ui.keyCode.RIGHT:this._move("next",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move("first",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move("last",e);break;default:this.menu.trigger(e),i=!1}i&&e.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex).parent("li");e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(t)),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e)},_setAria:function(t){t=this.menuItems.eq(t.index).attr("id"),this.button.attr({"aria-labelledby":t,"aria-activedescendant":t}),this.menu.attr("aria-activedescendant",t)},_setOption:function(t,e){var i;"icons"===t&&(i=this.button.find("span.ui-icon"),this._removeClass(i,null,this.options.icons.button)._addClass(i,null,e.button)),this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"width"===t&&this._resizeButton()},_setOptionDisabled:function(t){this._super(t),this.menuInstance.option("disabled",t),this.button.attr("aria-disabled",t),this._toggleClass(this.button,null,"ui-state-disabled",t),this.element.prop("disabled",t),t?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)},_appendTo:function(){var e=this.options.appendTo;return(e=(e=e&&(e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)))&&e[0]?e:this.element.closest(".ui-front, dialog")).length?e:this.document[0].body},_toggleAttr:function(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var t=this.options.width;!1!==t?(null===t&&(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t)):this.button.css("width","")},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){var t=this._super();return t.disabled=this.element.prop("disabled"),t},_parseOptions:function(e){var i=this,s=[];e.each((function(e,n){n.hidden||s.push(i._parseOption(t(n),e))})),this.items=s},_parseOption:function(t,e){var i=t.parent("optgroup");return{element:t,index:e,value:t.val(),label:t.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||t.prop("disabled")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element)}}]),t.widget("ui.slider",t.ui.mouse,{version:"1.13.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i=this.options,s=this.element.find(".ui-slider-handle"),n=[],o=i.values&&i.values.length||1;for(s.length>o&&(s.slice(o).remove(),s=s.slice(0,o)),e=s.length;e<o;e++)n.push("<span tabindex='0'></span>");this.handles=s.add(t(n.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each((function(e){t(this).data("ui-slider-handle-index",e).attr("tabIndex",0)}))},_createRange:function(){var e=this.options;e.range?(!0===e.range&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:Array.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=t("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),"min"!==e.range&&"max"!==e.range||this._addClass(this.range,"ui-slider-range-"+e.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(e){var i,s,n,o,a,r,l=this,h=this.options;return!h.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),r={x:e.pageX,y:e.pageY},i=this._normValueFromMouse(r),s=this._valueMax()-this._valueMin()+1,this.handles.each((function(e){var a=Math.abs(i-l.values(e));(a<s||s===a&&(e===l._lastChangedValue||l.values(e)===h.min))&&(s=a,n=t(this),o=e)})),!1!==this._start(e,o)&&(this._mouseSliding=!0,this._handleIndex=o,this._addClass(n,null,"ui-state-active"),n.trigger("focus"),a=n.offset(),r=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=r?{left:0,top:0}:{left:e.pageX-a.left-n.width()/2,top:e.pageY-a.top-n.height()/2-(parseInt(n.css("borderTopWidth"),10)||0)-(parseInt(n.css("borderBottomWidth"),10)||0)+(parseInt(n.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,o,i),this._animateOff=!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY};return e=this._normValueFromMouse(e),this._slide(t,this._handleIndex,e),!1},_mouseStop:function(t){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e;return(t=1<(t=(t="horizontal"===this.orientation?(e=this.elementSize.width,t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)))/e)?1:t)<0&&(t=0),"vertical"===this.orientation&&(t=1-t),e=this._valueMax()-this._valueMin(),e=this._valueMin()+t*e,this._trimAlignValue(e)},_uiHash:function(t,e,i){var s={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(s.value=void 0!==e?e:this.values(t),s.values=i||this.values()),s},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(t,e){return this._trigger("start",t,this._uiHash(e))},_slide:function(t,e,i){var s,n=this.value(),o=this.values();this._hasMultipleValues()&&(s=this.values(e?0:1),n=this.values(e),2===this.options.values.length&&!0===this.options.range&&(i=0===e?Math.min(s,i):Math.max(s,i)),o[e]=i),i!==n&&!1!==this._trigger("slide",t,this._uiHash(e,i,o))&&(this._hasMultipleValues()?this.values(e,i):this.value(i))},_stop:function(t,e){this._trigger("stop",t,this._uiHash(e))},_change:function(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger("change",t,this._uiHash(e)))},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),void this._change(null,0)):this._value()},values:function(t,e){var i,s,n;if(1<arguments.length)return this.options.values[t]=this._trimAlignValue(e),this._refreshValue(),void this._change(null,t);if(!arguments.length)return this._values();if(!Array.isArray(t))return this._hasMultipleValues()?this._values(t):this.value();for(i=this.options.values,s=t,n=0;n<i.length;n+=1)i[n]=this._trimAlignValue(s[n]),this._change(null,n);this._refreshValue()},_setOption:function(t,e){var i,s=0;switch("range"===t&&!0===this.options.range&&("min"===e?(this.options.value=this._values(0),this.options.values=null):"max"===e&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),Array.isArray(this.options.values)&&(s=this.options.values.length),this._super(t,e),t){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(e),this.handles.css("horizontal"===e?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),i=s-1;0<=i;i--)this._change(null,i);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(t){this._super(t),this._toggleClass(null,"ui-state-disabled",!!t)},_value:function(){var t=this.options.value;return this._trimAlignValue(t)},_values:function(t){var e,i;if(arguments.length)return t=this.options.values[t],this._trimAlignValue(t);if(this._hasMultipleValues()){for(e=this.options.values.slice(),i=0;i<e.length;i+=1)e[i]=this._trimAlignValue(e[i]);return e}return[]},_trimAlignValue:function(t){if(t<=this._valueMin())return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=0<this.options.step?this.options.step:1,i=(t-this._valueMin())%e;return t-=i,2*Math.abs(i)>=e&&(t+=0<i?e:-e),parseFloat(t.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step;(t=Math.round((t-e)/i)*i+e)>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min?Math.max(t,this._precisionOf(this.options.min)):t},_precisionOf:function(t){var e=t.toString();return-1===(t=e.indexOf("."))?0:e.length-t-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(t){"vertical"===t&&this.range.css({width:"",left:""}),"horizontal"===t&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var e,i,s,n,o,a=this.options.range,r=this.options,l=this,h=!this._animateOff&&r.animate,u={};this._hasMultipleValues()?this.handles.each((function(s){i=(l.values(s)-l._valueMin())/(l._valueMax()-l._valueMin())*100,u["horizontal"===l.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[h?"animate":"css"](u,r.animate),!0===l.options.range&&("horizontal"===l.orientation?(0===s&&l.range.stop(1,1)[h?"animate":"css"]({left:i+"%"},r.animate),1===s&&l.range[h?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:r.animate})):(0===s&&l.range.stop(1,1)[h?"animate":"css"]({bottom:i+"%"},r.animate),1===s&&l.range[h?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:r.animate}))),e=i})):(s=this.value(),n=this._valueMin(),o=this._valueMax(),i=o!==n?(s-n)/(o-n)*100:0,u["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[h?"animate":"css"](u,r.animate),"min"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:i+"%"},r.animate),"max"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:100-i+"%"},r.animate),"min"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:i+"%"},r.animate),"max"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:100-i+"%"},r.animate))},_handleEvents:{keydown:function(e){var i,s,n,o=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(t(e.target),null,"ui-state-active"),!1===this._start(e,o)))return}switch(n=this.options.step,i=s=this._hasMultipleValues()?this.values(o):this.value(),e.keyCode){case t.ui.keyCode.HOME:s=this._valueMin();break;case t.ui.keyCode.END:s=this._valueMax();break;case t.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+n);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-n)}this._slide(e,o,s)},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),this._removeClass(t(e.target),null,"ui-state-active"))}}}),t.widget("ui.spinner",{version:"1.13.1",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var e=this._super(),i=this.element;return t.each(["min","max","step"],(function(t,s){var n=i.attr(s);null!=n&&n.length&&(e[s]=n)})),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){this.cancelBlur?delete this.cancelBlur:(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger("change",t))},mousewheel:function(e,i){var s=t.ui.safeActiveElement(this.document[0]);if(this.element[0]===s&&i){if(!this.spinning&&!this._start(e))return!1;this._spin((0<i?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay((function(){this.spinning&&this._stop(e)}),100),e.preventDefault()}},"mousedown .ui-spinner-button":function(e){var i;function s(){this.element[0]===t.ui.safeActiveElement(this.document[0])||(this.element.trigger("focus"),this.previous=i,this._delay((function(){this.previous=i})))}i=this.element[0]===t.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),e.preventDefault(),s.call(this),this.cancelBlur=!0,this._delay((function(){delete this.cancelBlur,s.call(this)})),!1!==this._start(e)&&this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(e){if(t(e.currentTarget).hasClass("ui-state-active"))return!1!==this._start(e)&&void this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseleave .ui-spinner-button":"_stop"},_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&0<this.uiSpinner.height()&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(e){var i=this.options,s=t.ui.keyCode;switch(e.keyCode){case s.UP:return this._repeat(null,1,e),!0;case s.DOWN:return this._repeat(null,-1,e),!0;case s.PAGE_UP:return this._repeat(null,i.page,e),!0;case s.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_start:function(t){return!(!this.spinning&&!1===this._trigger("start",t))&&(this.counter||(this.counter=1),this.spinning=!0)},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay((function(){this._repeat(40,e,i)}),t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&!1===this._trigger("spin",e,{value:i})||(this._value(i),this.counter++)},_increment:function(t){var e=this.options.incremental;return e?"function"==typeof e?e(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min?Math.max(t,this._precisionOf(this.options.min)):t},_precisionOf:function(t){var e=t.toString();return-1===(t=e.indexOf("."))?0:e.length-t-1},_adjustValue:function(t){var e=this.options,i=null!==e.min?e.min:0,s=t-i;return t=i+Math.round(s/e.step)*e.step,t=parseFloat(t.toFixed(this._precision())),null!==e.max&&t>e.max?e.max:null!==e.min&&t<e.min?e.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){var i;if("culture"===t||"numberFormat"===t)return i=this._parse(this.element.val()),this.options[t]=e,void this.element.val(this._format(i));"max"!==t&&"min"!==t&&"step"!==t||"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(i=this.buttons.first().find(".ui-icon"),this._removeClass(i,null,this.options.icons.up),this._addClass(i,null,e.up),i=this.buttons.last().find(".ui-icon"),this._removeClass(i,null,this.options.icons.down),this._addClass(i,null,e.down)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!t),this.element.prop("disabled",!!t),this.buttons.button(t?"disable":"enable")},_setOptions:I((function(t){this._super(t)})),_parse:function(t){return""===(t="string"==typeof t&&""!==t?window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t:t)||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null!==t&&t===this._adjustValue(t)},_value:function(t,e){var i;""!==t&&null!==(i=this._parse(t))&&(e||(i=this._adjustValue(i)),t=this._format(i)),this.element.val(t),this._refresh()},_destroy:function(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:I((function(t){this._stepUp(t)})),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:I((function(t){this._stepDown(t)})),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:I((function(t){this._stepUp((t||1)*this.options.page)})),pageDown:I((function(t){this._stepDown((t||1)*this.options.page)})),value:function(t){if(!arguments.length)return this._parse(this.element.val());I(this._value).call(this,t)},widget:function(){return this.uiSpinner}}),!1!==t.uiBackCompat&&t.widget("ui.spinner",t.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return"<span>"},_buttonHtml:function(){return"<a></a><a></a>"}}),t.ui.spinner,t.widget("ui.tabs",{version:"1.13.1",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:(D=/#.*$/,function(t){var e=t.href.replace(D,""),i=location.href.replace(D,"");try{e=decodeURIComponent(e)}catch(t){}try{i=decodeURIComponent(i)}catch(t){}return 1<t.hash.length&&e===i}),_create:function(){var e=this,i=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),Array.isArray(i.disabled)&&(i.disabled=t.uniqueSort(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),(function(t){return e.tabs.index(t)})))).sort()),!1!==this.options.active&&this.anchors.length?this.active=this._findActive(i.active):this.active=t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var e=this.options.active,i=this.options.collapsible,s=location.hash.substring(1);return null===e&&(s&&this.tabs.each((function(i,n){if(t(n).attr("aria-controls")===s)return e=i,!1})),null!==(e=null===e?this.tabs.index(this.tabs.filter(".ui-tabs-active")):e)&&-1!==e||(e=!!this.tabs.length&&0)),!1!==e&&-1===(e=this.tabs.index(this.tabs.eq(e)))&&(e=!i&&0),e=!i&&!1===e&&this.anchors.length?0:e},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(e){var i=t(t.ui.safeActiveElement(this.document[0])).closest("li"),s=this.tabs.index(i),n=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:s++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:n=!1,s--;break;case t.ui.keyCode.END:s=this.anchors.length-1;break;case t.ui.keyCode.HOME:s=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),void this._activate(s);case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),void this._activate(s!==this.options.active&&s);default:return}e.preventDefault(),clearTimeout(this.activating),s=this._focusNextTab(s,n),e.ctrlKey||e.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(s).attr("aria-selected","true"),this.activating=this._delay((function(){this.option("active",s)}),this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.trigger("focus"))},_handlePageNav:function(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(e,i){for(var s=this.tabs.length-1;-1!==t.inArray(e=(e=s<e?0:e)<0?s:e,this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).trigger("focus"),t},_setOption:function(t,e){"active"!==t?(this._super(t,e),"collapsible"===t&&(this._toggleClass("ui-tabs-collapsible",null,e),e||!1!==this.options.active||this._activate(0)),"event"===t&&this._setupEvents(e),"heightStyle"===t&&this._setupHeightStyle(e)):this._activate(e)},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),(function(t){return i.index(t)})),this._processTabs(),!1!==e.active&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this,i=this.tabs,s=this.anchors,n=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",(function(e){t(this).is(".ui-state-disabled")&&e.preventDefault()})).on("focus"+this.eventNamespace,".ui-tabs-anchor",(function(){t(this).closest("li").is(".ui-state-disabled")&&this.blur()})),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map((function(){return t("a",this)[0]})).attr({tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=t(),this.anchors.each((function(i,s){var n,o,a,r=t(s).uniqueId().attr("id"),l=t(s).closest("li"),h=l.attr("aria-controls");e._isLocal(s)?(a=(n=s.hash).substring(1),o=e.element.find(e._sanitizeSelector(n))):(a=l.attr("aria-controls")||t({}).uniqueId()[0].id,(o=e.element.find(n="#"+a)).length||(o=e._createPanel(a)).insertAfter(e.panels[i-1]||e.tablist),o.attr("aria-live","polite")),o.length&&(e.panels=e.panels.add(o)),h&&l.data("ui-tabs-aria-controls",h),l.attr({"aria-controls":a,"aria-labelledby":r}),o.attr("aria-labelledby",r)})),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),i&&(this._off(i.not(this.tabs)),this._off(s.not(this.anchors)),this._off(n.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0)},_createPanel:function(e){return t("<div>").attr("id",e).data("ui-tabs-destroy",!0)},_setOptionDisabled:function(e){var i,s;for(Array.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1),s=0;i=this.tabs[s];s++)i=t(i),!0===e||-1!==t.inArray(s,e)?(i.attr("aria-disabled","true"),this._addClass(i,null,"ui-state-disabled")):(i.removeAttr("aria-disabled"),this._removeClass(i,null,"ui-state-disabled"));this.options.disabled=e,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!0===e)},_setupEvents:function(e){var i={};e&&t.each(e.split(" "),(function(t,e){i[e]="_eventHandler"})),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,s=this.element.parent();"fill"===e?(i=s.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each((function(){var e=t(this),s=e.css("position");"absolute"!==s&&"fixed"!==s&&(i-=e.outerHeight(!0))})),this.element.children().not(this.panels).each((function(){i-=t(this).outerHeight(!0)})),this.panels.each((function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))})).css("overflow","auto")):"auto"===e&&(i=0,this.panels.each((function(){i=Math.max(i,t(this).height("").height())})).height(i))},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget).closest("li"),o=n[0]===s[0],a=o&&i.collapsible,r=a?t():this._getPanelForTab(n),l=s.length?this._getPanelForTab(s):t();s={oldTab:s,oldPanel:l,newTab:a?t():n,newPanel:r},e.preventDefault(),n.hasClass("ui-state-disabled")||n.hasClass("ui-tabs-loading")||this.running||o&&!i.collapsible||!1===this._trigger("beforeActivate",e,s)||(i.active=!a&&this.tabs.index(n),this.active=o?t():n,this.xhr&&this.xhr.abort(),l.length||r.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),r.length&&this.load(this.tabs.index(n),e),this._toggle(e,s))},_toggle:function(e,i){var s=this,n=i.newPanel,o=i.oldPanel;function a(){s.running=!1,s._trigger("activate",e,i)}function r(){s._addClass(i.newTab.closest("li"),"ui-tabs-active","ui-state-active"),n.length&&s.options.show?s._show(n,s.options.show,a):(n.show(),a())}this.running=!0,o.length&&this.options.hide?this._hide(o,this.options.hide,(function(){s._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),r()})):(this._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),o.hide(),r()),o.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),n.length&&o.length?i.oldTab.attr("tabIndex",-1):n.length&&this.tabs.filter((function(){return 0===t(this).attr("tabIndex")})).attr("tabIndex",-1),n.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(e){(e=this._findActive(e))[0]!==this.active[0]&&(e=(e=e.length?e:this.active).find(".ui-tabs-anchor")[0],this._eventHandler({target:e,currentTarget:e,preventDefault:t.noop}))},_findActive:function(e){return!1===e?t():this.tabs.eq(e)},_getIndex:function(e){return"string"==typeof e?this.anchors.index(this.anchors.filter("[href$='"+t.escapeSelector(e)+"']")):e},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each((function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")})),this.tabs.each((function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls")})),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(e){var i=this.options.disabled;!1!==i&&(i=void 0!==e&&(e=this._getIndex(e),Array.isArray(i)?t.map(i,(function(t){return t!==e?t:null})):t.map(this.tabs,(function(t,i){return i!==e?i:null}))),this._setOptionDisabled(i))},disable:function(e){var i=this.options.disabled;if(!0!==i){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=Array.isArray(i)?t.merge([e],i).sort():[e]}this._setOptionDisabled(i)}},load:function(e,i){function s(t,e){"abort"===e&&n.panels.stop(!1,!0),n._removeClass(o,"ui-tabs-loading"),a.removeAttr("aria-busy"),t===n.xhr&&delete n.xhr}e=this._getIndex(e);var n=this,o=this.tabs.eq(e),a=(e=o.find(".ui-tabs-anchor"),this._getPanelForTab(o)),r={tab:o,panel:a};this._isLocal(e[0])||(this.xhr=t.ajax(this._ajaxSettings(e,i,r)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(o,"ui-tabs-loading"),a.attr("aria-busy","true"),this.xhr.done((function(t,e,o){setTimeout((function(){a.html(t),n._trigger("load",i,r),s(o,e)}),1)})).fail((function(t,e){setTimeout((function(){s(t,e)}),1)}))))},_ajaxSettings:function(e,i,s){var n=this;return{url:e.attr("href").replace(/#.*$/,""),beforeSend:function(e,o){return n._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:o},s))}}},_getPanelForTab:function(e){return e=t(e).attr("aria-controls"),this.element.find(this._sanitizeSelector("#"+e))}}),!1!==t.uiBackCompat&&t.widget("ui.tabs",t.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab")}}),t.ui.tabs,t.widget("ui.tooltip",{version:"1.13.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var e=t(this).attr("title");return t("<a>").text(e).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(t,e){var i=(t.attr("aria-describedby")||"").split(/\s+/);i.push(e),t.data("ui-tooltip-id",e).attr("aria-describedby",String.prototype.trim.call(i.join(" ")))},_removeDescribedBy:function(e){var i=e.data("ui-tooltip-id"),s=(e.attr("aria-describedby")||"").split(/\s+/);-1!==(i=t.inArray(i,s))&&s.splice(i,1),e.removeData("ui-tooltip-id"),(s=String.prototype.trim.call(s.join(" ")))?e.attr("aria-describedby",s):e.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=t("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=t([])},_setOption:function(e,i){var s=this;this._super(e,i),"content"===e&&t.each(this.tooltips,(function(t,e){s._updateContent(e.element)}))},_setOptionDisabled:function(t){this[t?"_disable":"_enable"]()},_disable:function(){var e=this;t.each(this.tooltips,(function(i,s){var n=t.Event("blur");n.target=n.currentTarget=s.element[0],e.close(n,!0)})),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter((function(){var e=t(this);if(e.is("[title]"))return e.data("ui-tooltip-title",e.attr("title")).removeAttr("title")})))},_enable:function(){this.disabledTitles.each((function(){var e=t(this);e.data("ui-tooltip-title")&&e.attr("title",e.data("ui-tooltip-title"))})),this.disabledTitles=t([])},open:function(e){var i=this,s=t(e?e.target:this.element).closest(this.options.items);s.length&&!s.data("ui-tooltip-id")&&(s.attr("title")&&s.data("ui-tooltip-title",s.attr("title")),s.data("ui-tooltip-open",!0),e&&"mouseover"===e.type&&s.parents().each((function(){var e,s=t(this);s.data("ui-tooltip-open")&&((e=t.Event("blur")).target=e.currentTarget=this,i.close(e,!0)),s.attr("title")&&(s.uniqueId(),i.parents[this.id]={element:this,title:s.attr("title")},s.attr("title",""))})),this._registerCloseHandlers(e,s),this._updateContent(s,e))},_updateContent:function(t,e){var i=this.options.content,s=this,n=e?e.type:null;if("string"==typeof i||i.nodeType||i.jquery)return this._open(e,t,i);(i=i.call(t[0],(function(i){s._delay((function(){t.data("ui-tooltip-open")&&(e&&(e.type=n),this._open(e,t,i))}))})))&&this._open(e,t,i)},_open:function(e,i,s){var n,o,a,r=t.extend({},this.options.position);function l(t){r.of=t,o.is(":hidden")||o.position(r)}s&&((n=this._find(i))?n.tooltip.find(".ui-tooltip-content").html(s):(i.is("[title]")&&(e&&"mouseover"===e.type?i.attr("title",""):i.removeAttr("title")),n=this._tooltip(i),o=n.tooltip,this._addDescribedBy(i,o.attr("id")),o.find(".ui-tooltip-content").html(s),this.liveRegion.children().hide(),(s=t("<div>").html(o.find(".ui-tooltip-content").html())).removeAttr("name").find("[name]").removeAttr("name"),s.removeAttr("id").find("[id]").removeAttr("id"),s.appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:l}),l(e)):o.position(t.extend({of:i},this.options.position)),o.hide(),this._show(o,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(a=this.delayedShow=setInterval((function(){o.is(":visible")&&(l(r.of),clearInterval(a))}),13)),this._trigger("open",e,{tooltip:o})))},_registerCloseHandlers:function(e,i){var s={keyup:function(e){e.keyCode===t.ui.keyCode.ESCAPE&&((e=t.Event(e)).currentTarget=i[0],this.close(e,!0))}};i[0]!==this.element[0]&&(s.remove=function(){var t=this._find(i);t&&this._removeTooltip(t.tooltip)}),e&&"mouseover"!==e.type||(s.mouseleave="close"),e&&"focusin"!==e.type||(s.focusout="close"),this._on(!0,i,s)},close:function(e){var i,s=this,n=t(e?e.currentTarget:this.element),o=this._find(n);o?(i=o.tooltip,o.closing||(clearInterval(this.delayedShow),n.data("ui-tooltip-title")&&!n.attr("title")&&n.attr("title",n.data("ui-tooltip-title")),this._removeDescribedBy(n),o.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,(function(){s._removeTooltip(t(this))})),n.removeData("ui-tooltip-open"),this._off(n,"mouseleave focusout keyup"),n[0]!==this.element[0]&&this._off(n,"remove"),this._off(this.document,"mousemove"),e&&"mouseleave"===e.type&&t.each(this.parents,(function(e,i){t(i.element).attr("title",i.title),delete s.parents[e]})),o.closing=!0,this._trigger("close",e,{tooltip:i}),o.hiding||(o.closing=!1))):n.removeData("ui-tooltip-open")},_tooltip:function(e){var i=t("<div>").attr("role","tooltip"),s=t("<div>").appendTo(i),n=i.uniqueId().attr("id");return this._addClass(s,"ui-tooltip-content"),this._addClass(i,"ui-tooltip","ui-widget ui-widget-content"),i.appendTo(this._appendTo(e)),this.tooltips[n]={element:e,tooltip:i}},_find:function(t){return(t=t.data("ui-tooltip-id"))?this.tooltips[t]:null},_removeTooltip:function(t){clearInterval(this.delayedShow),t.remove(),delete this.tooltips[t.attr("id")]},_appendTo:function(t){return(t=t.closest(".ui-front, dialog")).length?t:this.document[0].body},_destroy:function(){var e=this;t.each(this.tooltips,(function(i,s){var n=t.Event("blur");s=s.element,n.target=n.currentTarget=s[0],e.close(n,!0),t("#"+i).remove(),s.data("ui-tooltip-title")&&(s.attr("title")||s.attr("title",s.data("ui-tooltip-title")),s.removeData("ui-tooltip-title"))})),this.liveRegion.remove()}}),!1!==t.uiBackCompat&&t.widget("ui.tooltip",t.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var t=this._superApply(arguments);return this.options.tooltipClass&&t.tooltip.addClass(this.options.tooltipClass),t}}),t.ui.tooltip;var P=t,F={},O=F.toString,H=/^([\-+])=\s*(\d+\.?\d*)/,N=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16),t[4]?(parseInt(t[4],16)/255).toFixed(2):1]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16),t[4]?(parseInt(t[4]+t[4],16)/255).toFixed(2):1]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],L=P.Color=function(t,e,i,s){return new P.Color.fn.parse(t,e,i,s)},B={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},R={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},z=L.support={},j=P("<p>")[0],W=P.each;function q(t){return null==t?t+"":"object"==typeof t?F[O.call(t)]||"object":typeof t}function V(t,e,i){var s=R[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:Math.min(s.max,Math.max(0,t)))}function $(t){var e=L(),i=e._rgba=[];return t=t.toLowerCase(),W(N,(function(s,n){var o=(o=n.re.exec(t))&&n.parse(o);if(n=n.space||"rgba",o)return o=e[n](o),e[B[n].cache]=o[B[n].cache],i=e._rgba=o._rgba,!1})),i.length?("0,0,0,0"===i.join()&&P.extend(i,st.transparent),e):st[t]}function Y(t,e,i){return 6*(i=(i+1)%1)<1?t+(e-t)*i*6:2*i<1?e:3*i<2?t+(e-t)*(2/3-i)*6:t}j.style.cssText="background-color:rgba(1,1,1,.5)",z.rgba=-1<j.style.backgroundColor.indexOf("rgba"),W(B,(function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}})),P.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){F["[object "+e+"]"]=e.toLowerCase()})),(L.fn=P.extend(L.prototype,{parse:function(t,e,i,s){if(void 0===t)return this._rgba=[null,null,null,null],this;(t.jquery||t.nodeType)&&(t=P(t).css(e),e=void 0);var n=this,o=q(t),a=this._rgba=[];return void 0!==e&&(t=[t,e,i,s],o="array"),"string"===o?this.parse($(t)||st._default):"array"===o?(W(B.rgba.props,(function(e,i){a[i.idx]=V(t[i.idx],i)})),this):"object"===o?(W(B,t instanceof L?function(e,i){t[i.cache]&&(n[i.cache]=t[i.cache].slice())}:function(e,i){var s=i.cache;W(i.props,(function(e,o){if(!n[s]&&i.to){if("alpha"===e||null==t[e])return;n[s]=i.to(n._rgba)}n[s][o.idx]=V(t[e],o,!0)})),n[s]&&P.inArray(null,n[s].slice(0,3))<0&&(null==n[s][3]&&(n[s][3]=1),i.from&&(n._rgba=i.from(n[s])))}),this):void 0},is:function(t){var e=L(t),i=!0,s=this;return W(B,(function(t,n){var o,a=e[n.cache];return a&&(o=s[n.cache]||n.to&&n.to(s._rgba)||[],W(n.props,(function(t,e){if(null!=a[e.idx])return i=a[e.idx]===o[e.idx]}))),i})),i},_space:function(){var t=[],e=this;return W(B,(function(i,s){e[s.cache]&&t.push(i)})),t.pop()},transition:function(t,e){var i=(a=L(t))._space(),s=B[i],n=(t=0===this.alpha()?L("transparent"):this)[s.cache]||s.to(t._rgba),o=n.slice(),a=a[s.cache];return W(s.props,(function(t,i){var s=i.idx,r=n[s],l=a[s],h=R[i.type]||{};null!==l&&(null===r?o[s]=l:(h.mod&&(l-r>h.mod/2?r+=h.mod:r-l>h.mod/2&&(r-=h.mod)),o[s]=V((l-r)*e+r,i)))})),this[i](o)},blend:function(t){if(1===this._rgba[3])return this;var e=this._rgba.slice(),i=e.pop(),s=L(t)._rgba;return L(P.map(e,(function(t,e){return(1-i)*s[e]+i*t})))},toRgbaString:function(){var t="rgba(",e=P.map(this._rgba,(function(t,e){return null!=t?t:2<e?1:0}));return 1===e[3]&&(e.pop(),t="rgb("),t+e.join()+")"},toHslaString:function(){var t="hsla(",e=P.map(this.hsla(),(function(t,e){return null==t&&(t=2<e?1:0),e&&e<3?Math.round(100*t)+"%":t}));return 1===e[3]&&(e.pop(),t="hsl("),t+e.join()+")"},toHexString:function(t){var e=this._rgba.slice(),i=e.pop();return t&&e.push(~~(255*i)),"#"+P.map(e,(function(t){return 1===(t=(t||0).toString(16)).length?"0"+t:t})).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}})).parse.prototype=L.fn,B.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/255,i=t[1]/255,s=t[2]/255,n=t[3],o=Math.max(e,i,s),a=Math.min(e,i,s),r=o-a,l=(t=.5*(l=o+a),i=a===o?0:e===o?60*(i-s)/r+360:i===o?60*(s-e)/r+120:60*(e-i)/r+240,0==r?0:t<=.5?r/l:r/(2-l));return[Math.round(i)%360,l,t,null==n?1:n]},B.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2];return t=t[3],s=2*s-(i=s<=.5?s*(1+i):s+i-s*i),[Math.round(255*Y(s,i,e+1/3)),Math.round(255*Y(s,i,e)),Math.round(255*Y(s,i,e-1/3)),t]},W(B,(function(t,e){var i=e.props,s=e.cache,n=e.to,o=e.from;L.fn[t]=function(t){if(n&&!this[s]&&(this[s]=n(this._rgba)),void 0===t)return this[s].slice();var e=q(t),a="array"===e||"object"===e?t:arguments,r=this[s].slice();return W(i,(function(t,i){null==(t=a["object"===e?t:i.idx])&&(t=r[i.idx]),r[i.idx]=V(t,i)})),o?((t=L(o(r)))[s]=r,t):L(r)},W(i,(function(e,i){L.fn[e]||(L.fn[e]=function(s){var n,o=q(s),a="alpha"===e?this._hsla?"hsla":"rgba":t,r=this[a](),l=r[i.idx];return"undefined"===o?l:("function"===o&&(o=q(s=s.call(this,l))),null==s&&i.empty?this:("string"===o&&(n=H.exec(s))&&(s=l+parseFloat(n[2])*("+"===n[1]?1:-1)),r[i.idx]=s,this[a](r)))})}))})),(L.hook=function(t){t=t.split(" "),W(t,(function(t,e){P.cssHooks[e]={set:function(t,i){var s,n,o="";if("transparent"!==i&&("string"!==q(i)||(s=$(i)))){if(i=L(s||i),!z.rgba&&1!==i._rgba[3]){for(n="backgroundColor"===e?t.parentNode:t;(""===o||"transparent"===o)&&n&&n.style;)try{o=P.css(n,"backgroundColor"),n=n.parentNode}catch(t){}i=i.blend(o&&"transparent"!==o?o:"_default")}i=i.toRgbaString()}try{t.style[e]=i}catch(t){}}},P.fx.step[e]=function(t){t.colorInit||(t.start=L(t.elem,e),t.end=L(t.end),t.colorInit=!0),P.cssHooks[e].set(t.elem,t.start.transition(t.end,t.pos))}}))})("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"),P.cssHooks.borderColor={expand:function(t){var e={};return W(["Top","Right","Bottom","Left"],(function(i,s){e["border"+s+"Color"]=t})),e}};var U,K,X,G,J,Q,Z,tt,et,it,st=P.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"},nt="ui-effects-",ot="ui-effects-style",at="ui-effects-animated";function rt(t){var e,i,s=t.ownerDocument.defaultView?t.ownerDocument.defaultView.getComputedStyle(t,null):t.currentStyle,n={};if(s&&s.length&&s[0]&&s[s[0]])for(i=s.length;i--;)"string"==typeof s[e=s[i]]&&(n[e.replace(/-([\da-z])/gi,(function(t,e){return e.toUpperCase()}))]=s[e]);else for(e in s)"string"==typeof s[e]&&(n[e]=s[e]);return n}function lt(e,i,s,n){return e={effect:e=t.isPlainObject(e)?(i=e).effect:e},"function"==typeof(i=null==i?{}:i)&&(n=i,s=null,i={}),"number"!=typeof i&&!t.fx.speeds[i]||(n=s,s=i,i={}),"function"==typeof s&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function ht(e){return!e||"number"==typeof e||t.fx.speeds[e]||"string"==typeof e&&!t.effects.effect[e]||"function"==typeof e||"object"==typeof e&&!e.effect}function ut(t,e){var i=e.outerWidth();return e=e.outerHeight(),t=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(t)||["",0,i,e,0],{top:parseFloat(t[1])||0,right:"auto"===t[2]?i:parseFloat(t[2]),bottom:"auto"===t[3]?e:parseFloat(t[3]),left:parseFloat(t[4])||0}}t.effects={effect:{}},G=["add","remove","toggle"],J={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1},t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],(function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(P.style(t.elem,i,t.end),t.setAttr=!0)}})),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(e,i,s,n){var o=t.speed(i,s,n);return this.queue((function(){var i=t(this),s=i.attr("class")||"",n=(n=o.children?i.find("*").addBack():i).map((function(){return{el:t(this),start:rt(this)}})),a=function(){t.each(G,(function(t,s){e[s]&&i[s+"Class"](e[s])}))};a(),n=n.map((function(){return this.end=rt(this.el[0]),this.diff=function(e,i){var s,n,o={};for(s in i)n=i[s],e[s]!==n&&(J[s]||!t.fx.step[s]&&isNaN(parseFloat(n))||(o[s]=n));return o}(this.start,this.end),this})),i.attr("class",s),n=n.map((function(){var e=this,i=t.Deferred(),s=t.extend({},o,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()})),t.when.apply(t,n.get()).done((function(){a(),t.each(arguments,(function(){var e=this.el;t.each(this.diff,(function(t){e.css(t,"")}))})),o.complete.call(i[0])}))}))},t.fn.extend({addClass:(X=t.fn.addClass,function(e,i,s,n){return i?t.effects.animateClass.call(this,{add:e},i,s,n):X.apply(this,arguments)}),removeClass:(K=t.fn.removeClass,function(e,i,s,n){return 1<arguments.length?t.effects.animateClass.call(this,{remove:e},i,s,n):K.apply(this,arguments)}),toggleClass:(U=t.fn.toggleClass,function(e,i,s,n,o){return"boolean"==typeof i||void 0===i?s?t.effects.animateClass.call(this,i?{add:e}:{remove:e},s,n,o):U.apply(this,arguments):t.effects.animateClass.call(this,{toggle:e},i,s,n)}),switchClass:function(e,i,s,n,o){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,o)}}),t.expr&&t.expr.pseudos&&t.expr.pseudos.animated&&(t.expr.pseudos.animated=(Q=t.expr.pseudos.animated,function(e){return!!t(e).data(at)||Q(e)})),!1!==t.uiBackCompat&&t.extend(t.effects,{save:function(t,e){for(var i=0,s=e.length;i<s;i++)null!==e[i]&&t.data(nt+e[i],t[0].style[e[i]])},restore:function(t,e){for(var i,s=0,n=e.length;s<n;s++)null!==e[s]&&(i=t.data(nt+e[s]),t.css(e[s],i))},setMode:function(t,e){return"toggle"===e?t.is(":hidden")?"show":"hide":e},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),float:e.css("float")},s=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},o=document.activeElement;try{o.id}catch(s){o=document.body}return e.wrap(s),e[0]!==o&&!t.contains(e[0],o)||t(o).trigger("focus"),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],(function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]="auto")})),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),e[0]!==i&&!t.contains(e[0],i)||t(i).trigger("focus")),e}}),t.extend(t.effects,{version:"1.13.1",define:function(e,i,s){return s||(s=i,i="effect"),t.effects.effect[e]=s,t.effects.effect[e].mode=i,s},scaledDimensions:function(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var s="horizontal"!==i?(e||100)/100:1;return e="vertical"!==i?(e||100)/100:1,{height:t.height()*e,width:t.width()*s,outerHeight:t.outerHeight()*e,outerWidth:t.outerWidth()*s}},clipToBox:function(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top}},unshift:function(t,e,i){var s=t.queue();1<e&&s.splice.apply(s,[1,0].concat(s.splice(e,i))),t.dequeue()},saveStyle:function(t){t.data(ot,t[0].style.cssText)},restoreStyle:function(t){t[0].style.cssText=t.data(ot)||"",t.removeData(ot)},mode:function(t,e){return t=t.is(":hidden"),"toggle"===e&&(e=t?"show":"hide"),(t?"hide"===e:"show"===e)?"none":e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createPlaceholder:function(e){var i,s=e.css("position"),n=e.position();return e.css({marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()),/^(static|relative)/.test(s)&&(s="absolute",i=t("<"+e[0].nodeName+">").insertAfter(e).css({display:/^(inline|ruby)/.test(e.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight"),float:e.css("float")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass("ui-effects-placeholder"),e.data(nt+"placeholder",i)),e.css({position:s,left:n.left,top:n.top}),i},removePlaceholder:function(t){var e=nt+"placeholder",i=t.data(e);i&&(i.remove(),t.removeData(e))},cleanUp:function(e){t.effects.restoreStyle(e),t.effects.removePlaceholder(e)},setTransition:function(e,i,s,n){return n=n||{},t.each(i,(function(t,i){var o=e.cssUnit(i);0<o[0]&&(n[i]=o[0]*s+o[1])})),n}}),t.fn.extend({effect:function(){function e(e){var i=t(this),s=t.effects.mode(i,l)||n;i.data(at,!0),h.push(s),n&&("show"===s||s===n&&"hide"===s)&&i.show(),n&&"none"===s||t.effects.saveStyle(i),"function"==typeof e&&e()}var i=lt.apply(this,arguments),s=t.effects.effect[i.effect],n=s.mode,o=i.queue,a=o||"fx",r=i.complete,l=i.mode,h=[];return t.fx.off||!s?l?this[l](i.duration,r):this.each((function(){r&&r.call(this)})):!1===o?this.each(e).each(u):this.queue(a,e).queue(a,u);function u(e){var o=t(this);function a(){"function"==typeof r&&r.call(o[0]),"function"==typeof e&&e()}i.mode=h.shift(),!1===t.uiBackCompat||n?"none"===i.mode?(o[l](),a()):s.call(o[0],i,(function(){o.removeData(at),t.effects.cleanUp(o),"hide"===i.mode&&o.hide(),a()})):(o.is(":hidden")?"hide"===l:"show"===l)?(o[l](),a()):s.call(o[0],i,a)}},show:(et=t.fn.show,function(t){return ht(t)?et.apply(this,arguments):((t=lt.apply(this,arguments)).mode="show",this.effect.call(this,t))}),hide:(tt=t.fn.hide,function(t){return ht(t)?tt.apply(this,arguments):((t=lt.apply(this,arguments)).mode="hide",this.effect.call(this,t))}),toggle:(Z=t.fn.toggle,function(t){return ht(t)||"boolean"==typeof t?Z.apply(this,arguments):((t=lt.apply(this,arguments)).mode="toggle",this.effect.call(this,t))}),cssUnit:function(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],(function(t,e){0<i.indexOf(e)&&(s=[parseFloat(i),e])})),s},cssClip:function(t){return t?this.css("clip","rect("+t.top+"px "+t.right+"px "+t.bottom+"px "+t.left+"px)"):ut(this.css("clip"),this)},transfer:function(e,i){var s=t(this),n="fixed"===(l=t(e.to)).css("position"),o=t("body"),a=n?o.scrollTop():0,r=n?o.scrollLeft():0,l=(o={top:(o=l.offset()).top-a,left:o.left-r,height:l.innerHeight(),width:l.innerWidth()},s.offset()),h=t("<div class='ui-effects-transfer'></div>");h.appendTo("body").addClass(e.className).css({top:l.top-a,left:l.left-r,height:s.innerHeight(),width:s.innerWidth(),position:n?"fixed":"absolute"}).animate(o,e.duration,e.easing,(function(){h.remove(),"function"==typeof i&&i()}))}}),t.fx.step.clip=function(e){e.clipInit||(e.start=t(e.elem).cssClip(),"string"==typeof e.end&&(e.end=ut(e.end,e.elem)),e.clipInit=!0),t(e.elem).cssClip({top:e.pos*(e.end.top-e.start.top)+e.start.top,right:e.pos*(e.end.right-e.start.right)+e.start.right,bottom:e.pos*(e.end.bottom-e.start.bottom)+e.start.bottom,left:e.pos*(e.end.left-e.start.left)+e.start.left})},it={},t.each(["Quad","Cubic","Quart","Quint","Expo"],(function(t,e){it[e]=function(e){return Math.pow(e,t+2)}})),t.extend(it,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;t<((e=Math.pow(2,--i))-1)/11;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(it,(function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return t<.5?i(2*t)/2:1-i(-2*t+2)/2}})),j=t.effects,t.effects.define("blind","hide",(function(e,i){var s={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},n=t(this),o=e.direction||"up",a=n.cssClip(),r={clip:t.extend({},a)},l=t.effects.createPlaceholder(n);r.clip[s[o][0]]=r.clip[s[o][1]],"show"===e.mode&&(n.cssClip(r.clip),l&&l.css(t.effects.clipToBox(r)),r.clip=a),l&&l.animate(t.effects.clipToBox(r),e.duration,e.easing),n.animate(r,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("bounce",(function(e,i){var s,n,o=t(this),a="hide"===(c=e.mode),r="show"===c,l=e.direction||"up",h=e.distance,u=e.times||5,c=2*u+(r||a?1:0),d=e.duration/c,p=e.easing,f="up"===l||"down"===l?"top":"left",g="up"===l||"left"===l,m=0;for(e=o.queue().length,t.effects.createPlaceholder(o),l=o.css(f),h=h||o["top"==f?"outerHeight":"outerWidth"]()/3,r&&((n={opacity:1})[f]=l,o.css("opacity",0).css(f,g?2*-h:2*h).animate(n,d,p)),a&&(h/=Math.pow(2,u-1)),(n={})[f]=l;m<u;m++)(s={})[f]=(g?"-=":"+=")+h,o.animate(s,d,p).animate(n,d,p),h=a?2*h:h/2;a&&((s={opacity:0})[f]=(g?"-=":"+=")+h,o.animate(s,d,p)),o.queue(i),t.effects.unshift(o,e,1+c)})),t.effects.define("clip","hide",(function(e,i){var s={},n=t(this),o=(a="both"===(r=e.direction||"vertical"))||"horizontal"===r,a=a||"vertical"===r,r=n.cssClip();s.clip={top:a?(r.bottom-r.top)/2:r.top,right:o?(r.right-r.left)/2:r.right,bottom:a?(r.bottom-r.top)/2:r.bottom,left:o?(r.right-r.left)/2:r.left},t.effects.createPlaceholder(n),"show"===e.mode&&(n.cssClip(s.clip),s.clip=r),n.animate(s,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("drop","hide",(function(e,i){var s=t(this),n="show"===e.mode,o=e.direction||"left",a="up"===o||"down"===o?"top":"left",r="up"===o||"left"===o?"-=":"+=",l="+="==r?"-=":"+=",h={opacity:0};t.effects.createPlaceholder(s),o=e.distance||s["top"==a?"outerHeight":"outerWidth"](!0)/2,h[a]=r+o,n&&(s.css(h),h[a]=l+o,h.opacity=1),s.animate(h,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("explode","hide",(function(e,i){var s,n,o,a,r,l,h=e.pieces?Math.round(Math.sqrt(e.pieces)):3,u=h,c=t(this),d="show"===e.mode,p=c.show().css("visibility","hidden").offset(),f=Math.ceil(c.outerWidth()/u),g=Math.ceil(c.outerHeight()/h),m=[];function v(){m.push(this),m.length===h*u&&(c.css({visibility:"visible"}),t(m).remove(),i())}for(s=0;s<h;s++)for(a=p.top+s*g,l=s-(h-1)/2,n=0;n<u;n++)o=p.left+n*f,r=n-(u-1)/2,c.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-n*f,top:-s*g}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:f,height:g,left:o+(d?r*f:0),top:a+(d?l*g:0),opacity:d?0:1}).animate({left:o+(d?0:r*f),top:a+(d?0:l*g),opacity:d?1:0},e.duration||500,e.easing,v)})),t.effects.define("fade","toggle",(function(e,i){var s="show"===e.mode;t(this).css("opacity",s?0:1).animate({opacity:s?1:0},{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("fold","hide",(function(e,i){var s=t(this),n="show"===(g=e.mode),o="hide"===g,a=e.size||15,r=/([0-9]+)%/.exec(a),l=e.horizFirst?["right","bottom"]:["bottom","right"],h=e.duration/2,u=t.effects.createPlaceholder(s),c=s.cssClip(),d={clip:t.extend({},c)},p={clip:t.extend({},c)},f=[c[l[0]],c[l[1]]],g=s.queue().length;r&&(a=parseInt(r[1],10)/100*f[o?0:1]),d.clip[l[0]]=a,p.clip[l[0]]=a,p.clip[l[1]]=0,n&&(s.cssClip(p.clip),u&&u.css(t.effects.clipToBox(p)),p.clip=c),s.queue((function(i){u&&u.animate(t.effects.clipToBox(d),h,e.easing).animate(t.effects.clipToBox(p),h,e.easing),i()})).animate(d,h,e.easing).animate(p,h,e.easing).queue(i),t.effects.unshift(s,g,4)})),t.effects.define("highlight","show",(function(e,i){var s=t(this),n={backgroundColor:s.css("backgroundColor")};"hide"===e.mode&&(n.opacity=0),t.effects.saveStyle(s),s.css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("size",(function(e,i){var s,n=t(this),o=["fontSize"],a=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],r=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],l=e.mode,h="effect"!==l,u=e.scale||"both",c=e.origin||["middle","center"],d=n.css("position"),p=n.position(),f=t.effects.scaledDimensions(n),g=e.from||f,m=e.to||t.effects.scaledDimensions(n,0);t.effects.createPlaceholder(n),"show"===l&&(l=g,g=m,m=l),s={from:{y:g.height/f.height,x:g.width/f.width},to:{y:m.height/f.height,x:m.width/f.width}},"box"!==u&&"both"!==u||(s.from.y!==s.to.y&&(g=t.effects.setTransition(n,a,s.from.y,g),m=t.effects.setTransition(n,a,s.to.y,m)),s.from.x!==s.to.x&&(g=t.effects.setTransition(n,r,s.from.x,g),m=t.effects.setTransition(n,r,s.to.x,m))),"content"!==u&&"both"!==u||s.from.y!==s.to.y&&(g=t.effects.setTransition(n,o,s.from.y,g),m=t.effects.setTransition(n,o,s.to.y,m)),c&&(c=t.effects.getBaseline(c,f),g.top=(f.outerHeight-g.outerHeight)*c.y+p.top,g.left=(f.outerWidth-g.outerWidth)*c.x+p.left,m.top=(f.outerHeight-m.outerHeight)*c.y+p.top,m.left=(f.outerWidth-m.outerWidth)*c.x+p.left),delete g.outerHeight,delete g.outerWidth,n.css(g),"content"!==u&&"both"!==u||(a=a.concat(["marginTop","marginBottom"]).concat(o),r=r.concat(["marginLeft","marginRight"]),n.find("*[width]").each((function(){var i=t(this),n={height:(o=t.effects.scaledDimensions(i)).height*s.from.y,width:o.width*s.from.x,outerHeight:o.outerHeight*s.from.y,outerWidth:o.outerWidth*s.from.x},o={height:o.height*s.to.y,width:o.width*s.to.x,outerHeight:o.height*s.to.y,outerWidth:o.width*s.to.x};s.from.y!==s.to.y&&(n=t.effects.setTransition(i,a,s.from.y,n),o=t.effects.setTransition(i,a,s.to.y,o)),s.from.x!==s.to.x&&(n=t.effects.setTransition(i,r,s.from.x,n),o=t.effects.setTransition(i,r,s.to.x,o)),h&&t.effects.saveStyle(i),i.css(n),i.animate(o,e.duration,e.easing,(function(){h&&t.effects.restoreStyle(i)}))}))),n.animate(m,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){var e=n.offset();0===m.opacity&&n.css("opacity",g.opacity),h||(n.css("position","static"===d?"relative":d).offset(e),t.effects.saveStyle(n)),i()}})})),t.effects.define("scale",(function(e,i){var s=t(this),n=e.mode;n=parseInt(e.percent,10)||(0===parseInt(e.percent,10)||"effect"!==n?0:100),n=t.extend(!0,{from:t.effects.scaledDimensions(s),to:t.effects.scaledDimensions(s,n,e.direction||"both"),origin:e.origin||["middle","center"]},e),e.fade&&(n.from.opacity=1,n.to.opacity=0),t.effects.effect.size.call(this,n,i)})),t.effects.define("puff","hide",(function(e,i){e=t.extend(!0,{},e,{fade:!0,percent:parseInt(e.percent,10)||150}),t.effects.effect.scale.call(this,e,i)})),t.effects.define("pulsate","show",(function(e,i){var s=t(this),n="show"===(h=e.mode),o=2*(e.times||5)+(n||"hide"===h?1:0),a=e.duration/o,r=0,l=1,h=s.queue().length;for(!n&&s.is(":visible")||(s.css("opacity",0).show(),r=1);l<o;l++)s.animate({opacity:r},a,e.easing),r=1-r;s.animate({opacity:r},a,e.easing),s.queue(i),t.effects.unshift(s,h,1+o)})),t.effects.define("shake",(function(e,i){var s=1,n=t(this),o=e.direction||"left",a=e.distance||20,r=e.times||3,l=2*r+1,h=Math.round(e.duration/l),u="up"===o||"down"===o?"top":"left",c="up"===o||"left"===o,d={},p={},f={};for(o=n.queue().length,t.effects.createPlaceholder(n),d[u]=(c?"-=":"+=")+a,p[u]=(c?"+=":"-=")+2*a,f[u]=(c?"-=":"+=")+2*a,n.animate(d,h,e.easing);s<r;s++)n.animate(p,h,e.easing).animate(f,h,e.easing);n.animate(p,h,e.easing).animate(d,h/2,e.easing).queue(i),t.effects.unshift(n,o,1+l)})),t.effects.define("slide","show",(function(e,i){var s,n,o=t(this),a={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},r=e.mode,l=e.direction||"left",h="up"===l||"down"===l?"top":"left",u="up"===l||"left"===l,c=e.distance||o["top"==h?"outerHeight":"outerWidth"](!0),d={};t.effects.createPlaceholder(o),s=o.cssClip(),n=o.position()[h],d[h]=(u?-1:1)*c+n,d.clip=o.cssClip(),d.clip[a[l][1]]=d.clip[a[l][0]],"show"===r&&(o.cssClip(d.clip),o.css(h,d[h]),d.clip=s,d[h]=n),o.animate(d,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),!1!==t.uiBackCompat&&t.effects.define("transfer",(function(e,i){t(this).transfer(e,i)}))},void 0===(o=s.apply(e,n))||(t.exports=o)}()},635:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/350.60788d211c3da80c40cb..png"},222:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/352.c5712a051d8d7ff7f8fb..png"},413:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/444.96b61b4fe08982bf0396..png"},4:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/450.035581576c9848c1c681..png"},963:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/666.b20497b9261864c1ec2b..png"},942:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/678.d1f57b88143215fe189e..png"},521:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/740.9efef6e94cd99a465a7d..png"},290:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/840.b2d185104168ed86c700..png"},452:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/856.ff281d88282a238b201c..png"},708:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/888_1.7d7a46ef2d8ec119f928..png"},151:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/888_2.26a144a6a7e9b0d89571..png"},292:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/888_3.2294d2961b6c7b0b0574..png"},716:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/980.645ca399f5d71079becf..png"},998:(t,e,i)=>{"use strict";t.exports=i.p+"assets/images/982.b2d86ed206801bc6f034..png"}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var o=e[s]={exports:{}};return t[s].call(o.exports,o,o.exports,i),o.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;i.g.importScripts&&(t=i.g.location+"");var e=i.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var s=e.getElementsByTagName("script");s.length&&(t=s[s.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=t})(),(()=>{"use strict";let t=document.querySelectorAll(".header");for(let e of t){let t=e.querySelector(".header__mobile-menu"),i=e.querySelector(".header__menu"),s=Array.from(e.querySelectorAll(".header__menu-link_arrow")),n=Array.from(e.querySelectorAll(".header__submenu")),o=()=>{i.classList.contains("header__menu_visible")?i.classList.remove("header__menu_visible"):i.classList.add("header__menu_visible")},a=t=>{n[t].classList.contains("header__submenu_visible")?n[t].classList.remove("header__submenu_visible"):n[t].classList.add("header__submenu_visible")};t.onmousedown=()=>{o()},t.onkeydown=t=>{"Enter"==t.key&&o()},document.addEventListener("mousedown",(e=>{t.contains(e.target)||i.contains(e.target)||i.classList.remove("header__menu_visible")}));for(let t in s)s[t].onmousedown=()=>{a(t)},s[t].onkeydown=e=>{"Enter"==e.key&&a(t)},document.body.addEventListener("mousedown",(e=>{s[t].contains(e.target)||n[t].contains(e.target)||n[t].classList.remove("header__submenu_visible")}))}function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function o(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),Object.defineProperty(t,"prototype",{writable:!1}),t}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&l(t,e)}function r(t){return r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},r(t)}function l(t,e){return l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},l(t,e)}function h(t,e){if(null==t)return{};var i,s,n=function(t,e){if(null==t)return{};var i,s,n={},o=Object.keys(t);for(s=0;s<o.length;s++)i=o[s],e.indexOf(i)>=0||(n[i]=t[i]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(s=0;s<o.length;s++)i=o[s],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(n[i]=t[i])}return n}function u(t,e){if(e&&("object"==typeof e||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var i,s=r(t);if(e){var n=r(this).constructor;i=Reflect.construct(s,arguments,n)}else i=s.apply(this,arguments);return u(this,i)}}function d(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=r(t)););return t}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,i){var s=d(t,e);if(s){var n=Object.getOwnPropertyDescriptor(s,e);return n.get?n.get.call(arguments.length<3?t:i):n.value}},p.apply(this,arguments)}function f(t,e,i,s){return f="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(t,e,i,s){var n,o=d(t,e);if(o){if((n=Object.getOwnPropertyDescriptor(o,e)).set)return n.set.call(s,i),!0;if(!n.writable)return!1}if(n=Object.getOwnPropertyDescriptor(s,e)){if(!n.writable)return!1;n.value=i,Object.defineProperty(s,e,n)}else!function(t,e,i){e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i}(s,e,i);return!0},f(t,e,i,s)}function g(t,e,i,s,n){if(!f(t,e,i,s||t)&&n)throw new Error("failed to set property");return i}function m(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var i=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=i){var s,n,o=[],a=!0,r=!1;try{for(i=i.call(t);!(a=(s=i.next()).done)&&(o.push(s.value),!e||o.length!==e);a=!0);}catch(t){r=!0,n=t}finally{try{a||null==i.return||i.return()}finally{if(r)throw n}}return o}}(t,e)||function(t,e){if(t){if("string"==typeof t)return v(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?v(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,s=new Array(e);i<e;i++)s[i]=t[i];return s}var _=function(){function t(e){s(this,t),Object.assign(this,{inserted:"",rawInserted:"",skip:!1,tailShift:0},e)}return o(t,[{key:"aggregate",value:function(t){return this.rawInserted+=t.rawInserted,this.skip=this.skip||t.skip,this.inserted+=t.inserted,this.tailShift+=t.tailShift,this}},{key:"offset",get:function(){return this.tailShift+this.inserted.length}}]),t}();function y(t){return"string"==typeof t||t instanceof String}var b="NONE",k="LEFT",w="FORCE_LEFT",x="RIGHT",C="FORCE_RIGHT";function D(t){return t.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function S(t){return Array.isArray(t)?t:[t,new _]}function T(t,i){if(i===t)return!0;var s,n=Array.isArray(i),o=Array.isArray(t);if(n&&o){if(i.length!=t.length)return!1;for(s=0;s<i.length;s++)if(!T(i[s],t[s]))return!1;return!0}if(n!=o)return!1;if(i&&t&&"object"===e(i)&&"object"===e(t)){var a=i instanceof Date,r=t instanceof Date;if(a&&r)return i.getTime()==t.getTime();if(a!=r)return!1;var l=i instanceof RegExp,h=t instanceof RegExp;if(l&&h)return i.toString()==t.toString();if(l!=h)return!1;var u=Object.keys(i);for(s=0;s<u.length;s++)if(!Object.prototype.hasOwnProperty.call(t,u[s]))return!1;for(s=0;s<u.length;s++)if(!T(t[u[s]],i[u[s]]))return!1;return!0}return!(!i||!t||"function"!=typeof i||"function"!=typeof t)&&i.toString()===t.toString()}var A=function(){function t(e,i,n,o){for(s(this,t),this.value=e,this.cursorPos=i,this.oldValue=n,this.oldSelection=o;this.value.slice(0,this.startChangePos)!==this.oldValue.slice(0,this.startChangePos);)--this.oldSelection.start}return o(t,[{key:"startChangePos",get:function(){return Math.min(this.cursorPos,this.oldSelection.start)}},{key:"insertedCount",get:function(){return this.cursorPos-this.startChangePos}},{key:"inserted",get:function(){return this.value.substr(this.startChangePos,this.insertedCount)}},{key:"removedCount",get:function(){return Math.max(this.oldSelection.end-this.startChangePos||this.oldValue.length-this.value.length,0)}},{key:"removed",get:function(){return this.oldValue.substr(this.startChangePos,this.removedCount)}},{key:"head",get:function(){return this.value.substring(0,this.startChangePos)}},{key:"tail",get:function(){return this.value.substring(this.startChangePos+this.insertedCount)}},{key:"removeDirection",get:function(){return!this.removedCount||this.insertedCount?b:this.oldSelection.end!==this.cursorPos&&this.oldSelection.start!==this.cursorPos||this.oldSelection.end!==this.oldSelection.start?k:x}}]),t}(),E=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2?arguments[2]:void 0;s(this,t),this.value=e,this.from=i,this.stop=n}return o(t,[{key:"toString",value:function(){return this.value}},{key:"extend",value:function(t){this.value+=String(t)}},{key:"appendTo",value:function(t){return t.append(this.toString(),{tail:!0}).aggregate(t._appendPlaceholder())}},{key:"state",get:function(){return{value:this.value,from:this.from,stop:this.stop}},set:function(t){Object.assign(this,t)}},{key:"unshift",value:function(t){if(!this.value.length||null!=t&&this.from>=t)return"";var e=this.value[0];return this.value=this.value.slice(1),e}},{key:"shift",value:function(){if(!this.value.length)return"";var t=this.value[this.value.length-1];return this.value=this.value.slice(0,-1),t}}]),t}();function M(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new M.InputMask(t,e)}var I=function(){function t(e){s(this,t),this._value="",this._update(Object.assign({},t.DEFAULTS,e)),this.isInitialized=!0}return o(t,[{key:"updateOptions",value:function(t){Object.keys(t).length&&this.withValueRefresh(this._update.bind(this,t))}},{key:"_update",value:function(t){Object.assign(this,t)}},{key:"state",get:function(){return{_value:this.value}},set:function(t){this._value=t._value}},{key:"reset",value:function(){this._value=""}},{key:"value",get:function(){return this._value},set:function(t){this.resolve(t)}},{key:"resolve",value:function(t){return this.reset(),this.append(t,{input:!0},""),this.doCommit(),this.value}},{key:"unmaskedValue",get:function(){return this.value},set:function(t){this.reset(),this.append(t,{},""),this.doCommit()}},{key:"typedValue",get:function(){return this.doParse(this.value)},set:function(t){this.value=this.doFormat(t)}},{key:"rawInputValue",get:function(){return this.extractInput(0,this.value.length,{raw:!0})},set:function(t){this.reset(),this.append(t,{raw:!0},""),this.doCommit()}},{key:"isComplete",get:function(){return!0}},{key:"isFilled",get:function(){return this.isComplete}},{key:"nearestInputPos",value:function(t,e){return t}},{key:"extractInput",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length;return this.value.slice(t,e)}},{key:"extractTail",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length;return new E(this.extractInput(t,e),t)}},{key:"appendTail",value:function(t){return y(t)&&(t=new E(String(t))),t.appendTo(this)}},{key:"_appendCharRaw",value:function(t){return t?(this._value+=t,new _({inserted:t,rawInserted:t})):new _}},{key:"_appendChar",value:function(t){var e,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2?arguments[2]:void 0,n=this.state,o=S(this.doPrepare(t,i)),a=m(o,2);if(t=a[0],(e=(e=a[1]).aggregate(this._appendCharRaw(t,i))).inserted){var r,l=!1!==this.doValidate(i);if(l&&null!=s){var h=this.state;!0===this.overwrite&&(r=s.state,s.unshift(this.value.length));var u=this.appendTail(s);(l=u.rawInserted===s.toString())&&u.inserted||"shift"!==this.overwrite||(this.state=h,r=s.state,s.shift(),l=(u=this.appendTail(s)).rawInserted===s.toString()),l&&u.inserted&&(this.state=h)}l||(e=new _,this.state=n,s&&r&&(s.state=r))}return e}},{key:"_appendPlaceholder",value:function(){return new _}},{key:"_appendEager",value:function(){return new _}},{key:"append",value:function(t,e,i){if(!y(t))throw new Error("value should be string");var s=new _,n=y(i)?new E(String(i)):i;e&&e.tail&&(e._beforeTailState=this.state);for(var o=0;o<t.length;++o)s.aggregate(this._appendChar(t[o],e,n));return null!=n&&(s.tailShift+=this.appendTail(n).tailShift),this.eager&&null!=e&&e.input&&t&&s.aggregate(this._appendEager()),s}},{key:"remove",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length;return this._value=this.value.slice(0,t)+this.value.slice(e),new _}},{key:"withValueRefresh",value:function(t){if(this._refreshing||!this.isInitialized)return t();this._refreshing=!0;var e=this.rawInputValue,i=this.value,s=t();return this.rawInputValue=e,this.value&&this.value!==i&&0===i.indexOf(this.value)&&this.append(i.slice(this.value.length),{},""),delete this._refreshing,s}},{key:"runIsolated",value:function(t){if(this._isolated||!this.isInitialized)return t(this);this._isolated=!0;var e=this.state,i=t(this);return this.state=e,delete this._isolated,i}},{key:"doPrepare",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.prepare?this.prepare(t,this,e):t}},{key:"doValidate",value:function(t){return(!this.validate||this.validate(this.value,this,t))&&(!this.parent||this.parent.doValidate(t))}},{key:"doCommit",value:function(){this.commit&&this.commit(this.value,this)}},{key:"doFormat",value:function(t){return this.format?this.format(t,this):t}},{key:"doParse",value:function(t){return this.parse?this.parse(t,this):t}},{key:"splice",value:function(t,e,i,s){var n,o=t+e,a=this.extractTail(o);this.eager&&(s=function(t){switch(t){case k:return w;case x:return C;default:return t}}(s),n=this.extractInput(0,o,{raw:!0}));var r=this.nearestInputPos(t,e>1&&0!==t&&!this.eager?b:s),l=new _({tailShift:r-t}).aggregate(this.remove(r));if(this.eager&&s!==b&&n===this.rawInputValue)if(s===w)for(var h;n===this.rawInputValue&&(h=this.value.length);)l.aggregate(new _({tailShift:-1})).aggregate(this.remove(h-1));else s===C&&a.unshift();return l.aggregate(this.append(i,{input:!0},a))}},{key:"maskEquals",value:function(t){return this.mask===t}}]),t}();function P(t){if(null==t)throw new Error("mask property should be defined");return t instanceof RegExp?M.MaskedRegExp:y(t)?M.MaskedPattern:t instanceof Date||t===Date?M.MaskedDate:t instanceof Number||"number"==typeof t||t===Number?M.MaskedNumber:Array.isArray(t)||t===Array?M.MaskedDynamic:M.Masked&&t.prototype instanceof M.Masked?t:t instanceof M.Masked?t.constructor:t instanceof Function?M.MaskedFunction:(console.warn("Mask not found for mask",t),M.Masked)}function F(t){if(M.Masked&&t instanceof M.Masked)return t;var e=(t=Object.assign({},t)).mask;if(M.Masked&&e instanceof M.Masked)return e;var i=P(e);if(!i)throw new Error("Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.");return new i(t)}I.DEFAULTS={format:function(t){return t},parse:function(t){return t}},M.Masked=I,M.createMask=F;var O=["mask"],H={0:/\d/,a:/[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,"*":/./},N=function(){function t(e){s(this,t);var i=e.mask,n=h(e,O);this.masked=F({mask:i}),Object.assign(this,n)}return o(t,[{key:"reset",value:function(){this.isFilled=!1,this.masked.reset()}},{key:"remove",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length;return 0===t&&e>=1?(this.isFilled=!1,this.masked.remove(t,e)):new _}},{key:"value",get:function(){return this.masked.value||(this.isFilled&&!this.isOptional?this.placeholderChar:"")}},{key:"unmaskedValue",get:function(){return this.masked.unmaskedValue}},{key:"isComplete",get:function(){return Boolean(this.masked.value)||this.isOptional}},{key:"_appendChar",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.isFilled)return new _;var i=this.masked.state,s=this.masked._appendChar(t,e);return s.inserted&&!1===this.doValidate(e)&&(s.inserted=s.rawInserted="",this.masked.state=i),s.inserted||this.isOptional||this.lazy||e.input||(s.inserted=this.placeholderChar),s.skip=!s.inserted&&!this.isOptional,this.isFilled=Boolean(s.inserted),s}},{key:"append",value:function(){var t;return(t=this.masked).append.apply(t,arguments)}},{key:"_appendPlaceholder",value:function(){var t=new _;return this.isFilled||this.isOptional||(this.isFilled=!0,t.inserted=this.placeholderChar),t}},{key:"_appendEager",value:function(){return new _}},{key:"extractTail",value:function(){var t;return(t=this.masked).extractTail.apply(t,arguments)}},{key:"appendTail",value:function(){var t;return(t=this.masked).appendTail.apply(t,arguments)}},{key:"extractInput",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length,i=arguments.length>2?arguments[2]:void 0;return this.masked.extractInput(t,e,i)}},{key:"nearestInputPos",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b,i=0,s=this.value.length,n=Math.min(Math.max(t,i),s);switch(e){case k:case w:return this.isComplete?n:i;case x:case C:return this.isComplete?n:s;default:return n}}},{key:"doValidate",value:function(){var t,e;return(t=this.masked).doValidate.apply(t,arguments)&&(!this.parent||(e=this.parent).doValidate.apply(e,arguments))}},{key:"doCommit",value:function(){this.masked.doCommit()}},{key:"state",get:function(){return{masked:this.masked.state,isFilled:this.isFilled}},set:function(t){this.masked.state=t.masked,this.isFilled=t.isFilled}}]),t}(),L=function(){function t(e){s(this,t),Object.assign(this,e),this._value="",this.isFixed=!0}return o(t,[{key:"value",get:function(){return this._value}},{key:"unmaskedValue",get:function(){return this.isUnmasking?this.value:""}},{key:"reset",value:function(){this._isRawInput=!1,this._value=""}},{key:"remove",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._value.length;return this._value=this._value.slice(0,t)+this._value.slice(e),this._value||(this._isRawInput=!1),new _}},{key:"nearestInputPos",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b,i=0,s=this._value.length;switch(e){case k:case w:return i;default:return s}}},{key:"extractInput",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._value.length,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return i.raw&&this._isRawInput&&this._value.slice(t,e)||""}},{key:"isComplete",get:function(){return!0}},{key:"isFilled",get:function(){return Boolean(this._value)}},{key:"_appendChar",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=new _;if(this._value)return i;var s=this.char===t,n=s&&(this.isUnmasking||e.input||e.raw)&&!this.eager&&!e.tail;return n&&(i.rawInserted=this.char),this._value=i.inserted=this.char,this._isRawInput=n&&(e.raw||e.input),i}},{key:"_appendEager",value:function(){return this._appendChar(this.char)}},{key:"_appendPlaceholder",value:function(){var t=new _;return this._value||(this._value=t.inserted=this.char),t}},{key:"extractTail",value:function(){return arguments.length>1&&void 0!==arguments[1]||this.value.length,new E("")}},{key:"appendTail",value:function(t){return y(t)&&(t=new E(String(t))),t.appendTo(this)}},{key:"append",value:function(t,e,i){var s=this._appendChar(t[0],e);return null!=i&&(s.tailShift+=this.appendTail(i).tailShift),s}},{key:"doCommit",value:function(){}},{key:"state",get:function(){return{_value:this._value,_isRawInput:this._isRawInput}},set:function(t){Object.assign(this,t)}}]),t}(),B=["chunks"],R=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;s(this,t),this.chunks=e,this.from=i}return o(t,[{key:"toString",value:function(){return this.chunks.map(String).join("")}},{key:"extend",value:function(e){if(String(e)){y(e)&&(e=new E(String(e)));var i=this.chunks[this.chunks.length-1],s=i&&(i.stop===e.stop||null==e.stop)&&e.from===i.from+i.toString().length;if(e instanceof E)s?i.extend(e.toString()):this.chunks.push(e);else if(e instanceof t){if(null==e.stop)for(var n;e.chunks.length&&null==e.chunks[0].stop;)(n=e.chunks.shift()).from+=e.from,this.extend(n);e.toString()&&(e.stop=e.blockIndex,this.chunks.push(e))}}}},{key:"appendTo",value:function(e){if(!(e instanceof M.MaskedPattern))return new E(this.toString()).appendTo(e);for(var i=new _,s=0;s<this.chunks.length&&!i.skip;++s){var n=this.chunks[s],o=e._mapPosToBlock(e.value.length),a=n.stop,r=void 0;if(null!=a&&(!o||o.index<=a)&&((n instanceof t||e._stops.indexOf(a)>=0)&&i.aggregate(e._appendPlaceholder(a)),r=n instanceof t&&e._blocks[a]),r){var l=r.appendTail(n);l.skip=!1,i.aggregate(l),e._value+=l.inserted;var h=n.toString().slice(l.rawInserted.length);h&&i.aggregate(e.append(h,{tail:!0}))}else i.aggregate(e.append(n.toString(),{tail:!0}))}return i}},{key:"state",get:function(){return{chunks:this.chunks.map((function(t){return t.state})),from:this.from,stop:this.stop,blockIndex:this.blockIndex}},set:function(e){var i=e.chunks,s=h(e,B);Object.assign(this,s),this.chunks=i.map((function(e){var i="chunks"in e?new t:new E;return i.state=e,i}))}},{key:"unshift",value:function(t){if(!this.chunks.length||null!=t&&this.from>=t)return"";for(var e=null!=t?t-this.from:t,i=0;i<this.chunks.length;){var s=this.chunks[i],n=s.unshift(e);if(s.toString()){if(!n)break;++i}else this.chunks.splice(i,1);if(n)return n}return""}},{key:"shift",value:function(){if(!this.chunks.length)return"";for(var t=this.chunks.length-1;0<=t;){var e=this.chunks[t],i=e.shift();if(e.toString()){if(!i)break;--t}else this.chunks.splice(t,1);if(i)return i}return""}}]),t}(),z=function(){function t(e,i){s(this,t),this.masked=e,this._log=[];var n=e._mapPosToBlock(i)||(i<0?{index:0,offset:0}:{index:this.masked._blocks.length,offset:0}),o=n.offset,a=n.index;this.offset=o,this.index=a,this.ok=!1}return o(t,[{key:"block",get:function(){return this.masked._blocks[this.index]}},{key:"pos",get:function(){return this.masked._blockStartPos(this.index)+this.offset}},{key:"state",get:function(){return{index:this.index,offset:this.offset,ok:this.ok}},set:function(t){Object.assign(this,t)}},{key:"pushState",value:function(){this._log.push(this.state)}},{key:"popState",value:function(){var t=this._log.pop();return this.state=t,t}},{key:"bindBlock",value:function(){this.block||(this.index<0&&(this.index=0,this.offset=0),this.index>=this.masked._blocks.length&&(this.index=this.masked._blocks.length-1,this.offset=this.block.value.length))}},{key:"_pushLeft",value:function(t){for(this.pushState(),this.bindBlock();0<=this.index;--this.index,this.offset=(null===(e=this.block)||void 0===e?void 0:e.value.length)||0){var e;if(t())return this.ok=!0}return this.ok=!1}},{key:"_pushRight",value:function(t){for(this.pushState(),this.bindBlock();this.index<this.masked._blocks.length;++this.index,this.offset=0)if(t())return this.ok=!0;return this.ok=!1}},{key:"pushLeftBeforeFilled",value:function(){var t=this;return this._pushLeft((function(){if(!t.block.isFixed&&t.block.value)return t.offset=t.block.nearestInputPos(t.offset,w),0!==t.offset||void 0}))}},{key:"pushLeftBeforeInput",value:function(){var t=this;return this._pushLeft((function(){if(!t.block.isFixed)return t.offset=t.block.nearestInputPos(t.offset,k),!0}))}},{key:"pushLeftBeforeRequired",value:function(){var t=this;return this._pushLeft((function(){if(!(t.block.isFixed||t.block.isOptional&&!t.block.value))return t.offset=t.block.nearestInputPos(t.offset,k),!0}))}},{key:"pushRightBeforeFilled",value:function(){var t=this;return this._pushRight((function(){if(!t.block.isFixed&&t.block.value)return t.offset=t.block.nearestInputPos(t.offset,C),t.offset!==t.block.value.length||void 0}))}},{key:"pushRightBeforeInput",value:function(){var t=this;return this._pushRight((function(){if(!t.block.isFixed)return t.offset=t.block.nearestInputPos(t.offset,b),!0}))}},{key:"pushRightBeforeRequired",value:function(){var t=this;return this._pushRight((function(){if(!(t.block.isFixed||t.block.isOptional&&!t.block.value))return t.offset=t.block.nearestInputPos(t.offset,b),!0}))}}]),t}(),j=function(t){a(i,t);var e=c(i);function i(){return s(this,i),e.apply(this,arguments)}return o(i,[{key:"_update",value:function(t){t.mask&&(t.validate=function(e){return e.search(t.mask)>=0}),p(r(i.prototype),"_update",this).call(this,t)}}]),i}(I);M.MaskedRegExp=j;var W=["_blocks"],q=function(t){a(i,t);var e=c(i);function i(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return s(this,i),t.definitions=Object.assign({},H,t.definitions),e.call(this,Object.assign({},i.DEFAULTS,t))}return o(i,[{key:"_update",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t.definitions=Object.assign({},this.definitions,t.definitions),p(r(i.prototype),"_update",this).call(this,t),this._rebuildMask()}},{key:"_rebuildMask",value:function(){var t=this,e=this.definitions;this._blocks=[],this._stops=[],this._maskedBlocks={};var s=this.mask;if(s&&e)for(var n=!1,o=!1,a=0;a<s.length;++a)if(!this.blocks||"continue"!==function(){var e=s.slice(a),i=Object.keys(t.blocks).filter((function(t){return 0===e.indexOf(t)}));i.sort((function(t,e){return e.length-t.length}));var n=i[0];if(n){var o=F(Object.assign({parent:t,lazy:t.lazy,eager:t.eager,placeholderChar:t.placeholderChar,overwrite:t.overwrite},t.blocks[n]));return o&&(t._blocks.push(o),t._maskedBlocks[n]||(t._maskedBlocks[n]=[]),t._maskedBlocks[n].push(t._blocks.length-1)),a+=n.length-1,"continue"}}()){var r=s[a],l=r in e;if(r!==i.STOP_CHAR)if("{"!==r&&"}"!==r)if("["!==r&&"]"!==r){if(r===i.ESCAPE_CHAR){if(++a,!(r=s[a]))break;l=!1}var h=l?new N({parent:this,lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,mask:e[r],isOptional:o}):new L({char:r,eager:this.eager,isUnmasking:n});this._blocks.push(h)}else o=!o;else n=!n;else this._stops.push(this._blocks.length)}}},{key:"state",get:function(){return Object.assign({},p(r(i.prototype),"state",this),{_blocks:this._blocks.map((function(t){return t.state}))})},set:function(t){var e=t._blocks,s=h(t,W);this._blocks.forEach((function(t,i){return t.state=e[i]})),g(r(i.prototype),"state",s,this,!0)}},{key:"reset",value:function(){p(r(i.prototype),"reset",this).call(this),this._blocks.forEach((function(t){return t.reset()}))}},{key:"isComplete",get:function(){return this._blocks.every((function(t){return t.isComplete}))}},{key:"isFilled",get:function(){return this._blocks.every((function(t){return t.isFilled}))}},{key:"isFixed",get:function(){return this._blocks.every((function(t){return t.isFixed}))}},{key:"isOptional",get:function(){return this._blocks.every((function(t){return t.isOptional}))}},{key:"doCommit",value:function(){this._blocks.forEach((function(t){return t.doCommit()})),p(r(i.prototype),"doCommit",this).call(this)}},{key:"unmaskedValue",get:function(){return this._blocks.reduce((function(t,e){return t+e.unmaskedValue}),"")},set:function(t){g(r(i.prototype),"unmaskedValue",t,this,!0)}},{key:"value",get:function(){return this._blocks.reduce((function(t,e){return t+e.value}),"")},set:function(t){g(r(i.prototype),"value",t,this,!0)}},{key:"appendTail",value:function(t){return p(r(i.prototype),"appendTail",this).call(this,t).aggregate(this._appendPlaceholder())}},{key:"_appendEager",value:function(){var t,e=new _,i=null===(t=this._mapPosToBlock(this.value.length))||void 0===t?void 0:t.index;if(null==i)return e;this._blocks[i].isFilled&&++i;for(var s=i;s<this._blocks.length;++s){var n=this._blocks[s]._appendEager();if(!n.inserted)break;e.aggregate(n)}return e}},{key:"_appendCharRaw",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=this._mapPosToBlock(this.value.length),s=new _;if(!i)return s;for(var n=i.index;;++n){var o,a=this._blocks[n];if(!a)break;var r=a._appendChar(t,Object.assign({},e,{_beforeTailState:null===(o=e._beforeTailState)||void 0===o?void 0:o._blocks[n]})),l=r.skip;if(s.aggregate(r),l||r.rawInserted)break}return s}},{key:"extractTail",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length,s=new R;return e===i||this._forEachBlocksInRange(e,i,(function(e,i,n,o){var a=e.extractTail(n,o);a.stop=t._findStopBefore(i),a.from=t._blockStartPos(i),a instanceof R&&(a.blockIndex=i),s.extend(a)})),s}},{key:"extractInput",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(t===e)return"";var s="";return this._forEachBlocksInRange(t,e,(function(t,e,n,o){s+=t.extractInput(n,o,i)})),s}},{key:"_findStopBefore",value:function(t){for(var e,i=0;i<this._stops.length;++i){var s=this._stops[i];if(!(s<=t))break;e=s}return e}},{key:"_appendPlaceholder",value:function(t){var e=this,i=new _;if(this.lazy&&null==t)return i;var s=this._mapPosToBlock(this.value.length);if(!s)return i;var n=s.index,o=null!=t?t:this._blocks.length;return this._blocks.slice(n,o).forEach((function(s){if(!s.lazy||null!=t){var n=null!=s._blocks?[s._blocks.length]:[],o=s._appendPlaceholder.apply(s,n);e._value+=o.inserted,i.aggregate(o)}})),i}},{key:"_mapPosToBlock",value:function(t){for(var e="",i=0;i<this._blocks.length;++i){var s=this._blocks[i],n=e.length;if(t<=(e+=s.value).length)return{index:i,offset:t-n}}}},{key:"_blockStartPos",value:function(t){return this._blocks.slice(0,t).reduce((function(t,e){return t+e.value.length}),0)}},{key:"_forEachBlocksInRange",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length,i=arguments.length>2?arguments[2]:void 0,s=this._mapPosToBlock(t);if(s){var n=this._mapPosToBlock(e),o=n&&s.index===n.index,a=s.offset,r=n&&o?n.offset:this._blocks[s.index].value.length;if(i(this._blocks[s.index],s.index,a,r),n&&!o){for(var l=s.index+1;l<n.index;++l)i(this._blocks[l],l,0,this._blocks[l].value.length);i(this._blocks[n.index],n.index,0,n.offset)}}}},{key:"remove",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length,s=p(r(i.prototype),"remove",this).call(this,t,e);return this._forEachBlocksInRange(t,e,(function(t,e,i,n){s.aggregate(t.remove(i,n))})),s}},{key:"nearestInputPos",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b;if(!this._blocks.length)return 0;var i=new z(this,t);if(e===b)return i.pushRightBeforeInput()?i.pos:(i.popState(),i.pushLeftBeforeInput()?i.pos:this.value.length);if(e===k||e===w){if(e===k){if(i.pushRightBeforeFilled(),i.ok&&i.pos===t)return t;i.popState()}if(i.pushLeftBeforeInput(),i.pushLeftBeforeRequired(),i.pushLeftBeforeFilled(),e===k){if(i.pushRightBeforeInput(),i.pushRightBeforeRequired(),i.ok&&i.pos<=t)return i.pos;if(i.popState(),i.ok&&i.pos<=t)return i.pos;i.popState()}return i.ok?i.pos:e===w?0:(i.popState(),i.ok?i.pos:(i.popState(),i.ok?i.pos:0))}return e===x||e===C?(i.pushRightBeforeInput(),i.pushRightBeforeRequired(),i.pushRightBeforeFilled()?i.pos:e===C?this.value.length:(i.popState(),i.ok?i.pos:(i.popState(),i.ok?i.pos:this.nearestInputPos(t,k)))):t}},{key:"maskedBlock",value:function(t){return this.maskedBlocks(t)[0]}},{key:"maskedBlocks",value:function(t){var e=this,i=this._maskedBlocks[t];return i?i.map((function(t){return e._blocks[t]})):[]}}]),i}(I);q.DEFAULTS={lazy:!0,placeholderChar:"_"},q.STOP_CHAR="`",q.ESCAPE_CHAR="\\",q.InputDefinition=N,q.FixedDefinition=L,M.MaskedPattern=q;var V=function(t){a(i,t);var e=c(i);function i(){return s(this,i),e.apply(this,arguments)}return o(i,[{key:"_matchFrom",get:function(){return this.maxLength-String(this.from).length}},{key:"_update",value:function(t){t=Object.assign({to:this.to||0,from:this.from||0,maxLength:this.maxLength||0},t);var e=String(t.to).length;null!=t.maxLength&&(e=Math.max(e,t.maxLength)),t.maxLength=e;for(var s=String(t.from).padStart(e,"0"),n=String(t.to).padStart(e,"0"),o=0;o<n.length&&n[o]===s[o];)++o;t.mask=n.slice(0,o).replace(/0/g,"\\0")+"0".repeat(e-o),p(r(i.prototype),"_update",this).call(this,t)}},{key:"isComplete",get:function(){return p(r(i.prototype),"isComplete",this)&&Boolean(this.value)}},{key:"boundaries",value:function(t){var e="",i="",s=m(t.match(/^(\D*)(\d*)(\D*)/)||[],3),n=s[1],o=s[2];return o&&(e="0".repeat(n.length)+o,i="9".repeat(n.length)+o),[e=e.padEnd(this.maxLength,"0"),i=i.padEnd(this.maxLength,"9")]}},{key:"doPrepare",value:function(t){var e,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=S(p(r(i.prototype),"doPrepare",this).call(this,t.replace(/\D/g,""),s)),o=m(n,2);if(t=o[0],e=o[1],!this.autofix||!t)return t;var a=String(this.from).padStart(this.maxLength,"0"),l=String(this.to).padStart(this.maxLength,"0"),h=this.value+t;if(h.length>this.maxLength)return"";var u=this.boundaries(h),c=m(u,2),d=c[0],f=c[1];return Number(f)<this.from?a[h.length-1]:Number(d)>this.to?"pad"===this.autofix&&h.length<this.maxLength?["",e.aggregate(this.append(a[h.length-1]+t,s))]:l[h.length-1]:t}},{key:"doValidate",value:function(){var t,e=this.value,s=e.search(/[^0]/);if(-1===s&&e.length<=this._matchFrom)return!0;for(var n=this.boundaries(e),o=m(n,2),a=o[0],l=o[1],h=arguments.length,u=new Array(h),c=0;c<h;c++)u[c]=arguments[c];return this.from<=Number(l)&&Number(a)<=this.to&&(t=p(r(i.prototype),"doValidate",this)).call.apply(t,[this].concat(u))}}]),i}(q);M.MaskedRange=V;var $=function(t){a(i,t);var e=c(i);function i(t){return s(this,i),e.call(this,Object.assign({},i.DEFAULTS,t))}return o(i,[{key:"_update",value:function(t){t.mask===Date&&delete t.mask,t.pattern&&(t.mask=t.pattern);var e=t.blocks;t.blocks=Object.assign({},i.GET_DEFAULT_BLOCKS()),t.min&&(t.blocks.Y.from=t.min.getFullYear()),t.max&&(t.blocks.Y.to=t.max.getFullYear()),t.min&&t.max&&t.blocks.Y.from===t.blocks.Y.to&&(t.blocks.m.from=t.min.getMonth()+1,t.blocks.m.to=t.max.getMonth()+1,t.blocks.m.from===t.blocks.m.to&&(t.blocks.d.from=t.min.getDate(),t.blocks.d.to=t.max.getDate())),Object.assign(t.blocks,this.blocks,e),Object.keys(t.blocks).forEach((function(e){var i=t.blocks[e];!("autofix"in i)&&"autofix"in t&&(i.autofix=t.autofix)})),p(r(i.prototype),"_update",this).call(this,t)}},{key:"doValidate",value:function(){for(var t,e=this.date,s=arguments.length,n=new Array(s),o=0;o<s;o++)n[o]=arguments[o];return(t=p(r(i.prototype),"doValidate",this)).call.apply(t,[this].concat(n))&&(!this.isComplete||this.isDateExist(this.value)&&null!=e&&(null==this.min||this.min<=e)&&(null==this.max||e<=this.max))}},{key:"isDateExist",value:function(t){return this.format(this.parse(t,this),this).indexOf(t)>=0}},{key:"date",get:function(){return this.typedValue},set:function(t){this.typedValue=t}},{key:"typedValue",get:function(){return this.isComplete?p(r(i.prototype),"typedValue",this):null},set:function(t){g(r(i.prototype),"typedValue",t,this,!0)}},{key:"maskEquals",value:function(t){return t===Date||p(r(i.prototype),"maskEquals",this).call(this,t)}}]),i}(q);$.DEFAULTS={pattern:"d{.}`m{.}`Y",format:function(t){return t?[String(t.getDate()).padStart(2,"0"),String(t.getMonth()+1).padStart(2,"0"),t.getFullYear()].join("."):""},parse:function(t){var e=m(t.split("."),3),i=e[0],s=e[1],n=e[2];return new Date(n,s-1,i)}},$.GET_DEFAULT_BLOCKS=function(){return{d:{mask:V,from:1,to:31,maxLength:2},m:{mask:V,from:1,to:12,maxLength:2},Y:{mask:V,from:1900,to:9999}}},M.MaskedDate=$;var Y=function(){function t(){s(this,t)}return o(t,[{key:"selectionStart",get:function(){var t;try{t=this._unsafeSelectionStart}catch(t){}return null!=t?t:this.value.length}},{key:"selectionEnd",get:function(){var t;try{t=this._unsafeSelectionEnd}catch(t){}return null!=t?t:this.value.length}},{key:"select",value:function(t,e){if(null!=t&&null!=e&&(t!==this.selectionStart||e!==this.selectionEnd))try{this._unsafeSelect(t,e)}catch(t){}}},{key:"_unsafeSelect",value:function(t,e){}},{key:"isActive",get:function(){return!1}},{key:"bindEvents",value:function(t){}},{key:"unbindEvents",value:function(){}}]),t}();M.MaskElement=Y;var U=function(t){a(i,t);var e=c(i);function i(t){var n;return s(this,i),(n=e.call(this)).input=t,n._handlers={},n}return o(i,[{key:"rootElement",get:function(){var t,e,i;return null!==(t=null===(e=(i=this.input).getRootNode)||void 0===e?void 0:e.call(i))&&void 0!==t?t:document}},{key:"isActive",get:function(){return this.input===this.rootElement.activeElement}},{key:"_unsafeSelectionStart",get:function(){return this.input.selectionStart}},{key:"_unsafeSelectionEnd",get:function(){return this.input.selectionEnd}},{key:"_unsafeSelect",value:function(t,e){this.input.setSelectionRange(t,e)}},{key:"value",get:function(){return this.input.value},set:function(t){this.input.value=t}},{key:"bindEvents",value:function(t){var e=this;Object.keys(t).forEach((function(s){return e._toggleEventHandler(i.EVENTS_MAP[s],t[s])}))}},{key:"unbindEvents",value:function(){var t=this;Object.keys(this._handlers).forEach((function(e){return t._toggleEventHandler(e)}))}},{key:"_toggleEventHandler",value:function(t,e){this._handlers[t]&&(this.input.removeEventListener(t,this._handlers[t]),delete this._handlers[t]),e&&(this.input.addEventListener(t,e),this._handlers[t]=e)}}]),i}(Y);U.EVENTS_MAP={selectionChange:"keydown",input:"input",drop:"drop",click:"click",focus:"focus",commit:"blur"},M.HTMLMaskElement=U;var K=function(t){a(i,t);var e=c(i);function i(){return s(this,i),e.apply(this,arguments)}return o(i,[{key:"_unsafeSelectionStart",get:function(){var t=this.rootElement,e=t.getSelection&&t.getSelection(),i=e&&e.anchorOffset,s=e&&e.focusOffset;return null==s||null==i||i<s?i:s}},{key:"_unsafeSelectionEnd",get:function(){var t=this.rootElement,e=t.getSelection&&t.getSelection(),i=e&&e.anchorOffset,s=e&&e.focusOffset;return null==s||null==i||i>s?i:s}},{key:"_unsafeSelect",value:function(t,e){if(this.rootElement.createRange){var i=this.rootElement.createRange();i.setStart(this.input.firstChild||this.input,t),i.setEnd(this.input.lastChild||this.input,e);var s=this.rootElement,n=s.getSelection&&s.getSelection();n&&(n.removeAllRanges(),n.addRange(i))}}},{key:"value",get:function(){return this.input.textContent},set:function(t){this.input.textContent=t}}]),i}(U);M.HTMLContenteditableMaskElement=K;var X=["mask"],G=function(){function t(e,i){s(this,t),this.el=e instanceof Y?e:e.isContentEditable&&"INPUT"!==e.tagName&&"TEXTAREA"!==e.tagName?new K(e):new U(e),this.masked=F(i),this._listeners={},this._value="",this._unmaskedValue="",this._saveSelection=this._saveSelection.bind(this),this._onInput=this._onInput.bind(this),this._onChange=this._onChange.bind(this),this._onDrop=this._onDrop.bind(this),this._onFocus=this._onFocus.bind(this),this._onClick=this._onClick.bind(this),this.alignCursor=this.alignCursor.bind(this),this.alignCursorFriendly=this.alignCursorFriendly.bind(this),this._bindEvents(),this.updateValue(),this._onChange()}return o(t,[{key:"mask",get:function(){return this.masked.mask},set:function(t){if(!this.maskEquals(t))if(t instanceof M.Masked||this.masked.constructor!==P(t)){var e=F({mask:t});e.unmaskedValue=this.masked.unmaskedValue,this.masked=e}else this.masked.updateOptions({mask:t})}},{key:"maskEquals",value:function(t){var e;return null==t||(null===(e=this.masked)||void 0===e?void 0:e.maskEquals(t))}},{key:"value",get:function(){return this._value},set:function(t){this.masked.value=t,this.updateControl(),this.alignCursor()}},{key:"unmaskedValue",get:function(){return this._unmaskedValue},set:function(t){this.masked.unmaskedValue=t,this.updateControl(),this.alignCursor()}},{key:"typedValue",get:function(){return this.masked.typedValue},set:function(t){this.masked.typedValue=t,this.updateControl(),this.alignCursor()}},{key:"_bindEvents",value:function(){this.el.bindEvents({selectionChange:this._saveSelection,input:this._onInput,drop:this._onDrop,click:this._onClick,focus:this._onFocus,commit:this._onChange})}},{key:"_unbindEvents",value:function(){this.el&&this.el.unbindEvents()}},{key:"_fireEvent",value:function(t){for(var e=arguments.length,i=new Array(e>1?e-1:0),s=1;s<e;s++)i[s-1]=arguments[s];var n=this._listeners[t];n&&n.forEach((function(t){return t.apply(void 0,i)}))}},{key:"selectionStart",get:function(){return this._cursorChanging?this._changingCursorPos:this.el.selectionStart}},{key:"cursorPos",get:function(){return this._cursorChanging?this._changingCursorPos:this.el.selectionEnd},set:function(t){this.el&&this.el.isActive&&(this.el.select(t,t),this._saveSelection())}},{key:"_saveSelection",value:function(){this.value!==this.el.value&&console.warn("Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly."),this._selection={start:this.selectionStart,end:this.cursorPos}}},{key:"updateValue",value:function(){this.masked.value=this.el.value,this._value=this.masked.value}},{key:"updateControl",value:function(){var t=this.masked.unmaskedValue,e=this.masked.value,i=this.unmaskedValue!==t||this.value!==e;this._unmaskedValue=t,this._value=e,this.el.value!==e&&(this.el.value=e),i&&this._fireChangeEvents()}},{key:"updateOptions",value:function(t){var e=t.mask,i=h(t,X),s=!this.maskEquals(e),n=!T(this.masked,i);s&&(this.mask=e),n&&this.masked.updateOptions(i),(s||n)&&this.updateControl()}},{key:"updateCursor",value:function(t){null!=t&&(this.cursorPos=t,this._delayUpdateCursor(t))}},{key:"_delayUpdateCursor",value:function(t){var e=this;this._abortUpdateCursor(),this._changingCursorPos=t,this._cursorChanging=setTimeout((function(){e.el&&(e.cursorPos=e._changingCursorPos,e._abortUpdateCursor())}),10)}},{key:"_fireChangeEvents",value:function(){this._fireEvent("accept",this._inputEvent),this.masked.isComplete&&this._fireEvent("complete",this._inputEvent)}},{key:"_abortUpdateCursor",value:function(){this._cursorChanging&&(clearTimeout(this._cursorChanging),delete this._cursorChanging)}},{key:"alignCursor",value:function(){this.cursorPos=this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos,k))}},{key:"alignCursorFriendly",value:function(){this.selectionStart===this.cursorPos&&this.alignCursor()}},{key:"on",value:function(t,e){return this._listeners[t]||(this._listeners[t]=[]),this._listeners[t].push(e),this}},{key:"off",value:function(t,e){if(!this._listeners[t])return this;if(!e)return delete this._listeners[t],this;var i=this._listeners[t].indexOf(e);return i>=0&&this._listeners[t].splice(i,1),this}},{key:"_onInput",value:function(t){if(this._inputEvent=t,this._abortUpdateCursor(),!this._selection)return this.updateValue();var e=new A(this.el.value,this.cursorPos,this.value,this._selection),i=this.masked.rawInputValue,s=this.masked.splice(e.startChangePos,e.removed.length,e.inserted,e.removeDirection).offset,n=i===this.masked.rawInputValue?e.removeDirection:b,o=this.masked.nearestInputPos(e.startChangePos+s,n);n!==b&&(o=this.masked.nearestInputPos(o,b)),this.updateControl(),this.updateCursor(o),delete this._inputEvent}},{key:"_onChange",value:function(){this.value!==this.el.value&&this.updateValue(),this.masked.doCommit(),this.updateControl(),this._saveSelection()}},{key:"_onDrop",value:function(t){t.preventDefault(),t.stopPropagation()}},{key:"_onFocus",value:function(t){this.alignCursorFriendly()}},{key:"_onClick",value:function(t){this.alignCursorFriendly()}},{key:"destroy",value:function(){this._unbindEvents(),this._listeners.length=0,delete this.el}}]),t}();M.InputMask=G;var J=function(t){a(i,t);var e=c(i);function i(){return s(this,i),e.apply(this,arguments)}return o(i,[{key:"_update",value:function(t){t.enum&&(t.mask="*".repeat(t.enum[0].length)),p(r(i.prototype),"_update",this).call(this,t)}},{key:"doValidate",value:function(){for(var t,e=this,s=arguments.length,n=new Array(s),o=0;o<s;o++)n[o]=arguments[o];return this.enum.some((function(t){return t.indexOf(e.unmaskedValue)>=0}))&&(t=p(r(i.prototype),"doValidate",this)).call.apply(t,[this].concat(n))}}]),i}(q);M.MaskedEnum=J;var Q=function(t){a(i,t);var e=c(i);function i(t){return s(this,i),e.call(this,Object.assign({},i.DEFAULTS,t))}return o(i,[{key:"_update",value:function(t){p(r(i.prototype),"_update",this).call(this,t),this._updateRegExps()}},{key:"_updateRegExps",value:function(){var t="^"+(this.allowNegative?"[+|\\-]?":""),e=(this.scale?"("+D(this.radix)+"\\d{0,"+this.scale+"})?":"")+"$";this._numberRegExpInput=new RegExp(t+"(0|([1-9]+\\d*))?"+e),this._numberRegExp=new RegExp(t+"\\d*"+e),this._mapToRadixRegExp=new RegExp("["+this.mapToRadix.map(D).join("")+"]","g"),this._thousandsSeparatorRegExp=new RegExp(D(this.thousandsSeparator),"g")}},{key:"_removeThousandsSeparators",value:function(t){return t.replace(this._thousandsSeparatorRegExp,"")}},{key:"_insertThousandsSeparators",value:function(t){var e=t.split(this.radix);return e[0]=e[0].replace(/\B(?=(\d{3})+(?!\d))/g,this.thousandsSeparator),e.join(this.radix)}},{key:"doPrepare",value:function(t){var e;t=t.replace(this._mapToRadixRegExp,this.radix);for(var s=this._removeThousandsSeparators(t),n=arguments.length,o=new Array(n>1?n-1:0),a=1;a<n;a++)o[a-1]=arguments[a];var l=S((e=p(r(i.prototype),"doPrepare",this)).call.apply(e,[this,s].concat(o))),h=m(l,2),u=h[0],c=h[1];return t&&!s&&(c.skip=!0),[u,c]}},{key:"_separatorsCount",value:function(t){for(var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=0,s=0;s<t;++s)this._value.indexOf(this.thousandsSeparator,s)===s&&(++i,e&&(t+=this.thousandsSeparator.length));return i}},{key:"_separatorsCountFromSlice",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._value;return this._separatorsCount(this._removeThousandsSeparators(t).length,!0)}},{key:"extractInput",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length,s=arguments.length>2?arguments[2]:void 0,n=this._adjustRangeWithSeparators(t,e),o=m(n,2);return t=o[0],e=o[1],this._removeThousandsSeparators(p(r(i.prototype),"extractInput",this).call(this,t,e,s))}},{key:"_appendCharRaw",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.thousandsSeparator)return p(r(i.prototype),"_appendCharRaw",this).call(this,t,e);var s=e.tail&&e._beforeTailState?e._beforeTailState._value:this._value,n=this._separatorsCountFromSlice(s);this._value=this._removeThousandsSeparators(this.value);var o=p(r(i.prototype),"_appendCharRaw",this).call(this,t,e);this._value=this._insertThousandsSeparators(this._value);var a=e.tail&&e._beforeTailState?e._beforeTailState._value:this._value,l=this._separatorsCountFromSlice(a);return o.tailShift+=(l-n)*this.thousandsSeparator.length,o.skip=!o.rawInserted&&t===this.thousandsSeparator,o}},{key:"_findSeparatorAround",value:function(t){if(this.thousandsSeparator){var e=t-this.thousandsSeparator.length+1,i=this.value.indexOf(this.thousandsSeparator,e);if(i<=t)return i}return-1}},{key:"_adjustRangeWithSeparators",value:function(t,e){var i=this._findSeparatorAround(t);i>=0&&(t=i);var s=this._findSeparatorAround(e);return s>=0&&(e=s+this.thousandsSeparator.length),[t,e]}},{key:"remove",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.value.length,i=this._adjustRangeWithSeparators(t,e),s=m(i,2);t=s[0],e=s[1];var n=this.value.slice(0,t),o=this.value.slice(e),a=this._separatorsCount(n.length);this._value=this._insertThousandsSeparators(this._removeThousandsSeparators(n+o));var r=this._separatorsCountFromSlice(n);return new _({tailShift:(r-a)*this.thousandsSeparator.length})}},{key:"nearestInputPos",value:function(t,e){if(!this.thousandsSeparator)return t;switch(e){case b:case k:case w:var i=this._findSeparatorAround(t-1);if(i>=0){var s=i+this.thousandsSeparator.length;if(t<s||this.value.length<=s||e===w)return i}break;case x:case C:var n=this._findSeparatorAround(t);if(n>=0)return n+this.thousandsSeparator.length}return t}},{key:"doValidate",value:function(t){var e=(t.input?this._numberRegExpInput:this._numberRegExp).test(this._removeThousandsSeparators(this.value));if(e){var s=this.number;e=e&&!isNaN(s)&&(null==this.min||this.min>=0||this.min<=this.number)&&(null==this.max||this.max<=0||this.number<=this.max)}return e&&p(r(i.prototype),"doValidate",this).call(this,t)}},{key:"doCommit",value:function(){if(this.value){var t=this.number,e=t;null!=this.min&&(e=Math.max(e,this.min)),null!=this.max&&(e=Math.min(e,this.max)),e!==t&&(this.unmaskedValue=String(e));var s=this.value;this.normalizeZeros&&(s=this._normalizeZeros(s)),this.padFractionalZeros&&this.scale>0&&(s=this._padFractionalZeros(s)),this._value=s}p(r(i.prototype),"doCommit",this).call(this)}},{key:"_normalizeZeros",value:function(t){var e=this._removeThousandsSeparators(t).split(this.radix);return e[0]=e[0].replace(/^(\D*)(0*)(\d*)/,(function(t,e,i,s){return e+s})),t.length&&!/\d$/.test(e[0])&&(e[0]=e[0]+"0"),e.length>1&&(e[1]=e[1].replace(/0*$/,""),e[1].length||(e.length=1)),this._insertThousandsSeparators(e.join(this.radix))}},{key:"_padFractionalZeros",value:function(t){if(!t)return t;var e=t.split(this.radix);return e.length<2&&e.push(""),e[1]=e[1].padEnd(this.scale,"0"),e.join(this.radix)}},{key:"unmaskedValue",get:function(){return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix,".")},set:function(t){g(r(i.prototype),"unmaskedValue",t.replace(".",this.radix),this,!0)}},{key:"typedValue",get:function(){return Number(this.unmaskedValue)},set:function(t){g(r(i.prototype),"unmaskedValue",String(t),this,!0)}},{key:"number",get:function(){return this.typedValue},set:function(t){this.typedValue=t}},{key:"allowNegative",get:function(){return this.signed||null!=this.min&&this.min<0||null!=this.max&&this.max<0}}]),i}(I);Q.DEFAULTS={radix:",",thousandsSeparator:"",mapToRadix:["."],scale:2,signed:!1,normalizeZeros:!0,padFractionalZeros:!1},M.MaskedNumber=Q;var Z=function(t){a(i,t);var e=c(i);function i(){return s(this,i),e.apply(this,arguments)}return o(i,[{key:"_update",value:function(t){t.mask&&(t.validate=t.mask),p(r(i.prototype),"_update",this).call(this,t)}}]),i}(I);M.MaskedFunction=Z;var tt=["compiledMasks","currentMaskRef","currentMask"],et=function(t){a(i,t);var e=c(i);function i(t){var n;return s(this,i),(n=e.call(this,Object.assign({},i.DEFAULTS,t))).currentMask=null,n}return o(i,[{key:"_update",value:function(t){p(r(i.prototype),"_update",this).call(this,t),"mask"in t&&(this.compiledMasks=Array.isArray(t.mask)?t.mask.map((function(t){return F(t)})):[])}},{key:"_appendCharRaw",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=this._applyDispatch(t,e);return this.currentMask&&i.aggregate(this.currentMask._appendChar(t,e)),i}},{key:"_applyDispatch",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.tail&&null!=e._beforeTailState?e._beforeTailState._value:this.value,s=this.rawInputValue,n=e.tail&&null!=e._beforeTailState?e._beforeTailState._rawInputValue:s,o=s.slice(n.length),a=this.currentMask,r=new _,l=a&&a.state;if(this.currentMask=this.doDispatch(t,Object.assign({},e)),this.currentMask)if(this.currentMask!==a){if(this.currentMask.reset(),n){var h=this.currentMask.append(n,{raw:!0});r.tailShift=h.inserted.length-i.length}o&&(r.tailShift+=this.currentMask.append(o,{raw:!0,tail:!0}).tailShift)}else this.currentMask.state=l;return r}},{key:"_appendPlaceholder",value:function(){var t=this._applyDispatch.apply(this,arguments);return this.currentMask&&t.aggregate(this.currentMask._appendPlaceholder()),t}},{key:"_appendEager",value:function(){var t=this._applyDispatch.apply(this,arguments);return this.currentMask&&t.aggregate(this.currentMask._appendEager()),t}},{key:"doDispatch",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.dispatch(t,this,e)}},{key:"doValidate",value:function(){for(var t,e,s=arguments.length,n=new Array(s),o=0;o<s;o++)n[o]=arguments[o];return(t=p(r(i.prototype),"doValidate",this)).call.apply(t,[this].concat(n))&&(!this.currentMask||(e=this.currentMask).doValidate.apply(e,n))}},{key:"reset",value:function(){var t;null===(t=this.currentMask)||void 0===t||t.reset(),this.compiledMasks.forEach((function(t){return t.reset()}))}},{key:"value",get:function(){return this.currentMask?this.currentMask.value:""},set:function(t){g(r(i.prototype),"value",t,this,!0)}},{key:"unmaskedValue",get:function(){return this.currentMask?this.currentMask.unmaskedValue:""},set:function(t){g(r(i.prototype),"unmaskedValue",t,this,!0)}},{key:"typedValue",get:function(){return this.currentMask?this.currentMask.typedValue:""},set:function(t){var e=String(t);this.currentMask&&(this.currentMask.typedValue=t,e=this.currentMask.unmaskedValue),this.unmaskedValue=e}},{key:"isComplete",get:function(){var t;return Boolean(null===(t=this.currentMask)||void 0===t?void 0:t.isComplete)}},{key:"isFilled",get:function(){var t;return Boolean(null===(t=this.currentMask)||void 0===t?void 0:t.isFilled)}},{key:"remove",value:function(){var t,e=new _;return this.currentMask&&e.aggregate((t=this.currentMask).remove.apply(t,arguments)).aggregate(this._applyDispatch()),e}},{key:"state",get:function(){return Object.assign({},p(r(i.prototype),"state",this),{_rawInputValue:this.rawInputValue,compiledMasks:this.compiledMasks.map((function(t){return t.state})),currentMaskRef:this.currentMask,currentMask:this.currentMask&&this.currentMask.state})},set:function(t){var e=t.compiledMasks,s=t.currentMaskRef,n=t.currentMask,o=h(t,tt);this.compiledMasks.forEach((function(t,i){return t.state=e[i]})),null!=s&&(this.currentMask=s,this.currentMask.state=n),g(r(i.prototype),"state",o,this,!0)}},{key:"extractInput",value:function(){var t;return this.currentMask?(t=this.currentMask).extractInput.apply(t,arguments):""}},{key:"extractTail",value:function(){for(var t,e,s=arguments.length,n=new Array(s),o=0;o<s;o++)n[o]=arguments[o];return this.currentMask?(t=this.currentMask).extractTail.apply(t,n):(e=p(r(i.prototype),"extractTail",this)).call.apply(e,[this].concat(n))}},{key:"doCommit",value:function(){this.currentMask&&this.currentMask.doCommit(),p(r(i.prototype),"doCommit",this).call(this)}},{key:"nearestInputPos",value:function(){for(var t,e,s=arguments.length,n=new Array(s),o=0;o<s;o++)n[o]=arguments[o];return this.currentMask?(t=this.currentMask).nearestInputPos.apply(t,n):(e=p(r(i.prototype),"nearestInputPos",this)).call.apply(e,[this].concat(n))}},{key:"overwrite",get:function(){return this.currentMask?this.currentMask.overwrite:p(r(i.prototype),"overwrite",this)},set:function(t){console.warn('"overwrite" option is not available in dynamic mask, use this option in siblings')}},{key:"eager",get:function(){return this.currentMask?this.currentMask.eager:p(r(i.prototype),"eager",this)},set:function(t){console.warn('"eager" option is not available in dynamic mask, use this option in siblings')}},{key:"maskEquals",value:function(t){return Array.isArray(t)&&this.compiledMasks.every((function(e,i){var s;return e.maskEquals(null===(s=t[i])||void 0===s?void 0:s.mask)}))}}]),i}(I);et.DEFAULTS={dispatch:function(t,e,i){if(e.compiledMasks.length){var s=e.rawInputValue,n=e.compiledMasks.map((function(e,n){return e.reset(),e.append(s,{raw:!0}),e.append(t,i),{weight:e.rawInputValue.length,index:n}}));return n.sort((function(t,e){return e.weight-t.weight})),e.compiledMasks[n[0].index]}}},M.MaskedDynamic=et;var it={MASKED:"value",UNMASKED:"unmaskedValue",TYPED:"typedValue"};function st(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:it.MASKED,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:it.MASKED,s=F(t);return function(t){return s.runIsolated((function(s){return s[e]=t,s[i]}))}}M.PIPE_TYPE=it,M.createPipe=st,M.pipe=function(t){for(var e=arguments.length,i=new Array(e>1?e-1:0),s=1;s<e;s++)i[s-1]=arguments[s];return st.apply(void 0,i)(t)};try{globalThis.IMask=M}catch(t){}let nt=document.querySelectorAll(".input"),ot=t=>M(t,{mask:"ДД.ММ.ГГГГ",blocks:{ГГГГ:{mask:"0000"},ММ:{mask:M.MaskedRange,from:1,to:12},ДД:{mask:M.MaskedRange,from:1,to:31}}});for(let t of nt){let e=t.querySelector(".input__shell").querySelector(".input__inside");"date"===e.dataset.mask&&ot(e)}var at=i(545);const rt=i.n(at)();let lt=document.querySelectorAll(".calendar");function ht(t){return t<10?"0"+t:t}for(let t of lt){let e=t.querySelectorAll(".calendar__input"),i=t.querySelectorAll("input"),s=t.querySelector(".calendar__datepicker"),n=(t,e)=>{t.classList.contains("calendar__datepicker_visible")||1==e?t.classList.remove("calendar__datepicker_visible"):t.classList.add("calendar__datepicker_visible")},o={content:"применить",className:"calendar__button-confirm",onClick:t=>{if(i.length>1){for(let e of[0,1])t.selectedDates[e]&&(i[e].value=ht(t.selectedDates[e].getDate())+"."+ht(+t.selectedDates[e].getMonth()+1)+"."+t.selectedDates[e].getFullYear());t.selectedDates&&(t.$datepicker.parentElement.dataset.selectedDays=(t.selectedDates[1]?.getTime()-t.selectedDates[0]?.getTime())/864e5),s.dispatchEvent(new Event("change"))}else i[0].value=t.formatDate(t.selectedDates[0],"dd MMM")+" - "+t.formatDate(t.selectedDates[1],"dd MMM");n(s,!0)}},a=new rt(s,{navTitles:{days:"MMMM yyyy"},range:!0,buttons:[{content:"очистить",className:"calendar__button-clear",onClick:t=>{t.clear();for(let t of i)t.value=""}},o]});for(let t of e)t.onclick=()=>{n(s)},t.onkeydown=t=>{"Enter"==t.key&&n(s)};let r=Array.from(e),l=t=>{s.classList.contains("calendar__datepicker_visible")&&(s.contains(t.target)||r.some((e=>e.contains(t.target)))||s.classList.remove("calendar__datepicker_visible"))};document.body.addEventListener("mousedown",(t=>{l(t)})),document.body.addEventListener("keydown",(t=>{"Enter"==t.key&&l(t)}));let h=a.$datepicker.querySelectorAll(".air-datepicker-nav--action");for(let t of h){let e=document.createElement("button"),i=document.createElement("button");switch(e.classList.add("material-icons"),e.innerHTML="arrow_back",i.classList.add("material-icons"),i.innerHTML="arrow_forward",t.dataset.action){case"prev":t.replaceChildren(e);break;case"next":t.replaceChildren(i)}}a.selectDate(t.dataset.dates?.split("-")),a.setViewDate(t.dataset.dates?.split("-")[1]),""==t.dataset.dates?.split("-")[1]&&a.setViewDate(t.dataset.dates?.split("-")[0]),t.dataset.dates&&a.$datepicker.querySelector(".calendar__button-confirm").dispatchEvent(new Event("click"))}let ut=document.querySelectorAll(".dropdown");for(let t of ut){let e=t.querySelector(".dropdown__shell"),i=e.querySelector(".dropdown__inside"),s=t.querySelector(".dropdown__submenu"),n=s.querySelectorAll(".dropdown__count"),o=s.querySelector(".dropdown__button-clear"),a=s.querySelector(".dropdown__button-confirm");"guests"==i.dataset.dropdownType&&(o.onclick=()=>{for(let t of n)t.textContent=0,t.dispatchEvent(new Event("change")),i.value="",o.classList.remove("dropdown__button_visible")},a.onclick=()=>{i.value=i.dataset.sum,i.value=i.value.charAt(0).toUpperCase()+i.value.slice(1),s.classList.contains("dropdown__submenu_visible")&&!s.classList.contains("dropdown__submenu_solid")&&(s.classList.remove("dropdown__submenu_visible"),s.classList.remove("dropdown__submenu_solid"),setTimeout((()=>{e.classList.remove("dropdown__shell_focused"),e.classList.remove("dropdown__shell_solid")}),100))});const r=()=>{s.classList.contains("dropdown__submenu_visible")||s.classList.contains("dropdown__submenu_solid")?(s.classList.remove("dropdown__submenu_visible"),s.classList.remove("dropdown__submenu_solid"),setTimeout((()=>{e.classList.remove("dropdown__shell_focused"),e.classList.remove("dropdown__shell_solid")}),100)):(e.classList.add("dropdown__shell_focused"),s.classList.add("dropdown__submenu_visible"))};e.onclick=()=>{r()},e.onkeydown=t=>{"Enter"==t.key&&r()},document.body.addEventListener("mousedown",(t=>{s.classList.contains("dropdown__submenu_visible")&&(s.contains(t.target)||e.contains(t.target)||(s.classList.remove("dropdown__submenu_visible"),setTimeout((()=>{e.classList.remove("dropdown__shell_focused")}),100)))}));for(let e of n)e.nextSibling.onclick=()=>{e.textContent++,e.dispatchEvent(new Event("change"))},e.previousSibling.onclick=()=>{e.textContent>0&&e.textContent--,e.dispatchEvent(new Event("change"))},0==e.textContent&&(e.previousSibling.disabled=!0),e.onchange=()=>{o&&n.forEach((t=>{+t.textContent>0&&!o.classList.contains("dropdown__button_visible")&&o.classList.add("dropdown__button_visible")})),e.textContent>0?e.previousSibling.disabled=!1:e.previousSibling.disabled=!0;let a=[2,0,1,1,1,2],r=[],l=s.querySelectorAll(".dropdown__counter"),h={};for(let t of l)h.hasOwnProperty(t.parentElement.dataset.variants.split(",")[0])?h[t.parentElement.dataset.variants.split(",")[0]].count=+h[t.parentElement.dataset.variants.split(",")[0]].count+ +t.querySelector(".dropdown__count").textContent:h[t.parentElement.dataset.variants.split(",")[0]]={variants:t.parentElement.dataset.variants.split(","),count:t.querySelector(".dropdown__count").textContent};for(let e of Object.keys(h))h[e].count>0?r.push(h[e].count+" "+h[e].variants[h[e].count%100>4&&h[e].count%100<20?2:a[h[e].count%10<5?h[e].count%10:5]]):"guests"!=t.dataset.dropdownType&&r.push("нет "+h[e].variants[2]);"guests"!=t.dataset.dropdownType?(i.value=r.join(", "),i.value=i.value.charAt(0).toUpperCase()+i.value.slice(1)):i.dataset.sum=r.join(", ")},e.dispatchEvent(new Event("change")),a?.dispatchEvent(new Event("click"))}var ct=i(755),dt=i.n(ct);i(559);let pt=document.querySelectorAll(".range");for(let t of pt){let e=t.querySelector(".range__slider"),i=t.querySelector(".range__value");i.textContent=t.dataset.defaultMin+"₽ - "+t.dataset.defaultMax+"₽",dt()(e).slider({range:!0,max:dt()(t).data("max"),step:dt()(t).data("step"),values:[dt()(t).data("default-min"),dt()(t).data("default-max")],slide:(e,s)=>{dt()(i).html(s.values[0]+dt()(t).data("symbol")+" - "+s.values[1]+dt()(t).data("symbol"))}})}let ft=document.querySelectorAll(".checkbox");for(let t of ft){let e=t.querySelectorAll(".checkbox__block");if(t.querySelector(".checkbox__shell")){let e=t.querySelector(".checkbox__shell"),i=t.querySelector(".checkbox__list"),s=t.querySelector(".checkbox__arrow"),n=()=>{i.classList.contains("checkbox__list_visible")?(i.classList.remove("checkbox__list_visible"),s.classList.remove("checkbox__arrow_rotate")):(i.classList.add("checkbox__list_visible"),s.classList.add("checkbox__arrow_rotate"))};e.onclick=()=>{n()},e.onkeydown=t=>{"Enter"==t.key&&n()}}for(let t of e){let e=t.querySelector(".checkbox__field_hidden"),i=t.querySelector(".checkbox__field_visible"),s=t.querySelector(".checkbox__flag");!0===e.checked&&(i.classList.add("checkbox__field_checked"),s.classList.add("checkbox__flag_visible")),e.onchange=()=>{e.checked?(i.classList.add("checkbox__field_checked"),s.classList.add("checkbox__flag_visible")):(i.classList.remove("checkbox__field_checked"),s.classList.remove("checkbox__flag_visible"))}}}let gt=document.querySelectorAll(".pagination");for(let t of gt){let e=t.querySelectorAll(".pagination__number"),i=t.querySelector(".pagination__number_current"),s=t.querySelector(".pagination__arrow"),n=t.querySelector(".pagination__info"),o=t.querySelector(".pagination__pages"),a=(t,e)=>{for(let e of t)e.classList.contains("pagination__number_current")&&e.classList.remove("pagination__number_current");e.classList.add("pagination__number_current");let i=o.dataset.allItemsCount>100?"100+":o.dataset.allItemsCount,s=+e.textContent*o.dataset.pageItemsCount-o.dataset.pageItemsCount+1,a=s+ +o.dataset.pageItemsCount-1;return e==t[t.length-1]?n.textContent=s+"-"+o.dataset.allItemsCount+" из "+i+" вариантов аренды":n.textContent=s+"-"+a+" из "+i+" вариантов аренды",e},r=(t,e)=>{let i=+t[t.length-1].textContent-+e.textContent>2,s=+e.textContent-+t[0].textContent>2,n=t[0].parentElement.querySelectorAll(".pagination__number_fake");for(let e of n)t[0].parentElement.removeChild(e);let o=document.createElement("span");o.classList.add("pagination__item","pagination__number_fake","unselect");let a=o.cloneNode(!0);for(let e of t)e.classList.contains("pagination__number_hidden")&&e.classList.remove("pagination__number_hidden");let r=(i,s)=>{t[+e.textContent-1+s].after(i);for(let i=+e.textContent-1+s+1;i<t.length-1;i++)t[i].classList.add("pagination__number_hidden")},l=(i,s)=>{t[+e.textContent-1-s].before(i);for(let i=+e.textContent-1-s-1;i>0;i--)t[i].classList.add("pagination__number_hidden")};i&&!s?r(o,2):s&&!i?l(o,2):i&&s&&(r(o,1),l(a,1))};i||(i=a(e,e[0])),r(e,i);for(let t of e)t.onclick=()=>{i=a(e,t),r(e,i)},t.onkeydown=s=>{"Enter"==s.key&&(i=a(e,t),r(e,i))};s.onclick=()=>{i!=e[e.length-1]&&(i=a(e,e[+i.textContent]),r(e,i))}}let mt=document.querySelectorAll(".rate");for(let t of mt){let e=t.querySelectorAll(".rate__star");for(let i=0;i<e.length;i++)i<t.dataset.rating?e[i].textContent="star":e[i].textContent="star_border";t.onmouseout=()=>{for(let i=0;i<e.length;i++)i<t.dataset.rating?e[i].textContent="star":e[i].textContent="star_border"};for(let i of e)i.onmouseover=()=>{for(let t=0;t<e.length;t++)t<=i.dataset.number?e[t].textContent="star":e[t].textContent="star_border"},i.onclick=()=>{t.dataset.rating=+i.dataset.number+1}}const vt=JSON.parse('[{"number":888,"images":["888_1.png","888_2.png","888_3.png","888_1.png"],"cost":9990,"luxe":true,"reviews":145,"rating":5},{"number":840,"images":["840.png","840.png","840.png","840.png"],"cost":9900,"reviews":65,"rating":4},{"number":980,"images":["980.png","980.png","980.png","980.png"],"cost":8500,"reviews":35,"rating":3},{"number":856,"images":["856.png","856.png","856.png","856.png"],"cost":7300,"reviews":19,"rating":5},{"number":740,"images":["740.png","740.png","740.png","740.png"],"cost":6000,"reviews":44,"rating":4},{"number":982,"images":["982.png","982.png","982.png","982.png"],"cost":5800,"reviews":56,"rating":3},{"number":678,"images":["678.png","678.png","678.png","678.png"],"cost":5500,"reviews":45,"rating":5},{"number":450,"images":["450.png","450.png","450.png","450.png"],"cost":5300,"reviews":39,"rating":4},{"number":350,"images":["350.png","350.png","350.png","350.png"],"cost":5000,"reviews":77,"rating":3},{"number":666,"images":["666.png","666.png","666.png","666.png"],"cost":5000,"reviews":25,"rating":5},{"number":444,"images":["444.png","444.png","444.png","444.png"],"cost":5000,"reviews":15,"rating":3},{"number":352,"images":["352.png","352.png","352.png","352.png"],"cost":5000,"reviews":55,"rating":3}]');let _t=document.querySelectorAll(".room");for(let t of _t){let e=Array.from(t.querySelectorAll(".room__selector-item")),s=t.querySelector(".room__image"),n=t.querySelector(".room__prev"),o=t.querySelector(".room__next"),a=t.dataset.number,r=vt.find((t=>t.number==a)),l=t=>"url("+i(594)("./"+r.images.at(t))+")";s.style.backgroundImage=l(0),e[0].classList.add("room__selector-item_active");for(let t in e)e[t].onclick=()=>{e.forEach((t=>t.classList.contains("room__selector-item_active")&&t.classList.remove("room__selector-item_active"))),e[t].classList.add("room__selector-item_active"),s.style.backgroundImage=l(t)};let h=t=>{for(let i in e)if(e[i].classList.contains("room__selector-item_active")){if(e[i].classList.remove("room__selector-item_active"),s.style.backgroundImage=l(i),0==i&&"prev"==t)e.at(-1).classList.add("room__selector-item_active"),s.style.backgroundImage=l(-1);else if(i==e.length-1&&"next"==t)e.at(0).classList.add("room__selector-item_active"),s.style.backgroundImage=l(0);else{let n="prev"==t?+i-1:+i+1;e[n].classList.add("room__selector-item_active"),s.style.backgroundImage=l(n)}break}};n.onclick=()=>{h("prev")},n.onkeydown=t=>{"Enter"==t.key&&h("prev")},o.onclick=()=>{h("next")},o.onkeydown=t=>{"Enter"==t.key&&h("next")}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,